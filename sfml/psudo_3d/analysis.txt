Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls  us/call  us/call  name    
100.00      0.01     0.01      873    11.45    11.45  __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator++()
  0.00      0.01     0.00 209902264     0.00     0.00  trig::Vector2<int>::Vector2(int, int)
  0.00      0.01     0.00 195095688     0.00     0.00  MyWorld::get_pixel_color(trig::Vector2<int> const&, RaycastEngine::CellSide, float, float, float)
  0.00      0.01     0.00 186134655     0.00     0.00  trig::Vector2<float>::operator trig::Vector2<int>() const
  0.00      0.01     0.00 57869998     0.00     0.00  RaycastEngine::sample_image(float, float, sf::Image const&)
  0.00      0.01     0.00  5454356     0.00     0.00  DynamicGrid<bool>::out_of_bounds(int, int) const
  0.00      0.01     0.00  5362486     0.00     0.00  MyWorld::out_of_bounds(trig::Vector2<int> const&)
  0.00      0.01     0.00  5362022     0.00     0.00  DynamicGrid<bool>::get_width() const
  0.00      0.01     0.00  5340855     0.00     0.00  std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long)
  0.00      0.01     0.00  5334303     0.00     0.00  std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int)
  0.00      0.01     0.00  5329406     0.00     0.00  DynamicGrid<bool>::get_height() const
  0.00      0.01     0.00  5326409     0.00     0.00  std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int)
  0.00      0.01     0.00  5322174     0.00     0.00  std::vector<bool, std::allocator<bool> >::operator[](unsigned long long) const
  0.00      0.01     0.00  5320347     0.00     0.00  std::_Bit_reference::operator bool() const
  0.00      0.01     0.00  5318550     0.00     0.00  std::_Bit_const_iterator::operator*() const
  0.00      0.01     0.00  5311844     0.00     0.00  DynamicGrid<bool>::index(int, int) const
  0.00      0.01     0.00  5287599     0.00     0.00  MyWorld::is_solid(trig::Vector2<int> const&)
  0.00      0.01     0.00  1625274     0.00     0.00  trig::Vector2<float>::Vector2(float, float)
  0.00      0.01     0.00   527176     0.00     0.00  std::__array_traits<float, 2ull>::_S_ref(float const (&) [2], unsigned long long)
  0.00      0.01     0.00   468094     0.00     0.00  std::array<float, 2ull>::operator[](unsigned long long)
  0.00      0.01     0.00   460205     0.00     0.00  trig::Vector2<float>::operator+(trig::Vector2<float> const&) const
  0.00      0.01     0.00   450018     0.00     0.00  std::abs(float)
  0.00      0.01     0.00   285610     0.00     0.00  trig::Vector2<float>::operator*(float) const
  0.00      0.01     0.00   272273     0.00     0.00  trig::Vector2<int>::operator trig::Vector2<float>() const
  0.00      0.01     0.00   263755     0.00     0.00  trig::Vector2<float>::Vector2()
  0.00      0.01     0.00   247519     0.00     0.00  trig::Vector2<float>::Vector2(float)
  0.00      0.01     0.00   227110     0.00     0.00  trig::Vector2<int>::Vector2()
  0.00      0.01     0.00   202663     0.00     0.00  RaycastEngine::get_distance(float)
  0.00      0.01     0.00   122059     0.00     0.00  main
  0.00      0.01     0.00    44468     0.00     0.00  __gcc_deregister_frame
  0.00      0.01     0.00    18969     0.00     0.00  std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&)
  0.00      0.01     0.00     8607     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count()
  0.00      0.01     0.00     7799     0.00     0.00  std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>&)
  0.00      0.01     0.00     7794     0.00     0.00  std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     6931     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     6916     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false>&)
  0.00      0.01     0.00     6850     0.00     0.00  operator new(unsigned long long, void*)
  0.00      0.01     0.00     6042     0.00     0.00  std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&)
  0.00      0.01     0.00     5179     0.00     0.00  std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&)
  0.00      0.01     0.00     5171     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>&)
  0.00      0.01     0.00     5171     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     5159     0.00     0.00  std::__future_base::_Result<sf::Image>*& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     5132     0.00     0.00  std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     5083     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr()
  0.00      0.01     0.00     5073     0.00     0.00  std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  0.00      0.01     0.00     5043     0.00     0.00  std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
  0.00      0.01     0.00     5004     0.00     0.00  std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
  0.00      0.01     0.00     4317     0.00     0.00  __gnu_cxx::new_allocator<int>::~new_allocator()
  0.00      0.01     0.00     4317     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count()
  0.00      0.01     0.00     4313     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&)
  0.00      0.01     0.00     4302     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_tail(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     4272     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release()
  0.00      0.01     0.00     3480     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::base() const
  0.00      0.01     0.00     3474     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > std::__miter_base<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >)
  0.00      0.01     0.00     3465     0.00     0.00  unsigned char const* std::__niter_base<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >)
  0.00      0.01     0.00     3461     0.00     0.00  __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::__normal_iterator(unsigned char const* const&)
  0.00      0.01     0.00     3461     0.00     0.00  std::__future_base::_Result_base*&& std::forward<std::__future_base::_Result_base*>(std::remove_reference<std::__future_base::_Result_base*>::type&)
  0.00      0.01     0.00     3460     0.00     0.00  std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00     3455     0.00     0.00  std::__future_base::_Result_base::_Deleter& std::__get_helper<1ull, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     3451     0.00     0.08  std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.01     0.00     3438     0.00     0.00  std::mutex::unlock()
  0.00      0.01     0.00     3437     0.00     0.08  std::shared_ptr<std::packaged_task<sf::Image ()> >::~shared_ptr()
  0.00      0.01     0.00     3426     0.00     0.00  __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&)
  0.00      0.01     0.00     3426     0.00     0.00  std::unique_lock<std::mutex>::lock()
  0.00      0.01     0.00     3422     0.00     0.00  __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::~new_allocator()
  0.00      0.01     0.00     3412     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&)
  0.00      0.01     0.00     3407     0.00     0.00  std::_Any_data::_M_access()
  0.00      0.01     0.00     3398     0.00     0.00  std::mutex::lock()
  0.00      0.01     0.00     3391     0.00     0.00  std::__future_base::_Result<sf::Image>* const& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&)
  0.00      0.01     0.00     3388     0.00     0.00  std::mutex* std::__addressof<std::mutex>(std::mutex&)
  0.00      0.01     0.00     3387     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&)
  0.00      0.01     0.00     3387     0.00     0.00  std::unique_lock<std::mutex>::unlock()
  0.00      0.01     0.00     3380     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false> const&)
  0.00      0.01     0.00     3380     0.00     0.00  std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&)
  0.00      0.01     0.00     3376     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get() const
  0.00      0.01     0.00     3370     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() const
  0.00      0.01     0.00     3362     0.00     0.04  std::_Function_base::~_Function_base()
  0.00      0.01     0.00     3346     0.00     0.00  std::unique_lock<std::mutex>::unique_lock(std::mutex&)
  0.00      0.01     0.00     3335     0.00     0.00  std::_Function_base::_Function_base()
  0.00      0.01     0.00     3293     0.00     0.00  std::unique_lock<std::mutex>::~unique_lock()
  0.00      0.01     0.00     2617     0.00     0.00  std::remove_reference<std::__future_base::_State_baseV2*&>::type&& std::move<std::__future_base::_State_baseV2*&>(std::__future_base::_State_baseV2*&)
  0.00      0.01     0.00     2610     0.00     0.00  __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00     2601     0.00     0.00  std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     2596     0.00     0.00  std::__future_base::_Result_base*& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     2591     0.00     0.00  std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00     2589     0.00     0.00  std::tuple_element<1ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     2588     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release()
  0.00      0.01     0.00     2587     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr()
  0.00      0.01     0.00     2586     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     2584     0.00     0.00  __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_addr()
  0.00      0.01     0.00     2583     0.00     0.00  __gnu_cxx::__aligned_buffer<sf::Image>::_M_addr()
  0.00      0.01     0.00     2583     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_deleter()
  0.00      0.01     0.00     2581     0.00     0.00  std::__future_base::_Result<sf::Image>*& std::forward<std::__future_base::_Result<sf::Image>*&>(std::remove_reference<std::__future_base::_Result<sf::Image>*&>::type&)
  0.00      0.01     0.00     2576     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr()
  0.00      0.01     0.00     2570     0.00     0.00  __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_ptr()
  0.00      0.01     0.00     2569     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.01     0.00     2569     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy()
  0.00      0.01     0.00     2564     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&)
  0.00      0.01     0.00     2562     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr()
  0.00      0.01     0.00     2561     0.00     0.00  std::remove_reference<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     2558     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr()
  0.00      0.01     0.00     2554     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get_deleter()
  0.00      0.01     0.00     2551     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.01     0.00     2549     0.00     0.00  std::allocator<std::packaged_task<sf::Image ()> >::~allocator()
  0.00      0.01     0.00     2547     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const
  0.00      0.01     0.00     2536     0.00     0.00  std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.00      0.01     0.00     2536     0.00     0.00  std::future<sf::Image>&& std::forward<std::future<sf::Image> >(std::remove_reference<std::future<sf::Image> >::type&)
  0.00      0.01     0.00     2521     0.00     0.00  std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00      0.01     0.00     2482     0.00     0.04  std::function<void ()>::~function()
  0.00      0.01     0.00     2406     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&)
  0.00      0.01     0.00     2396     0.00     0.00  std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&)
  0.00      0.01     0.00     2374     0.00     0.00  bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&)
  0.00      0.01     0.00     2338     0.00     0.00  __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::base() const
  0.00      0.01     0.00     2274     0.00     0.00  __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::__normal_iterator(std::future<sf::Image>* const&)
  0.00      0.01     0.00     1753     0.00     0.00  std::allocator<int>::~allocator()
  0.00      0.01     0.00     1751     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&)
  0.00      0.01     0.00     1744     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::~unique_ptr()
  0.00      0.01     0.00     1741     0.00     0.00  unsigned char* std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)
  0.00      0.01     0.00     1738     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base()
  0.00      0.01     0.00     1736     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00     1734     0.00     0.00  std::vector<unsigned char, std::allocator<unsigned char> >::begin() const
  0.00      0.01     0.00     1734     0.00     0.00  std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00     1733     0.00     0.00  unsigned char* std::copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
  0.00      0.01     0.00     1732     0.00     0.00  std::remove_reference<std::shared_ptr<std::packaged_task<sf::Image ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<sf::Image ()> >&>(std::shared_ptr<std::packaged_task<sf::Image ()> >&)
  0.00      0.01     0.00     1731     0.00     0.00  std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      0.01     0.00     1729     0.00     0.00  unsigned char* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, unsigned char>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, std::allocator<unsigned char>&)
  0.00      0.01     0.00     1729     0.00     0.00  std::remove_reference<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     1728     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator()
  0.00      0.01     0.00     1728     0.00     0.00  std::vector<unsigned char, std::allocator<unsigned char> >::end() const
  0.00      0.01     0.00     1728     0.00     0.00  std::vector<unsigned char, std::allocator<unsigned char> >::size() const
  0.00      0.01     0.00     1728     0.00     0.00  std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00     1728     0.00     0.00  unsigned char* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
  0.00      0.01     0.00     1728     0.00     0.00  unsigned char* std::__niter_base<unsigned char*>(unsigned char*)
  0.00      0.01     0.00     1727     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<unsigned char>, unsigned char>::_S_select_on_copy(std::allocator<unsigned char> const&)
  0.00      0.01     0.00     1727     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base()
  0.00      0.01     0.00     1727     0.00     0.00  std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00     1726     0.00     0.00  unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
  0.00      0.01     0.00     1725     0.00     0.00  std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00     1724     0.00     0.00  __gnu_cxx::new_allocator<unsigned char>::max_size() const
  0.00      0.01     0.00     1723     0.00     0.00  std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> >&&)
  0.00      0.01     0.00     1722     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&)
  0.00      0.01     0.00     1722     0.00     0.00  std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator()
  0.00      0.01     0.00     1722     0.00     0.00  std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long long)
  0.00      0.01     0.00     1721     0.00     0.00  std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned long long, std::allocator<unsigned char> const&)
  0.00      0.01     0.00     1721     0.00     0.00  std::__basic_future<sf::Image>::~__basic_future()
  0.00      0.01     0.00     1721     0.00     0.00  unsigned char* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
  0.00      0.01     0.00     1720     0.00     0.00  std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&)
  0.00      0.01     0.00     1720     0.00     0.00  std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&)
  0.00      0.01     0.00     1719     0.00     0.00  std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned long long)
  0.00      0.01     0.00     1718     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false> const&)
  0.00      0.01     0.00     1718     0.00     0.00  std::future<sf::Image>::~future()
  0.00      0.01     0.00     1717     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const
  0.00      0.01     0.00     1717     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00     1716     0.00     0.00  __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long long, void const*)
  0.00      0.01     0.00     1716     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const
  0.00      0.01     0.00     1716     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00     1716     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator=(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00     1715     0.00     0.00  __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator*() const
  0.00      0.01     0.00     1713     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00     1713     0.00     0.00  unsigned char* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*)
  0.00      0.01     0.00     1713     0.00     0.00  std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long long)
  0.00      0.01     0.00     1713     0.00     0.00  std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&)
  0.00      0.01     0.00     1713     0.00     0.00  std::__future_base::_Result_base* const& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
  0.00      0.01     0.00     1712     0.00     0.00  std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.00      0.01     0.00     1711     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
  0.00      0.01     0.00     1711     0.00     0.00  void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.00      0.01     0.00     1711     0.00     0.00  std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction(std::allocator<unsigned char> const&)
  0.00      0.01     0.00     1710     0.00     0.00  __gnu_cxx::__aligned_buffer<sf::Image>::_M_ptr()
  0.00      0.01     0.00     1710     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      0.01     0.00     1708     0.00     0.00  std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base()
  0.00      0.01     0.00     1708     0.00     0.00  std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl()
  0.00      0.01     0.00     1707     0.00     0.00  std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00      0.01     0.00     1705     0.00     0.00  std::allocator<int>::allocator(std::allocator<int> const&)
  0.00      0.01     0.00     1705     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.00      0.01     0.00     1705     0.00     0.00  std::remove_reference<std::shared_ptr<std::__future_base::_State_baseV2>&>::type&& std::move<std::shared_ptr<std::__future_base::_State_baseV2>&>(std::shared_ptr<std::__future_base::_State_baseV2>&)
  0.00      0.01     0.00     1704     0.00     0.00  std::allocator<int>::allocator(std::allocator<int> const&)
  0.00      0.01     0.00     1704     0.00     0.00  std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
  0.00      0.01     0.00     1702     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr()
  0.00      0.01     0.00     1701     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>&)
  0.00      0.01     0.00     1701     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*)
  0.00      0.01     0.00     1700     0.00     0.04  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const
  0.00      0.01     0.00     1700     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const
  0.00      0.01     0.00     1698     0.00     0.00  std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() const
  0.00      0.01     0.00     1694     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const
  0.00      0.01     0.00     1693     0.00     0.00  std::__future_base::_Result<sf::Image>::_M_value()
  0.00      0.01     0.00     1693     0.00     0.00  std::remove_reference<std::future<sf::Image>&>::type&& std::move<std::future<sf::Image>&>(std::future<sf::Image>&)
  0.00      0.01     0.00     1691     0.00     0.00  std::remove_reference<sf::Image&>::type&& std::move<sf::Image&>(sf::Image&)
  0.00      0.01     0.00     1686     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const
  0.00      0.01     0.00     1685     0.00     0.00  __gnu_cxx::new_allocator<unsigned char>::~new_allocator()
  0.00      0.01     0.00     1685     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const
  0.00      0.01     0.00     1685     0.00     0.00  bool std::operator==<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
  0.00      0.01     0.00     1681     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc()
  0.00      0.01     0.00     1679     0.00     0.00  sf::Image::Image(sf::Image const&)
  0.00      0.01     0.00     1679     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
  0.00      0.01     0.00     1678     0.00     0.00  std::function<void ()>::swap(std::function<void ()>&)
  0.00      0.01     0.00     1675     0.00     0.00  std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const
  0.00      0.01     0.00     1675     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  0.00      0.01     0.00     1674     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
  0.00      0.01     0.00     1673     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00     1666     0.00     0.00  std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const
  0.00      0.01     0.00     1658     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const
  0.00      0.01     0.00     1656     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator()
  0.00      0.01     0.00     1652     0.00     0.00  std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
  0.00      0.01     0.00     1645     0.00     0.00  std::remove_reference<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00     1633     0.00     0.00  std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&)
  0.00      0.01     0.00     1632     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const
  0.00      0.01     0.00     1626     0.00     0.00  void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)
  0.00      0.01     0.00     1607     0.00     0.00  std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator()
  0.00      0.01     0.00     1605     0.00     0.00  std::_Any_data::_M_access() const
  0.00      0.01     0.00     1604     0.00     0.00  std::allocator<unsigned char>::~allocator()
  0.00      0.01     0.00     1579     0.00     0.00  ThreadPool::task()::{lambda()#1}::operator()() const
  0.00      0.01     0.00     1572     0.00     0.00  std::_Function_base::_M_empty() const
  0.00      0.01     0.00     1539     0.00     0.00  RaycastEngine::render(int, int)
  0.00      0.01     0.00     1170     0.00     0.00  sf::Drawable::~Drawable()
  0.00      0.01     0.00     1169     0.00     0.00  bool __gnu_cxx::operator!=<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >(__gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&, __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&)
  0.00      0.01     0.00     1161     0.00     0.00  sf::Sprite::~Sprite()
  0.00      0.01     0.00     1139     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::end()
  0.00      0.01     0.00      879     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator()
  0.00      0.01     0.00      879     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&)
  0.00      0.01     0.00      879     0.00     0.00  std::future<sf::Image>* std::__addressof<std::future<sf::Image> >(std::future<sf::Image>&)
  0.00      0.01     0.00      879     0.00     0.00  void std::_Destroy<std::future<sf::Image> >(std::future<sf::Image>*)
  0.00      0.01     0.00      878     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter()
  0.00      0.01     0.00      878     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.01     0.00      878     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_State_baseV2*> >, std::is_move_constructible<std::__future_base::_State_baseV2*>, std::is_move_assignable<std::__future_base::_State_baseV2*> >::value, void>::type std::swap<std::__future_base::_State_baseV2*>(std::__future_base::_State_baseV2*&, std::__future_base::_State_baseV2*&)
  0.00      0.01     0.00      877     0.00     0.00  std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const
  0.00      0.01     0.00      877     0.00     0.00  std::tuple_element<1ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00      876     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr()
  0.00      0.01     0.00      876     0.00     0.00  std::__future_base::_Task_state_base<sf::Image ()>::~_Task_state_base()
  0.00      0.01     0.00      876     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper()
  0.00      0.01     0.00      875     0.00     0.00  std::__future_base::_State_baseV2::wait()
  0.00      0.01     0.00      875     0.00     0.00  std::__future_base::_Result<sf::Image>::~_Result()
  0.00      0.01     0.00      875     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter()
  0.00      0.01     0.00      873     0.00     0.00  std::__basic_future<sf::Image>::_M_get_result() const
  0.00      0.01     0.00      873     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset()
  0.00      0.01     0.00      873     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--()
  0.00      0.01     0.00      873     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end()
  0.00      0.01     0.00      872     0.00     0.00  __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator()
  0.00      0.01     0.00      872     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*)
  0.00      0.01     0.00      872     0.00     0.00  std::__basic_future<sf::Image>::_Reset::_Reset(std::__basic_future<sf::Image>&)
  0.00      0.01     0.00      872     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back()
  0.00      0.01     0.00      872     0.00     0.00  std::future<sf::Image>::get()
  0.00      0.01     0.00      871     0.00     0.00  std::__future_base::_Result<sf::Image>::~_Result()
  0.00      0.01     0.00      871     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long long)
  0.00      0.01     0.00      871     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<sf::Image ()> >)
  0.00      0.01     0.00      871     0.00     0.00  std::__atomic_futex_unsigned<2147483648u>::~__atomic_futex_unsigned()
  0.00      0.01     0.00      870     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const
  0.00      0.01     0.00      870     0.00     0.00  std::allocator<std::packaged_task<sf::Image ()> >::allocator()
  0.00      0.01     0.00      870     0.00     0.00  std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00      870     0.00     0.00  std::__mutex_base::~__mutex_base()
  0.00      0.01     0.00      870     0.00     0.00  std::__future_base::_State_baseV2::_M_complete_async()
  0.00      0.01     0.00      870     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00      869     0.00     0.00  std::__future_base::_State_baseV2::~_State_baseV2()
  0.00      0.01     0.00      868     0.00     0.00  std::allocator<int>::allocator()
  0.00      0.01     0.00      867     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&&)
  0.00      0.01     0.00      867     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&)
  0.00      0.01     0.00      866     0.00     0.00  std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const
  0.00      0.01     0.00      866     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::~_Sp_ebo_helper()
  0.00      0.01     0.00      866     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl()
  0.00      0.01     0.00      866     0.00     0.00  std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true>()
  0.00      0.01     0.00      865     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base()
  0.00      0.01     0.00      865     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl()
  0.00      0.01     0.00      865     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00      865     0.00     0.00  std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long)
  0.00      0.01     0.00      865     0.00     0.00  std::remove_reference<std::allocator<std::packaged_task<sf::Image ()> > const&>::type&& std::move<std::allocator<std::packaged_task<sf::Image ()> > const&>(std::allocator<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00      864     0.00     0.00  __gnu_cxx::new_allocator<int>::new_allocator()
  0.00      0.01     0.00      864     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const
  0.00      0.01     0.00      864     0.00     0.00  std::allocator<std::packaged_task<sf::Image ()> >::~allocator()
  0.00      0.01     0.00      864     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00      864     0.00     0.00  std::__future_base::_State_baseV2::_State_baseV2()
  0.00      0.01     0.00      863     0.00     0.00  std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      0.01     0.00      862     0.00     0.00  std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const
  0.00      0.01     0.00      862     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>()
  0.00      0.01     0.00      862     0.00     0.00  std::__future_base::_Task_state_base<sf::Image ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&)
  0.00      0.01     0.00      862     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00      862     0.00     0.00  void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::destroy<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*)
  0.00      0.01     0.00      861     0.00     0.00  __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long)
  0.00      0.01     0.00      861     0.00     0.00  std::__future_base::_Result<sf::Image>::_M_destroy()
  0.00      0.01     0.00      861     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl()
  0.00      0.01     0.00      861     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace()
  0.00      0.01     0.00      860     0.00     0.00  std::__mutex_base::__mutex_base()
  0.00      0.01     0.00      860     0.00     0.00  std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>)
  0.00      0.01     0.00      859     0.00     0.00  std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&)
  0.00      0.01     0.00      858     0.00     0.00  sf::Rect<int>::Rect()
  0.00      0.01     0.00      858     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::unique() const
  0.00      0.01     0.00      858     0.00     0.00  std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> > const&)
  0.00      0.01     0.00      858     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00      858     0.00     0.00  std::__basic_future<sf::Image>::_Reset::~_Reset()
  0.00      0.01     0.00      858     0.00     0.00  std::mutex::~mutex()
  0.00      0.01     0.00      858     0.00     0.00  std::once_flag::once_flag()
  0.00      0.01     0.00      858     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*)
  0.00      0.01     0.00      857     0.00     0.00  void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::destroy<std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*)
  0.00      0.01     0.00      857     0.00     0.00  std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00      857     0.00     0.00  std::mutex::mutex()
  0.00      0.01     0.00      856     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<sf::Image, int>(std::allocator<int> const&)
  0.00      0.01     0.00      856     0.00     0.00  std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&)
  0.00      0.01     0.00      855     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base<std::__future_base::_Result<sf::Image>*&>(std::__future_base::_Result<sf::Image>*&)
  0.00      0.01     0.00      854     0.00     0.00  std::atomic_flag::_S_init(bool)
  0.00      0.01     0.00      854     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      0.01     0.00      854     0.00     0.00  std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int)
  0.00      0.01     0.00      853     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const
  0.00      0.01     0.00      852     0.00     0.00  std::future<sf::Image>::future(std::future<sf::Image>&&)
  0.00      0.01     0.00      851     0.00     0.00  std::packaged_task<sf::Image ()>::~packaged_task()
  0.00      0.01     0.00      851     0.00     0.00  std::__basic_future<sf::Image>::__basic_future(std::future<sf::Image>&&)
  0.00      0.01     0.00      851     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::get()
  0.00      0.01     0.00      849     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&&)
  0.00      0.01     0.00      848     0.00     0.00  void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&)
  0.00      0.01     0.00      847     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2>&&)
  0.00      0.01     0.00      847     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.00      0.01     0.00      847     0.00     0.00  std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&)
  0.00      0.01     0.00      847     0.00     0.00  std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::~shared_ptr()
  0.00      0.01     0.00      846     0.00     0.04  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front()
  0.00      0.01     0.00      845     0.00     0.00  std::atomic_flag::atomic_flag(bool)
  0.00      0.01     0.00      845     0.00     0.00  std::enable_if<!std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<sf::Image ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<sf::Image ()>, std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*)
  0.00      0.01     0.00      845     0.00     0.00  std::__future_base::_State_baseV2::_M_set_retrieved_flag()
  0.00      0.01     0.00      844     0.00     0.00  std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base()
  0.00      0.01     0.00      844     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00      844     0.00     0.00  std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&)
  0.00      0.01     0.00      844     0.00     0.00  void std::allocator_traits<std::allocator<std::future<sf::Image> > >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, std::future<sf::Image>&&)
  0.00      0.01     0.00      843     0.00     0.00  std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr()
  0.00      0.01     0.00      843     0.00     0.00  std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.00      0.01     0.00      843     0.00     0.00  std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr))
  0.00      0.01     0.00      843     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&)
  0.00      0.01     0.00      843     0.00     0.00  std::remove_reference<std::allocator<int> const&>::type&& std::move<std::allocator<int> const&>(std::allocator<int> const&)
  0.00      0.01     0.00      842     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back()
  0.00      0.01     0.00      841     0.00     0.00  std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&)
  0.00      0.01     0.00      840     0.00     0.00  std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl()
  0.00      0.01     0.00      840     0.00     0.08  std::packaged_task<sf::Image ()>::get_future()
  0.00      0.01     0.00      840     0.00     0.00  std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&)
  0.00      0.01     0.00      839     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00      838     0.00     0.04  void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*)
  0.00      0.01     0.00      838     0.00     0.00  std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter, true>()
  0.00      0.01     0.00      837     0.00     0.00  __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator-(long long) const
  0.00      0.01     0.00      837     0.00     0.00  std::function<void ()>::function(std::function<void ()>&&)
  0.00      0.01     0.00      833     0.00     0.04  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop()
  0.00      0.01     0.00      832     0.00     0.04  void __gnu_cxx::new_allocator<std::function<void ()> >::destroy<std::function<void ()> >(std::function<void ()>*)
  0.00      0.01     0.00      832     0.00     0.04  std::function<void ()>::operator=(std::function<void ()>&&)
  0.00      0.01     0.00      830     0.00     0.00  std::future<sf::Image>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&)
  0.00      0.01     0.00      829     0.00     0.00  std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<sf::Image>*)
  0.00      0.01     0.00      826     0.00     0.00  std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const
  0.00      0.01     0.00      822     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin()
  0.00      0.01     0.00      821     0.00     0.00  std::__exception_ptr::exception_ptr::exception_ptr(decltype(nullptr))
  0.00      0.01     0.00      820     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*)
  0.00      0.01     0.00      820     0.00     0.00  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&)
  0.00      0.01     0.00      818     0.00     0.00  void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<sf::Image ()> >(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&)
  0.00      0.01     0.00      818     0.00     0.00  void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
  0.00      0.01     0.00      817     0.00     0.00  std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))
  0.00      0.01     0.00      816     0.00     0.00  std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const
  0.00      0.01     0.00      814     0.00     0.00  std::__future_base::_Result<sf::Image>::_Result()
  0.00      0.01     0.00      811     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator*() const
  0.00      0.01     0.00      809     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front()
  0.00      0.01     0.00      808     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::operator->() const
  0.00      0.01     0.00      808     0.00     0.07  std::packaged_task<sf::Image ()>::operator()()
  0.00      0.01     0.00      805     0.00     0.08  std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)
  0.00      0.01     0.00      805     0.00     0.00  bool* std::__addressof<bool>(bool&)
  0.00      0.01     0.00      800     0.00     0.00  std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool)
  0.00      0.01     0.00      793     0.00     0.08  std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
  0.00      0.01     0.00      790     0.00     0.08  void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
  0.00      0.01     0.00      788     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy()
  0.00      0.01     0.00      787     0.00     0.00  std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose()
  0.00      0.01     0.00      786     0.00     0.00  std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00      785     0.00     0.04  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function()
  0.00      0.01     0.00      785     0.00     0.00  std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&)
  0.00      0.01     0.00      783     0.00     0.00  void std::condition_variable::wait<ThreadPool::task()::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::task()::{lambda()#1})
  0.00      0.01     0.00      779     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front()
  0.00      0.01     0.00      770     0.00     0.08  std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const
  0.00      0.01     0.00      770     0.00     0.00  std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&)
  0.00      0.01     0.00      761     0.00     0.08  std::function<void ()>::operator()() const
  0.00      0.01     0.00      761     0.00     0.00  std::function<void ()>::function()
  0.00      0.01     0.00      752     0.00     0.09  std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const
  0.00      0.01     0.00      748     0.00     0.09  std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const
  0.00      0.01     0.00      738     0.00     0.00  std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator void (*)()() const
  0.00      0.01     0.00      586     0.00     0.00  __gnu_cxx::new_allocator<std::future<sf::Image> >::max_size() const
  0.00      0.01     0.00      586     0.00     0.00  std::move_iterator<std::future<sf::Image>*>::base() const
  0.00      0.01     0.00      586     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*)
  0.00      0.01     0.00      586     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_deallocate(std::future<sf::Image>*, unsigned long long)
  0.00      0.01     0.00      586     0.00     0.00  std::move_iterator<std::future<sf::Image>*>::move_iterator(std::future<sf::Image>*)
  0.00      0.01     0.00      586     0.00     0.00  std::move_iterator<std::future<sf::Image>*> std::__make_move_if_noexcept_iterator<std::future<sf::Image>, std::move_iterator<std::future<sf::Image>*> >(std::future<sf::Image>*)
  0.00      0.01     0.00      586     0.00     0.00  void std::_Destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*)
  0.00      0.01     0.00      586     0.00     0.00  void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&)
  0.00      0.01     0.00      305     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::size() const
  0.00      0.01     0.00      293     0.00    34.13  RaycastEngine::multi_render(sf::RenderWindow&)
  0.00      0.01     0.00      293     0.00     0.00  RaycastEngine::get_camera_pointer()
  0.00      0.01     0.00      293     0.00     0.00  __gnu_cxx::new_allocator<std::future<sf::Image> >::deallocate(std::future<sf::Image>*, unsigned long long)
  0.00      0.01     0.00      293     0.00     0.00  __gnu_cxx::new_allocator<std::future<sf::Image> >::allocate(unsigned long long, void const*)
  0.00      0.01     0.00      293     0.00     0.00  __gnu_cxx::new_allocator<std::future<sf::Image> >::new_allocator()
  0.00      0.01     0.00      293     0.00     0.00  __gnu_cxx::new_allocator<std::future<sf::Image> >::~new_allocator()
  0.00      0.01     0.00      293     0.00     0.00  ThreadPool::number_of_threads() const
  0.00      0.01     0.00      293     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() const
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::size() const
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::capacity() const
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::max_size() const
  0.00      0.01     0.00      293     0.00     0.00  std::allocator<std::future<sf::Image> >::allocator()
  0.00      0.01     0.00      293     0.00     0.00  std::allocator<std::future<sf::Image> >::~allocator()
  0.00      0.01     0.00      293     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate(unsigned long long)
  0.00      0.01     0.00      293     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::_Vector_impl()
  0.00      0.01     0.00      293     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::~_Vector_impl()
  0.00      0.01     0.00      293     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_base()
  0.00      0.01     0.00      293     0.00     0.00  std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~_Vector_base()
  0.00      0.01     0.00      293     0.00     0.00  std::allocator_traits<std::allocator<std::future<sf::Image> > >::deallocate(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, unsigned long long)
  0.00      0.01     0.00      293     0.00     0.00  std::allocator_traits<std::allocator<std::future<sf::Image> > >::allocate(std::allocator<std::future<sf::Image> >&, unsigned long long)
  0.00      0.01     0.00      293     0.00     0.00  std::allocator_traits<std::allocator<std::future<sf::Image> > >::max_size(std::allocator<std::future<sf::Image> > const&)
  0.00      0.01     0.00      293     0.00     0.00  std::future<sf::Image>* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*)
  0.00      0.01     0.00      293     0.00     0.00  std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>)
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::begin()
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long)
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::vector()
  0.00      0.01     0.00      293     0.00     0.00  std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector()
  0.00      0.01     0.00      293     0.00     0.00  std::future<sf::Image>* std::uninitialized_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*)
  0.00      0.01     0.00      293     0.00     0.00  std::future<sf::Image>* std::__uninitialized_copy_a<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::future<sf::Image> >(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&)
  0.00      0.01     0.00      293     0.00     0.00  bool std::operator==<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&)
  0.00      0.01     0.00      293     0.00     0.00  bool std::operator!=<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&)
  0.00      0.01     0.00      291     0.00     0.00  std::__deque_buf_size(unsigned long long)
  0.00      0.01     0.00      256     0.00     0.00  std::_Bit_iterator::operator*() const
  0.00      0.01     0.00      256     0.00     0.00  std::_Bit_iterator::operator++()
  0.00      0.01     0.00      256     0.00     0.00  std::_Bit_reference::operator=(bool)
  0.00      0.01     0.00      256     0.00     0.00  std::_Bit_iterator_base::_M_bump_up()
  0.00      0.01     0.00      237     0.00     0.00  sf::ContextSettings::ContextSettings(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool)
  0.00      0.01     0.00      217     0.00     0.00  trig::Vector2<float>::operator+=(trig::Vector2<float> const&)
  0.00      0.01     0.00      188     0.00     0.00  Camera::move_forward(float)
  0.00      0.01     0.00      186     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size()
  0.00      0.01     0.00      185     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**)
  0.00      0.01     0.00       54     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node()
  0.00      0.01     0.00       54     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long long)
  0.00      0.01     0.00       52     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*)
  0.00      0.01     0.00       52     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long long)
  0.00      0.01     0.00       51     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long long)
  0.00      0.01     0.00       51     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::max_size() const
  0.00      0.01     0.00       51     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long long)
  0.00      0.01     0.00       50     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long long, void const*)
  0.00      0.01     0.00       50     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator()
  0.00      0.01     0.00       49     0.00     0.04  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux()
  0.00      0.01     0.00       43     0.00     0.00  Camera::rotate_right(float)
  0.00      0.01     0.00       42     0.00     0.00  ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&)
  0.00      0.01     0.00       39     0.00     0.00  std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**)
  0.00      0.01     0.00       36     0.00     0.00  void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))()
  0.00      0.01     0.00       26     0.00     0.00  Camera::rotate_left(float)
  0.00      0.01     0.00       26     0.00     0.00  std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**)
  0.00      0.01     0.00       20     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const
  0.00      0.01     0.00       18     0.00     0.00  std::move_iterator<std::thread*>::base() const
  0.00      0.01     0.00       14     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&)
  0.00      0.01     0.00       13     0.00     0.00  Camera::move_backward(float)
  0.00      0.01     0.00       13     0.00     0.00  std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**)
  0.00      0.01     0.00       13     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long long, bool)
  0.00      0.01     0.00       13     0.00     0.00  std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      0.01     0.00       13     0.00     0.00  std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      0.01     0.00       13     0.00     0.00  std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
  0.00      0.01     0.00       12     0.00     0.00  std::move_iterator<std::thread*>::move_iterator(std::thread*)
  0.00      0.01     0.00       12     0.00     0.00  std::thread::id::id()
  0.00      0.01     0.00       12     0.00     0.00  std::move_iterator<std::thread*> std::__make_move_if_noexcept_iterator<std::thread, std::move_iterator<std::thread*> >(std::thread*)
  0.00      0.01     0.00       10     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator()
  0.00      0.01     0.00        9     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::max_size() const
  0.00      0.01     0.00        9     0.00     0.00  std::_Bit_iterator::_Bit_iterator()
  0.00      0.01     0.00        9     0.00     0.00  std::thread* std::__addressof<std::thread>(std::thread&)
  0.00      0.01     0.00        9     0.00     0.00  std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)
  0.00      0.01     0.00        9     0.00     0.00  bool std::operator==<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&)
  0.00      0.01     0.00        9     0.00     0.00  bool std::operator!=<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&)
  0.00      0.01     0.00        8     0.00     0.00  Camera::move_right(float)
  0.00      0.01     0.00        8     0.00     0.00  Camera::move_left(float)
  0.00      0.01     0.00        7     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::end()
  0.00      0.01     0.00        6     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const
  0.00      0.01     0.00        6     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const
  0.00      0.01     0.00        6     0.00     0.00  std::thread::joinable() const
  0.00      0.01     0.00        6     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::max_size() const
  0.00      0.01     0.00        6     0.00     0.00  std::_Head_base<0ull, void (ThreadPool::*)(), false>::_M_head(std::_Head_base<0ull, void (ThreadPool::*)(), false>&)
  0.00      0.01     0.00        6     0.00     0.00  std::_Head_base<0ull, void (ThreadPool::*)(), false>::_Head_base<void (ThreadPool::*)()>(void (ThreadPool::*&&)())
  0.00      0.01     0.00        6     0.00     0.00  std::_Head_base<0ull, std::thread::_State*, false>::_M_head(std::_Head_base<0ull, std::thread::_State*, false>&)
  0.00      0.01     0.00        6     0.00     0.00  std::_Head_base<1ull, ThreadPool*, false>::_M_head(std::_Head_base<1ull, ThreadPool*, false>&)
  0.00      0.01     0.00        6     0.00     0.00  std::_Head_base<1ull, ThreadPool*, false>::_Head_base<ThreadPool*>(ThreadPool*&&)
  0.00      0.01     0.00        6     0.00     0.00  std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_head(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&)
  0.00      0.01     0.00        6     0.00     0.00  std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00      0.01     0.00        6     0.00     0.00  std::_Tuple_impl<1ull, ThreadPool*>::_M_head(std::_Tuple_impl<1ull, ThreadPool*>&)
  0.00      0.01     0.00        6     0.00     0.00  std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr()
  0.00      0.01     0.00        6     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&)
  0.00      0.01     0.00        6     0.00     0.00  std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*)
  0.00      0.01     0.00        6     0.00     0.00  std::thread::~thread()
  0.00      0.01     0.00        6     0.00     0.00  std::thread::_State*& std::__get_helper<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00      0.01     0.00        6     0.00     0.00  std::thread* std::uninitialized_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*)
  0.00      0.01     0.00        6     0.00     0.00  std::thread* std::__uninitialized_copy_a<std::move_iterator<std::thread*>, std::thread*, std::thread>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*, std::allocator<std::thread>&)
  0.00      0.01     0.00        6     0.00     0.00  std::thread* std::__uninitialized_move_if_noexcept_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      0.01     0.00        6     0.00     0.00  std::tuple_element<0ull, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)
  0.00      0.01     0.00        6     0.00     0.00  std::remove_reference<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>::type&& std::move<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&)
  0.00      0.01     0.00        6     0.00     0.00  std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&& std::forward<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::remove_reference<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::type&)
  0.00      0.01     0.00        6     0.00     0.00  void std::_Destroy<std::thread>(std::thread*)
  0.00      0.01     0.00        6     0.00     0.00  std::operator==(std::thread::id, std::thread::id)
  0.00      0.01     0.00        5     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::~new_allocator()
  0.00      0.01     0.00        5     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::begin()
  0.00      0.01     0.00        5     0.00     0.00  unsigned long* std::__addressof<unsigned long>(unsigned long&)
  0.00      0.01     0.00        4     0.00     0.00  bool __gnu_cxx::operator!=<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&)
  0.00      0.01     0.00        4     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const
  0.00      0.01     0.00        4     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*)
  0.00      0.01     0.00        4     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long long)
  0.00      0.01     0.00        4     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_M_deallocate()
  0.00      0.01     0.00        4     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long long)
  0.00      0.01     0.00        4     0.00     0.00  unsigned long long const& std::max<unsigned long long>(unsigned long long const&, unsigned long long const&)
  0.00      0.01     0.00        4     0.00     0.00  void std::_Destroy<std::thread*>(std::thread*, std::thread*)
  0.00      0.01     0.00        4     0.00     0.00  void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&)
  0.00      0.01     0.00        3     0.00    55.68  ThreadPool::task()
  0.00      0.01     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long long)
  0.00      0.01     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long long, void const*)
  0.00      0.01     0.00        3     0.00     0.00  void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::new_allocator()
  0.00      0.01     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++()
  0.00      0.01     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&)
  0.00      0.01     0.00        3     0.00     0.00  __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long long) const
  0.00      0.01     0.00        3     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const
  0.00      0.01     0.00        3     0.00     0.00  std::move_iterator<std::thread*>::operator*() const
  0.00      0.01     0.00        3     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const
  0.00      0.01     0.00        3     0.00     0.00  std::allocator<unsigned long>::~allocator()
  0.00      0.01     0.00        3     0.00     0.00  std::_Head_base<0ull, std::thread::_State*, false>::_Head_base()
  0.00      0.01     0.00        3     0.00     0.00  std::_Head_base<1ull, std::default_delete<std::thread::_State>, true>::_Head_base()
  0.00      0.01     0.00        3     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*)
  0.00      0.01     0.00        3     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr()
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_tail(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&)
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&)
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl()
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&)
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl<ThreadPool*>(ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::_Tuple_impl<1ull, std::default_delete<std::thread::_State> >::_Tuple_impl()
  0.00      0.01     0.00        3     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long long)
  0.00      0.01     0.00        3     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl()
  0.00      0.01     0.00        3     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset()
  0.00      0.01     0.00        3     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data()
  0.00      0.01     0.00        3     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::~_Bvector_base()
  0.00      0.01     0.00        3     0.00     0.00  std::move_iterator<std::thread*>::operator++()
  0.00      0.01     0.00        3     0.00     0.00  std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*)
  0.00      0.01     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long long)
  0.00      0.01     0.00        3     0.00     0.00  std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long long)
  0.00      0.01     0.00        3     0.00     0.00  void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<std::thread::_State*, std::default_delete<std::thread::_State>, true>()
  0.00      0.01     0.00        3     0.00     0.00  std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&)
  0.00      0.01     0.00        3     0.00     0.00  std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&)
  0.00      0.01     0.00        3     0.00     0.00  std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::thread::swap(std::thread&)
  0.00      0.01     0.00        3     0.00     0.00  std::thread::_State::_State()
  0.00      0.01     0.00        3     0.00    55.68  decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>)
  0.00      0.01     0.00        3     0.00     0.00  std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_Invoker(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&)
  0.00      0.01     0.00        3     0.00    55.68  std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::operator()()
  0.00      0.01     0.00        3     0.00     0.00  std::thread::thread(std::thread&&)
  0.00      0.01     0.00        3     0.00     0.00  std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::back()
  0.00      0.01     0.00        3     0.00     0.00  std::vector<bool, std::allocator<bool> >::~vector()
  0.00      0.01     0.00        3     0.00     0.00  void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&)
  0.00      0.01     0.00        3     0.00     0.00  void (ThreadPool::*&std::__get_helper<0ull, void (ThreadPool::*)(), ThreadPool*>(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&))()
  0.00      0.01     0.00        3     0.00     0.00  ThreadPool*& std::__get_helper<1ull, ThreadPool*>(std::_Tuple_impl<1ull, ThreadPool*>&)
  0.00      0.01     0.00        3     0.00    55.68  void std::__invoke_impl<void, void (ThreadPool::*)(), ThreadPool*>(std::__invoke_memfun_deref, void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&)
  0.00      0.01     0.00        3     0.00     0.00  std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&)
  0.00      0.01     0.00        3     0.00     0.00  std::remove_reference<std::_Tuple_impl<1ull, ThreadPool*>&>::type&& std::move<std::_Tuple_impl<1ull, ThreadPool*>&>(std::_Tuple_impl<1ull, ThreadPool*>&)
  0.00      0.01     0.00        3     0.00     0.00  std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
  0.00      0.01     0.00        3     0.00     0.00  void (ThreadPool::*&&std::forward<void (ThreadPool::*&&)()>(std::remove_reference<void (ThreadPool::*&&)()>::type&))()
  0.00      0.01     0.00        3     0.00     0.00  ThreadPool*&& std::forward<ThreadPool*&&>(std::remove_reference<ThreadPool*&&>::type&)
  0.00      0.01     0.00        3     0.00     0.00  std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&)
  0.00      0.01     0.00        3     0.00    55.68  std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
  0.00      0.01     0.00        2     0.00     0.00  DynamicGrid<bool>::~DynamicGrid()
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator()
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::~new_allocator()
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<bool>::new_allocator()
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<bool>::~new_allocator()
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::deallocate(unsigned long*, unsigned long long)
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long long, void const*)
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::new_allocator(__gnu_cxx::new_allocator<unsigned long> const&)
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<char>::max_size() const
  0.00      0.01     0.00        2     0.00     0.00  __gnu_cxx::new_allocator<unsigned long>::max_size() const
  0.00      0.01     0.00        2     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const
  0.00      0.01     0.00        2     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const
  0.00      0.01     0.00        2     0.00     0.00  std::_Bit_iterator::operator+(long long) const
  0.00      0.01     0.00        2     0.00     0.00  std::initializer_list<bool>::begin() const
  0.00      0.01     0.00        2     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_data() const
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&)
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<std::function<void ()>*>::~allocator()
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<bool>::allocator()
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<bool>::~allocator()
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<unsigned long>::allocator<bool>(std::allocator<bool> const&)
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&)
  0.00      0.01     0.00        2     0.00     0.00  std::allocator<unsigned long>::~allocator()
  0.00      0.01     0.00        2     0.00     0.00  std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int)
  0.00      0.01     0.00        2     0.00     0.00  std::_Bit_iterator::operator+=(long long)
  0.00      0.01     0.00        2     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long long)
  0.00      0.01     0.00        2     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&)
  0.00      0.01     0.00        2     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_M_get_Bit_allocator()
  0.00      0.01     0.00        2     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&)
  0.00      0.01     0.00        2     0.00     0.00  std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator()
  0.00      0.01     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<unsigned long> >::deallocate(std::allocator<unsigned long>&, unsigned long*, unsigned long long)
  0.00      0.01     0.00        2     0.00     0.00  std::allocator_traits<std::allocator<unsigned long> >::allocate(std::allocator<unsigned long>&, unsigned long long)
  0.00      0.01     0.00        2     0.00     0.00  std::_Bit_iterator_base::_M_incr(long long)
  0.00      0.01     0.00        2     0.00     0.00  std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long)
  0.00      0.01     0.00        2     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
  0.00      0.01     0.00        2     0.00     0.00  bool const* std::__miter_base<bool const*>(bool const*)
  0.00      0.01     0.00        2     0.00     0.00  bool const* std::__niter_base<bool const*>(bool const*)
  0.00      0.01     0.00        1     0.00     0.00  ThreadPool::stop()
  0.00      0.01     0.00        1     0.00     0.00  ThreadPool::start(unsigned int)
  0.00      0.01     0.00        1     0.00     0.00  ThreadPool::ThreadPool(unsigned int)
  0.00      0.01     0.00        1     0.00     0.00  ThreadPool::~ThreadPool()
  0.00      0.01     0.00        1     0.00     0.00  DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int)
  0.00      0.01     0.00        1     0.00     0.00  DynamicGrid<bool>::DynamicGrid()
  0.00      0.01     0.00        1     0.00     0.00  DynamicGrid<bool>::operator=(DynamicGrid<bool>&&)
  0.00      0.01     0.00        1     0.00     0.00  RaycastEngine::set_camera_position(trig::Vector2<float> const&)
  0.00      0.01     0.00        1     0.00     0.00  RaycastEngine::RaycastEngine(unsigned int, unsigned int)
  0.00      0.01     0.00        1     0.00     0.00  RaycastEngine::~RaycastEngine()
  0.00      0.01     0.00        1     0.00     0.00  sf::String::~String()
  0.00      0.01     0.00        1     0.00     0.00  World::update()
  0.00      0.01     0.00        1     0.00     0.00  World::World(int, int, int)
  0.00      0.01     0.00        1     0.00     0.00  World::~World()
  0.00      0.01     0.00        1     0.00     0.00  Camera::Camera()
  0.00      0.01     0.00        1     0.00     0.00  MyWorld::MyWorld(int, int, int)
  0.00      0.01     0.00        1     0.00     0.00  MyWorld::~MyWorld()
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long long, void const*)
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::new_allocator()
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::thread>::~new_allocator()
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator()
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()> >::~new_allocator()
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<char>::allocate(unsigned long long, void const*)
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<unsigned int>::~new_allocator()
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::_S_propagate_on_move_assign()
  0.00      0.01     0.00        1     0.00     0.00  bool __gnu_cxx::__is_null_pointer<char const>(char const*)
  0.00      0.01     0.00        1     0.00     0.00  __gnu_cxx::new_allocator<std::function<void ()>*>::max_size() const
  0.00      0.01     0.00        1     0.00     0.00  std::initializer_list<bool>::end() const
  0.00      0.01     0.00        1     0.00     0.00  std::initializer_list<bool>::size() const
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_is_local() const
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_local_data() const
  0.00      0.01     0.00        1     0.00     0.00  std::allocator<std::thread>::allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::allocator<std::thread>::~allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::allocator<std::function<void ()> >::allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::allocator<std::function<void ()> >::~allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::allocator<unsigned int>::~allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::allocator<unsigned long>::allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl()
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl()
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**)
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base()
  0.00      0.01     0.00        1     0.00     0.00  std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base()
  0.00      0.01     0.00        1     0.00     0.00  std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
  0.00      0.01     0.00        1     0.00     0.00  std::char_traits<char>::copy(char*, char const*, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::char_traits<char>::assign(char&, char const&)
  0.00      0.01     0.00        1     0.00     0.00  std::char_traits<char>::length(char const*)
  0.00      0.01     0.00        1     0.00     0.00  void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00      0.01     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl()
  0.00      0.01     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl()
  0.00      0.01     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base()
  0.00      0.01     0.00        1     0.00     0.00  std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base()
  0.00      0.01     0.00        1     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_M_move_data(std::_Bvector_base<std::allocator<bool> >&&)
  0.00      0.01     0.00        1     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl()
  0.00      0.01     0.00        1     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_move_data(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data&&)
  0.00      0.01     0.00        1     0.00     0.00  std::_Bvector_base<std::allocator<bool> >::_Bvector_base()
  0.00      0.01     0.00        1     0.00     0.00  std::pointer_traits<char const*>::pointer_to(char const&)
  0.00      0.01     0.00        1     0.00     0.00  std::pointer_traits<unsigned int const*>::pointer_to(unsigned int const&)
  0.00      0.01     0.00        1     0.00     0.00  std::pointer_traits<char*>::pointer_to(char&)
  0.00      0.01     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&)
  0.00      0.01     0.00        1     0.00     0.00  std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&)
  0.00      0.01     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>)
  0.00      0.01     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque()
  0.00      0.01     0.00        1     0.00     0.00  std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque()
  0.00      0.01     0.00        1     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>()
  0.00      0.01     0.00        1     0.00     0.00  std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue()
  0.00      0.01     0.00        1     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::vector()
  0.00      0.01     0.00        1     0.00     0.00  std::vector<std::thread, std::allocator<std::thread> >::~vector()
  0.00      0.01     0.00        1     0.00     0.00  void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag)
  0.00      0.01     0.00        1     0.00     0.00  std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool)
  0.00      0.01     0.00        1     0.00     0.00  std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&)
  0.00      0.01     0.00        1     0.00     0.00  std::vector<bool, std::allocator<bool> >::vector()
  0.00      0.01     0.00        1     0.00     0.00  std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&)
  0.00      0.01     0.00        1     0.00     0.00  std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
  0.00      0.01     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*)
  0.00      0.01     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
  0.00      0.01     0.00        1     0.00     0.00  void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long)
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_dispose()
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_Alloc_hider::~_Alloc_hider()
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_get_allocator()
  0.00      0.01     0.00        1     0.00     0.00  std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::~basic_string()
  0.00      0.01     0.00        1     0.00     0.00  std::iterator_traits<bool const*>::difference_type std::__distance<bool const*>(bool const*, bool const*, std::random_access_iterator_tag)
  0.00      0.01     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
  0.00      0.01     0.00        1     0.00     0.00  char const* std::__addressof<char const>(char const&)
  0.00      0.01     0.00        1     0.00     0.00  unsigned int const* std::__addressof<unsigned int const>(unsigned int const&)
  0.00      0.01     0.00        1     0.00     0.00  char* std::__addressof<char>(char&)
  0.00      0.01     0.00        1     0.00     0.00  std::_Bit_iterator std::__niter_base<std::_Bit_iterator>(std::_Bit_iterator)
  0.00      0.01     0.00        1     0.00     0.00  std::_Bit_iterator std::__copy_move_a<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
  0.00      0.01     0.00        1     0.00     0.00  std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
  0.00      0.01     0.00        1     0.00     0.00  void std::__alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&)
  0.00      0.01     0.00        1     0.00     0.00  void std::__do_alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&, std::integral_constant<bool, true>)
  0.00      0.01     0.00        1     0.00     0.00  std::iterator_traits<bool const*>::iterator_category std::__iterator_category<bool const*>(bool const* const&)
  0.00      0.01     0.00        1     0.00     0.00  std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
  0.00      0.01     0.00        1     0.00     0.00  std::_Bit_iterator std::copy<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
  0.00      0.01     0.00        1     0.00     0.00  std::remove_reference<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>::type&& std::move<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&)
  0.00      0.01     0.00        1     0.00     0.00  std::remove_reference<std::allocator<unsigned long>&>::type&& std::move<std::allocator<unsigned long>&>(std::allocator<unsigned long>&)
  0.00      0.01     0.00        1     0.00     0.00  std::remove_reference<std::vector<bool, std::allocator<bool> >&>::type&& std::move<std::vector<bool, std::allocator<bool> >&>(std::vector<bool, std::allocator<bool> >&)
  0.00      0.01     0.00        1     0.00     0.00  void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
  0.00      0.01     0.00        1     0.00     0.00  void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&)
  0.00      0.01     0.00        1     0.00     0.00  std::iterator_traits<bool const*>::difference_type std::distance<bool const*>(bool const*, bool const*)
  0.00      0.01     0.00        1     0.00     0.00  std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
  0.00      0.01     0.00        1     0.00     0.00  char const* std::addressof<char const>(char const&)
  0.00      0.01     0.00        1     0.00     0.00  unsigned int const* std::addressof<unsigned int const>(unsigned int const&)
  0.00      0.01     0.00        1     0.00     0.00  char* std::addressof<char>(char&)

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 100.00% of 0.01 seconds

index % time    self  children    called     name
[1]    100.0    0.00    0.01  124609+30940   <cycle 1 as a whole> [1]
                0.00    0.01     293             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
                0.00    0.00  122059             main <cycle 1> [101]
                0.00    0.00    8607             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
                0.00    0.00    4272             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
                0.00    0.00    2569             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [269]
                0.00    0.00    2558             std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() <cycle 1> [274]
                0.00    0.00    1721             std::__basic_future<sf::Image>::~__basic_future() <cycle 1> [317]
                0.00    0.00    1718             std::future<sf::Image>::~future() <cycle 1> [323]
                0.00    0.00     879             void std::_Destroy<std::future<sf::Image> >(std::future<sf::Image>*) <cycle 1> [392]
                0.00    0.00     878             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [394]
                0.00    0.00     873             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() <cycle 1> [405]
                0.00    0.00     872             std::future<sf::Image>::get() <cycle 1> [412]
                0.00    0.00     862             void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::destroy<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*) <cycle 1> [446]
                0.00    0.00     858             std::__basic_future<sf::Image>::_Reset::~_Reset() <cycle 1> [458]
                0.00    0.00     857             void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::destroy<std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) <cycle 1> [462]
                0.00    0.00     851             std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
                0.00    0.00     847             std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::~shared_ptr() <cycle 1> [481]
                0.00    0.00     843             std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [489]
                0.00    0.00     787             std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [520]
                0.00    0.00     586             void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) <cycle 1> [535]
                0.00    0.00     586             void std::_Destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [534]
                0.00    0.00     586             void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [530]
                0.00    0.00     293             std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector() <cycle 1> [562]
                0.00    0.00     293             std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
                0.00    0.00       1             World::update() <cycle 1> [757]
-----------------------------------------------
                0.01    0.00     873/873         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[2]    100.0    0.01    0.00     873         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator++() [2]
-----------------------------------------------
                                 293             World::update() <cycle 1> [757]
[3]    100.0    0.00    0.01     293         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
                0.01    0.00     873/873         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator++() [2]
                0.00    0.00    1169/1169        bool __gnu_cxx::operator!=<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >(__gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&, __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&) [386]
                0.00    0.00    1160/1161        sf::Sprite::~Sprite() [387]
                0.00    0.00     874/1715        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator*() const [330]
                0.00    0.00     858/858         sf::Rect<int>::Rect() [454]
                0.00    0.00     841/1693        std::remove_reference<std::future<sf::Image>&>::type&& std::move<std::future<sf::Image>&>(std::future<sf::Image>&) [357]
                0.00    0.00     840/840         std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&) [497]
                0.00    0.00     293/293         ThreadPool::number_of_threads() const [542]
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::vector() [561]
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::begin() [559]
                0.00    0.00     293/1139        std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::end() [388]
                0.00    0.00     236/237         sf::ContextSettings::ContextSettings(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool) [572]
                                 872             std::future<sf::Image>::get() <cycle 1> [412]
                                 867             main <cycle 1> [101]
                                 839             std::future<sf::Image>::~future() <cycle 1> [323]
                                 293             std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
                                 293             std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector() <cycle 1> [562]
-----------------------------------------------
                                                 <spontaneous>
[4]      5.5    0.00    0.00                 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
                0.00    0.00    6815/124609      main <cycle 1> [101]
                0.00    0.00     852/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00     850/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
                0.00    0.00     847/2551        std::allocator<int>::~allocator() [276]
                0.00    0.00     845/1705        std::allocator<int>::allocator(std::allocator<int> const&) [345]
                0.00    0.00     843/843         std::remove_reference<std::allocator<int> const&>::type&& std::move<std::allocator<int> const&>(std::allocator<int> const&) [493]
-----------------------------------------------
                                                 <spontaneous>
[5]      4.2    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [5]
                0.00    0.00    5227/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[6]      4.1    0.00    0.00                 std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
                0.00    0.00    3470/124609      main <cycle 1> [101]
                0.00    0.00     834/3437        std::shared_ptr<std::packaged_task<sf::Image ()> >::~shared_ptr() [9]
                0.00    0.00     840/840         std::packaged_task<sf::Image ()>::get_future() [75]
                0.00    0.00     876/3293        std::unique_lock<std::mutex>::~unique_lock() [253]
                0.00    0.00     858/858         std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> > const&) [456]
                0.00    0.00     844/3346        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
                0.00    0.00     816/816         std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [512]
-----------------------------------------------
                                                 <spontaneous>
[7]      2.8    0.00    0.00                 void __gnu_cxx::new_allocator<std::function<void ()> >::construct<std::function<void ()>, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(std::future<decltype ({parm#1}())>*, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [7]
                0.00    0.00    3471/124609      main <cycle 1> [101]
                0.00    0.00     865/6850        operator new(unsigned long long, void*) [213]
-----------------------------------------------
                0.00    0.00    3451/3451        std::shared_ptr<std::packaged_task<sf::Image ()> >::~shared_ptr() [9]
[8]      2.8    0.00    0.00    3451         std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [8]
                0.00    0.00    3452/124609      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
-----------------------------------------------
                0.00    0.00     834/3437        std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
                0.00    0.00    2603/3437        ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}::~future() [14]
[9]      2.8    0.00    0.00    3437         std::shared_ptr<std::packaged_task<sf::Image ()> >::~shared_ptr() [9]
                0.00    0.00    3451/3451        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [8]
-----------------------------------------------
                                                 <spontaneous>
[10]     2.8    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<{lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [10]
                0.00    0.00    3440/124609      main <cycle 1> [101]
                0.00    0.00     862/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
                0.00    0.00     860/1705        std::allocator<int>::allocator(std::allocator<int> const&) [345]
                0.00    0.00     857/2551        std::allocator<int>::~allocator() [276]
                0.00    0.00     856/1727        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [307]
-----------------------------------------------
                                                 <spontaneous>
[11]     2.8    0.00    0.00                 std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > std::__create_task_state<sf::Image (), RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int> >(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&, std::allocator<int> const&) [11]
                0.00    0.00    3429/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[12]     2.4    0.00    0.00                 std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [12]
                0.00    0.00    2582/124609      main <cycle 1> [101]
                0.00    0.00     853/1700        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [71]
                0.00    0.00     868/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
-----------------------------------------------
                                                 <spontaneous>
[13]     2.1    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [13]
                0.00    0.00    2622/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[14]     2.1    0.00    0.00                 ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}::~future() [14]
                0.00    0.00    2603/3437        std::shared_ptr<std::packaged_task<sf::Image ()> >::~shared_ptr() [9]
-----------------------------------------------
                                                 <spontaneous>
[15]     2.1    0.00    0.00                 std::function<void ()>::function<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}, void, void>(std::future<decltype ({parm#1}())>) [15]
                0.00    0.00    2606/124609      main <cycle 1> [101]
                0.00    0.00     869/3335        std::_Function_base::_Function_base() [252]
-----------------------------------------------
                                                 <spontaneous>
[16]     2.1    0.00    0.00                 __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::_M_ptr() [16]
                0.00    0.00    2595/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[17]     2.1    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [17]
                0.00    0.00    2592/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[18]     2.1    0.00    0.00                 _ZNSt14_Function_base13_Base_managerIZN10ThreadPool6submitIZN13RaycastEngine12multi_renderERN2sf12RenderWindowEEUlvE_EESt6futureIDTclfp_EEET_EUlvE_E15_M_init_functorERSt9_Any_dataOSC_St17integral_constantIbLb0EE [18]
                0.00    0.00    2582/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[19]     1.9    0.00    0.00                 std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>, void, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>) [19]
                0.00    0.00    2401/124609      main <cycle 1> [101]
                0.00    0.00     808/3335        std::_Function_base::_Function_base() [252]
-----------------------------------------------
                                                 <spontaneous>
[20]     1.7    0.00    0.00                 std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [20]
                0.00    0.00    1735/124609      main <cycle 1> [101]
                0.00    0.00     847/1700        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [71]
                0.00    0.00     845/845         std::enable_if<!std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<sf::Image ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<sf::Image ()>, std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) [483]
-----------------------------------------------
                0.00    0.00       3/3           void std::__invoke_impl<void, void (ThreadPool::*)(), ThreadPool*>(std::__invoke_memfun_deref, void (ThreadPool::*&&)(), ThreadPool*&&) [24]
[21]     1.7    0.00    0.00       3         ThreadPool::task() [21]
                0.00    0.00     761/761         std::function<void ()>::operator()() const [90]
                0.00    0.00     832/832         std::function<void ()>::operator=(std::function<void ()>&&) [93]
                0.00    0.00     833/833         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [97]
                0.00    0.00     798/2482        std::function<void ()>::~function() [58]
                0.00    0.00     835/3346        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
                0.00    0.00     825/3293        std::unique_lock<std::mutex>::~unique_lock() [253]
                0.00    0.00     821/1652        std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [374]
                0.00    0.00     783/783         void std::condition_variable::wait<ThreadPool::task()::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::task()::{lambda()#1}) [523]
                0.00    0.00     779/779         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [524]
                0.00    0.00     761/761         std::function<void ()>::function() [526]
                0.00    0.00       3/1632        std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [377]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::operator()() [23]
[22]     1.7    0.00    0.00       3         decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>) [22]
                0.00    0.00       3/3           std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [25]
                0.00    0.00       6/6           std::remove_reference<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>::type&& std::move<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [635]
                0.00    0.00       3/3           std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [703]
                0.00    0.00       3/3           std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [701]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_M_run() [26]
[23]     1.7    0.00    0.00       3         std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::operator()() [23]
                0.00    0.00       3/3           decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>) [22]
-----------------------------------------------
                0.00    0.00       3/3           std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [25]
[24]     1.7    0.00    0.00       3         void std::__invoke_impl<void, void (ThreadPool::*)(), ThreadPool*>(std::__invoke_memfun_deref, void (ThreadPool::*&&)(), ThreadPool*&&) [24]
                0.00    0.00       3/3           ThreadPool::task() [21]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
-----------------------------------------------
                0.00    0.00       3/3           decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>) [22]
[25]     1.7    0.00    0.00       3         std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [25]
                0.00    0.00       3/3           void std::__invoke_impl<void, void (ThreadPool::*)(), ThreadPool*>(std::__invoke_memfun_deref, void (ThreadPool::*&&)(), ThreadPool*&&) [24]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
-----------------------------------------------
                                                 <spontaneous>
[26]     1.7    0.00    0.00                 std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_M_run() [26]
                0.00    0.00       3/3           std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::operator()() [23]
-----------------------------------------------
                                                 <spontaneous>
[27]     1.6    0.00    0.00                 std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run() [27]
                0.00    0.00    1555/124609      main <cycle 1> [101]
                0.00    0.00     785/785         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [98]
                0.00    0.00     800/800         std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
-----------------------------------------------
                                                 <spontaneous>
[28]     1.4    0.00    0.00                 std::shared_ptr<std::packaged_task<sf::Image ()> > std::allocate_shared<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [28]
                0.00    0.00    1746/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[29]     1.4    0.00    0.00                 std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr<std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [29]
                0.00    0.00    1744/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[30]     1.4    0.00    0.00                 std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [30]
                0.00    0.00    1741/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[31]     1.4    0.00    0.00                 _ZNSt14_Function_base13_Base_managerIZN10ThreadPool6submitIZN13RaycastEngine12multi_renderERN2sf12RenderWindowEEUlvE_EESt6futureIDTclfp_EEET_EUlvE_E15_M_init_functorERSt9_Any_dataOSC_ [31]
                0.00    0.00    1741/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[32]     1.4    0.00    0.00                 decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [32]
                0.00    0.00    1741/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[33]     1.4    0.00    0.00                 void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::construct<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [33]
                0.00    0.00    1740/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[34]     1.4    0.00    0.00                 std::shared_ptr<std::packaged_task<sf::Image ()> > std::make_shared<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [34]
                0.00    0.00    1740/124609      main <cycle 1> [101]
                0.00    0.00     870/870         std::allocator<std::packaged_task<sf::Image ()> >::allocator() [418]
                0.00    0.00     840/2549        std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [277]
-----------------------------------------------
                                                 <spontaneous>
[35]     1.4    0.00    0.00                 void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::construct<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::packaged_task<sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [35]
                0.00    0.00    1739/124609      main <cycle 1> [101]
                0.00    0.00     870/6850        operator new(unsigned long long, void*) [213]
-----------------------------------------------
                                                 <spontaneous>
[36]     1.4    0.00    0.00                 std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
                0.00    0.00    1739/124609      main <cycle 1> [101]
                0.00    0.00     873/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00     870/1716        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> > const&) [328]
                0.00    0.00     867/867         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&) [426]
                0.00    0.00     865/865         std::remove_reference<std::allocator<std::packaged_task<sf::Image ()> > const&>::type&& std::move<std::allocator<std::packaged_task<sf::Image ()> > const&>(std::allocator<std::packaged_task<sf::Image ()> > const&) [435]
                0.00    0.00     863/1734        std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [294]
                0.00    0.00     851/851         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [475]
                0.00    0.00     848/1607        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [379]
                0.00    0.00     845/1702        std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [350]
                0.00    0.00     843/843         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [491]
                0.00    0.00     838/2549        std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [277]
-----------------------------------------------
                                                 <spontaneous>
[37]     1.4    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
                0.00    0.00    1739/124609      main <cycle 1> [101]
                0.00    0.00     872/2562        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [272]
                0.00    0.00     871/1727        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [307]
                0.00    0.00     871/1734        std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [294]
                0.00    0.00     871/871         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<sf::Image ()> >) [415]
                0.00    0.00     871/2549        std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [277]
-----------------------------------------------
                                                 <spontaneous>
[38]     1.4    0.00    0.00                 std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [38]
                0.00    0.00    1738/124609      main <cycle 1> [101]
                0.00    0.00     872/872         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [411]
-----------------------------------------------
                                                 <spontaneous>
[39]     1.4    0.00    0.00                 std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [39]
                0.00    0.00    1737/124609      main <cycle 1> [101]
                0.00    0.00     868/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
-----------------------------------------------
                                                 <spontaneous>
[40]     1.4    0.00    0.00                 void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::future<decltype ({parm#1}())>*, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [40]
                0.00    0.00    1734/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[41]     1.4    0.00    0.00                 std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> > std::allocate_shared<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [41]
                0.00    0.00    1734/124609      main <cycle 1> [101]
                0.00    0.00     866/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
-----------------------------------------------
                                                 <spontaneous>
[42]     1.4    0.00    0.00                 std::packaged_task<sf::Image ()>::packaged_task<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, void>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [42]
                0.00    0.00    1733/124609      main <cycle 1> [101]
                0.00    0.00     868/868         std::allocator<int>::allocator() [424]
                0.00    0.00     847/2551        std::allocator<int>::~allocator() [276]
-----------------------------------------------
                                                 <spontaneous>
[43]     1.4    0.00    0.00                 void __gnu_cxx::new_allocator<int>::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [43]
                0.00    0.00    1731/124609      main <cycle 1> [101]
                0.00    0.00     866/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00     865/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
-----------------------------------------------
                                                 <spontaneous>
[44]     1.4    0.00    0.00                 std::packaged_task<sf::Image ()>::packaged_task<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, void>(std::allocator_arg_t, std::allocator<int> const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [44]
                0.00    0.00    1728/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[45]     1.4    0.00    0.00                 void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, std::allocator<int> const&) [45]
                0.00    0.00    1724/124609      main <cycle 1> [101]
                0.00    0.00     863/6042        std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
-----------------------------------------------
                                                 <spontaneous>
[46]     1.4    0.00    0.00                 std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> >::~allocator() [46]
                0.00    0.00    1723/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[47]     1.4    0.00    0.00                 std::_Function_base::_Base_manager<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [47]
                0.00    0.00    1713/124609      main <cycle 1> [101]
-----------------------------------------------
                0.00    0.00     836/3362        std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [98]
                0.00    0.00    2526/3362        std::function<void ()>::~function() [58]
[48]     1.4    0.00    0.00    3362         std::_Function_base::~_Function_base() [48]
                0.00    0.00    1712/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[49]     1.4    0.00    0.00                 std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >&&) [49]
                0.00    0.00    1711/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[50]     1.4    0.00    0.00                 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*) [50]
                0.00    0.00    1711/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[51]     1.4    0.00    0.00                 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >(std::__allocated_ptr&) [51]
                0.00    0.00    1698/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[52]     1.3    0.00    0.00                 std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Task_state<{lambda()#1}>({lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [52]
                0.00    0.00    1673/124609      main <cycle 1> [101]
                0.00    0.00     862/862         std::__future_base::_Task_state_base<sf::Image ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [444]
-----------------------------------------------
                                                 <spontaneous>
[53]     1.3    0.00    0.00                 std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_init_functor(std::_Any_data&, {lambda()#1}&&) [53]
                0.00    0.00    1631/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[54]     1.3    0.00    0.00                 std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_invoke(std::_Any_data const&) [54]
                0.00    0.00    1626/124609      main <cycle 1> [101]
                0.00    0.00     867/1744        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [289]
                0.00    0.00     809/1673        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
-----------------------------------------------
                                                 <spontaneous>
[55]     1.3    0.00    0.00                 std::_Function_handler<void (), ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [55]
                0.00    0.00    1626/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[56]     1.3    0.00    0.00                 std::__invoke_result<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>::type std::__invoke<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>(std::__invoke_result&&, (RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&)...) [56]
                0.00    0.00    1620/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[57]     1.3    0.00    0.00                 std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_get_pointer(std::_Any_data const&) [57]
                0.00    0.00    1584/124609      main <cycle 1> [101]
-----------------------------------------------
                0.00    0.00     798/2482        ThreadPool::task() [21]
                0.00    0.00     840/2482        void __gnu_cxx::new_allocator<std::function<void ()> >::destroy<std::function<void ()> >(std::function<void ()>*) [95]
                0.00    0.00     844/2482        std::function<void ()>::operator=(std::function<void ()>&&) [93]
[58]     1.0    0.00    0.00    2482         std::function<void ()>::~function() [58]
                0.00    0.00    2526/3362        std::_Function_base::~_Function_base() [48]
-----------------------------------------------
                                                 <spontaneous>
[59]     0.7    0.00    0.00                 void __gnu_cxx::new_allocator<int>::destroy<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*) [59]
                0.00    0.00     876/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[60]     0.7    0.00    0.00                 std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::~_Task_state() [60]
                0.00    0.00     876/124609      main <cycle 1> [101]
                0.00    0.00     876/876         std::__future_base::_Task_state_base<sf::Image ()>::~_Task_state_base() [399]
-----------------------------------------------
                                                 <spontaneous>
[61]     0.7    0.00    0.00                 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [61]
                0.00    0.00     876/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[62]     0.7    0.00    0.00                 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*, unsigned long long) [62]
                0.00    0.00     876/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[63]     0.7    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [63]
                0.00    0.00     876/124609      main <cycle 1> [101]
                0.00    0.00     876/1738        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [291]
-----------------------------------------------
                                                 <spontaneous>
[64]     0.7    0.00    0.00                 void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >(std::allocator<int>&, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*) [64]
                0.00    0.00     875/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[65]     0.7    0.00    0.00                 __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*) [65]
                0.00    0.00     865/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[66]     0.7    0.00    0.00                 std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>&, unsigned long long) [66]
                0.00    0.00     864/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[67]     0.7    0.00    0.00                 std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [67]
                0.00    0.00     857/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[68]     0.7    0.00    0.00                 std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [68]
                0.00    0.00     852/124609      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
-----------------------------------------------
                                                 <spontaneous>
[69]     0.7    0.00    0.00                 std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [69]
                0.00    0.00     849/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[70]     0.7    0.00    0.00                 std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::~shared_ptr() [70]
                0.00    0.00     848/124609      main <cycle 1> [101]
-----------------------------------------------
                0.00    0.00     847/1700        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [20]
                0.00    0.00     853/1700        std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [12]
[71]     0.7    0.00    0.00    1700         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [71]
                0.00    0.00     847/124609      main <cycle 1> [101]
                0.00    0.00     843/843         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [492]
-----------------------------------------------
                                                 <spontaneous>
[72]     0.7    0.00    0.00                 std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Impl::_Impl<{lambda()#1}>({lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [72]
                0.00    0.00     846/124609      main <cycle 1> [101]
                0.00    0.00     843/1704        std::allocator<int>::allocator(std::allocator<int> const&) [348]
-----------------------------------------------
                                                 <spontaneous>
[73]     0.7    0.00    0.00                 std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_manager(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> const&, std::_Manager_operation) [73]
                0.00    0.00     844/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[74]     0.7    0.00    0.00                 std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::get() [74]
                0.00    0.00     844/124609      main <cycle 1> [101]
-----------------------------------------------
                0.00    0.00     840/840         std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
[75]     0.7    0.00    0.00     840         std::packaged_task<sf::Image ()>::get_future() [75]
                0.00    0.00     831/124609      std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() <cycle 1> [274]
                0.00    0.00     847/847         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [480]
                0.00    0.00     830/830         std::future<sf::Image>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [502]
-----------------------------------------------
                                                 <spontaneous>
[76]     0.7    0.00    0.00                 std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, true>) [76]
                0.00    0.00     825/124609      main <cycle 1> [101]
                0.00    0.00     830/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00     829/3407        std::_Any_data::_M_access() [241]
-----------------------------------------------
                                                 <spontaneous>
[77]     0.7    0.00    0.00                 std::_Function_base::_Base_manager<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1} const&, std::_Manager_operation) [77]
                0.00    0.00     817/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[78]     0.7    0.00    0.00                 sf::Image std::__invoke_impl<sf::Image, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>(std::__invoke_other, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&) [78]
                0.00    0.00     815/124609      main <cycle 1> [101]
                0.00    0.00     787/1539        RaycastEngine::render(int, int) [384]
-----------------------------------------------
                                                 <spontaneous>
[79]     0.7    0.00    0.00                 std::_Function_base::_Base_manager<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [79]
                0.00    0.00     814/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[80]     0.6    0.00    0.00                 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>::operator()() const [80]
                0.00    0.00     809/124609      main <cycle 1> [101]
                0.00    0.00     844/844         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [486]
                0.00    0.00     808/808         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::operator->() const [516]
                0.00    0.00     786/1645        std::remove_reference<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&) [375]
                0.00    0.00     770/770         std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [525]
-----------------------------------------------
                0.00    0.00     805/805         void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [83]
[81]     0.6    0.00    0.00     805         std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [81]
                0.00    0.00     770/770         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [84]
                0.00    0.00     859/2576        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
                0.00    0.00     786/786         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [521]
-----------------------------------------------
                0.00    0.00     793/793         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
[82]     0.6    0.00    0.00     793         std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
                0.00    0.00     790/790         void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [83]
                0.00    0.00     815/1626        void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [378]
                0.00    0.00     812/2396        std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [283]
                0.00    0.00     804/2406        std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [282]
                0.00    0.00     784/2374        bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [284]
-----------------------------------------------
                0.00    0.00     790/790         std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
[83]     0.6    0.00    0.00     790         void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [83]
                0.00    0.00     805/805         std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [81]
                0.00    0.00     814/2406        std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [282]
                0.00    0.00     807/2374        bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [284]
                0.00    0.00     794/2396        std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [283]
-----------------------------------------------
                0.00    0.00     770/770         std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [81]
[84]     0.6    0.00    0.00     770         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [84]
                0.00    0.00     806/124609      main <cycle 1> [101]
                0.00    0.00     784/1572        std::_Function_base::_M_empty() const [383]
-----------------------------------------------
                0.00    0.00     752/752         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() [87]
[85]     0.6    0.00    0.00     752         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const [85]
                0.00    0.00     748/748         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
-----------------------------------------------
                0.00    0.00     748/748         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const [85]
[86]     0.6    0.00    0.00     748         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
                0.00    0.00     793/793         std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
                0.00    0.00     811/1626        void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [378]
                0.00    0.00     790/2396        std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [283]
                0.00    0.00     788/2406        std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [282]
                0.00    0.00     783/2374        bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [284]
-----------------------------------------------
                                                 <spontaneous>
[87]     0.6    0.00    0.00                 std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::_FUN() [87]
                0.00    0.00     752/752         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const [85]
-----------------------------------------------
                                                 <spontaneous>
[88]     0.6    0.00    0.00                 std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}::operator()() const [88]
                0.00    0.00     800/124609      main <cycle 1> [101]
-----------------------------------------------
                                                 <spontaneous>
[89]     0.6    0.00    0.00                 std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}&, std::__future_base::_Task_setter&) [89]
                0.00    0.00     799/124609      main <cycle 1> [101]
                0.00    0.00     785/785         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&) [522]
-----------------------------------------------
                0.00    0.00     761/761         ThreadPool::task() [21]
[90]     0.6    0.00    0.00     761         std::function<void ()>::operator()() const [90]
                0.00    0.00     795/124609      main <cycle 1> [101]
                0.00    0.00     788/1572        std::_Function_base::_M_empty() const [383]
-----------------------------------------------
                0.00    0.00     808/808         ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}::operator()() const [92]
[91]     0.6    0.00    0.00     808         std::packaged_task<sf::Image ()>::operator()() [91]
                0.00    0.00     754/124609      main <cycle 1> [101]
                0.00    0.00     818/818         void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<sf::Image ()> >(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [509]
                0.00    0.00     797/2521        std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [281]
-----------------------------------------------
                                                 <spontaneous>
[92]     0.6    0.00    0.00                 ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}::operator()() const [92]
                0.00    0.00     808/808         std::packaged_task<sf::Image ()>::operator()() [91]
                0.00    0.00     826/826         std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [504]
-----------------------------------------------
                0.00    0.00     832/832         ThreadPool::task() [21]
[93]     0.4    0.00    0.00     832         std::function<void ()>::operator=(std::function<void ()>&&) [93]
                0.00    0.00     844/2482        std::function<void ()>::~function() [58]
                0.00    0.00     840/1678        std::function<void ()>::swap(std::function<void ()>&) [366]
                0.00    0.00     837/837         std::function<void ()>::function(std::function<void ()>&&) [501]
                0.00    0.00     831/1652        std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [374]
-----------------------------------------------
                0.00    0.00      49/838         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [100]
                0.00    0.00     789/838         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [96]
[94]     0.3    0.00    0.00     838         void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [94]
                0.00    0.00     832/832         void __gnu_cxx::new_allocator<std::function<void ()> >::destroy<std::function<void ()> >(std::function<void ()>*) [95]
-----------------------------------------------
                0.00    0.00     832/832         void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [94]
[95]     0.3    0.00    0.00     832         void __gnu_cxx::new_allocator<std::function<void ()> >::destroy<std::function<void ()> >(std::function<void ()>*) [95]
                0.00    0.00     840/2482        std::function<void ()>::~function() [58]
-----------------------------------------------
                0.00    0.00     846/846         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [97]
[96]     0.3    0.00    0.00     846         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [96]
                0.00    0.00     789/838         void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [94]
                0.00    0.00      49/49          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [100]
-----------------------------------------------
                0.00    0.00     833/833         ThreadPool::task() [21]
[97]     0.3    0.00    0.00     833         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop() [97]
                0.00    0.00     846/846         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [96]
-----------------------------------------------
                0.00    0.00     785/785         std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run() [27]
[98]     0.3    0.00    0.00     785         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function() [98]
                0.00    0.00     836/3362        std::_Function_base::~_Function_base() [48]
-----------------------------------------------
                                                 <spontaneous>
[99]     0.1    0.00    0.00                 void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [99]
                0.00    0.00     102/124609      main <cycle 1> [101]
                0.00    0.00      54/54          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long long) [578]
                0.00    0.00      53/54          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [577]
                0.00    0.00      53/185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
-----------------------------------------------
                0.00    0.00      49/49          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front() [96]
[100]    0.0    0.00    0.00      49         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [100]
                0.00    0.00      49/838         void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [94]
                0.00    0.00      51/52          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [579]
                0.00    0.00      50/185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
                0.00    0.00      48/50          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [585]
-----------------------------------------------
                                 867             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
                                1718             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
                0.00    0.00     102/124609      void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [99]
                0.00    0.00     754/124609      std::packaged_task<sf::Image ()>::operator()() [91]
                0.00    0.00     795/124609      std::function<void ()>::operator()() const [90]
                0.00    0.00     799/124609      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}&, std::__future_base::_Task_setter&) [89]
                0.00    0.00     800/124609      std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}::operator()() const [88]
                0.00    0.00     806/124609      std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [84]
                0.00    0.00     809/124609      std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>::operator()() const [80]
                0.00    0.00     814/124609      std::_Function_base::_Base_manager<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_get_pointer(std::_Any_data const&) [79]
                0.00    0.00     815/124609      sf::Image std::__invoke_impl<sf::Image, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>(std::__invoke_other, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&) [78]
                0.00    0.00     817/124609      std::_Function_base::_Base_manager<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_manager(std::_Any_data&, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1} const&, std::_Manager_operation) [77]
                0.00    0.00     825/124609      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, true>) [76]
                0.00    0.00     844/124609      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::get() [74]
                0.00    0.00     844/124609      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_manager(std::_Any_data&, std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> const&, std::_Manager_operation) [73]
                0.00    0.00     846/124609      std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Impl::_Impl<{lambda()#1}>({lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [72]
                0.00    0.00     847/124609      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [71]
                0.00    0.00     848/124609      std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::~shared_ptr() [70]
                0.00    0.00     849/124609      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [69]
                0.00    0.00     857/124609      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_destroy(std::_Any_data&, std::integral_constant<bool, true>) [67]
                0.00    0.00     864/124609      std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>&, unsigned long long) [66]
                0.00    0.00     865/124609      __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*) [65]
                0.00    0.00     875/124609      void std::allocator_traits<std::allocator<int> >::destroy<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >(std::allocator<int>&, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*) [64]
                0.00    0.00     876/124609      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [61]
                0.00    0.00     876/124609      std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*, unsigned long long) [62]
                0.00    0.00     876/124609      std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::~_Task_state() [60]
                0.00    0.00     876/124609      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [63]
                0.00    0.00     876/124609      void __gnu_cxx::new_allocator<int>::destroy<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*) [59]
                0.00    0.00    1555/124609      std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run() [27]
                0.00    0.00    1584/124609      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_get_pointer(std::_Any_data const&) [57]
                0.00    0.00    1620/124609      std::__invoke_result<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>::type std::__invoke<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>(std::__invoke_result&&, (RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&)...) [56]
                0.00    0.00    1626/124609      std::_Function_handler<void (), ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_invoke(std::_Any_data const&) [55]
                0.00    0.00    1626/124609      std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_invoke(std::_Any_data const&) [54]
                0.00    0.00    1631/124609      std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_init_functor(std::_Any_data&, {lambda()#1}&&) [53]
                0.00    0.00    1673/124609      std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Task_state<{lambda()#1}>({lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [52]
                0.00    0.00    1698/124609      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >(std::__allocated_ptr&) [51]
                0.00    0.00    1711/124609      std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >&&) [49]
                0.00    0.00    1711/124609      std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>&, __gnu_cxx::_Lock_policy*) [50]
                0.00    0.00    1712/124609      std::_Function_base::~_Function_base() [48]
                0.00    0.00    1713/124609      std::_Function_base::_Base_manager<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>::_M_destroy(std::_Any_data&, std::integral_constant<bool, false>) [47]
                0.00    0.00    1723/124609      std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> >::~allocator() [46]
                0.00    0.00    1724/124609      void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, std::allocator<int> const&) [45]
                0.00    0.00    1728/124609      std::packaged_task<sf::Image ()>::packaged_task<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, void>(std::allocator_arg_t, std::allocator<int> const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [44]
                0.00    0.00    1731/124609      void __gnu_cxx::new_allocator<int>::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [43]
                0.00    0.00    1733/124609      std::packaged_task<sf::Image ()>::packaged_task<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, void>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [42]
                0.00    0.00    1734/124609      void std::allocator_traits<std::allocator<std::function<void ()> > >::construct<std::function<void ()>, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(std::allocator<std::function<void ()> >&, std::future<decltype ({parm#1}())>*, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [40]
                0.00    0.00    1734/124609      std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> > std::allocate_shared<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [41]
                0.00    0.00    1735/124609      std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [20]
                0.00    0.00    1737/124609      std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [39]
                0.00    0.00    1738/124609      std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [38]
                0.00    0.00    1739/124609      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
                0.00    0.00    1739/124609      std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
                0.00    0.00    1739/124609      void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::construct<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::packaged_task<sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [35]
                0.00    0.00    1740/124609      std::shared_ptr<std::packaged_task<sf::Image ()> > std::make_shared<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [34]
                0.00    0.00    1740/124609      void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::construct<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [33]
                0.00    0.00    1741/124609      decltype(auto) std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::emplace<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [32]
                0.00    0.00    1741/124609      _ZNSt14_Function_base13_Base_managerIZN10ThreadPool6submitIZN13RaycastEngine12multi_renderERN2sf12RenderWindowEEUlvE_EESt6futureIDTclfp_EEET_EUlvE_E15_M_init_functorERSt9_Any_dataOSC_ [31]
                0.00    0.00    1741/124609      std::allocator<std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2> >::allocator<int>(std::allocator<int> const&) [30]
                0.00    0.00    1744/124609      std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr<std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [29]
                0.00    0.00    1746/124609      std::shared_ptr<std::packaged_task<sf::Image ()> > std::allocate_shared<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [28]
                0.00    0.00    2401/124609      std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>, void, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>) [19]
                0.00    0.00    2582/124609      _ZNSt14_Function_base13_Base_managerIZN10ThreadPool6submitIZN13RaycastEngine12multi_renderERN2sf12RenderWindowEEUlvE_EESt6futureIDTclfp_EEET_EUlvE_E15_M_init_functorERSt9_Any_dataOSC_St17integral_constantIbLb0EE [18]
                0.00    0.00    2582/124609      std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [12]
                0.00    0.00    2592/124609      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [17]
                0.00    0.00    2595/124609      __gnu_cxx::__aligned_buffer<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::_M_ptr() [16]
                0.00    0.00    2606/124609      std::function<void ()>::function<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}, void, void>(std::future<decltype ({parm#1}())>) [15]
                0.00    0.00    2622/124609      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [13]
                0.00    0.00    3429/124609      std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > std::__create_task_state<sf::Image (), RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int> >(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&, std::allocator<int> const&) [11]
                0.00    0.00    3440/124609      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<{lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [10]
                0.00    0.00    3470/124609      std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
                0.00    0.00    3471/124609      void __gnu_cxx::new_allocator<std::function<void ()> >::construct<std::function<void ()>, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(std::future<decltype ({parm#1}())>*, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [7]
                0.00    0.00    5227/124609      std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [5]
                0.00    0.00    6815/124609      std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
[101]    0.0    0.00    0.00  122059         main <cycle 1> [101]
                0.00    0.00       1/1           World::World(int, int, int) [758]
                0.00    0.00       1/1           World::~World() [759]
                                   1             World::update() <cycle 1> [757]
-----------------------------------------------
                0.00    0.00 209902264/209902264     trig::Vector2<float>::operator trig::Vector2<int>() const [181]
[179]    0.0    0.00    0.00 209902264         trig::Vector2<int>::Vector2(int, int) [179]
-----------------------------------------------
                0.00    0.00 195095688/195095688     RaycastEngine::render(int, int) [384]
[180]    0.0    0.00    0.00 195095688         MyWorld::get_pixel_color(trig::Vector2<int> const&, RaycastEngine::CellSide, float, float, float) [180]
                0.00    0.00 57869998/57869998     RaycastEngine::sample_image(float, float, sf::Image const&) [182]
-----------------------------------------------
                0.00    0.00  284057/186134655     RaycastEngine::get_distance(float) [205]
                0.00    0.00 185850598/186134655     RaycastEngine::render(int, int) [384]
[181]    0.0    0.00    0.00 186134655         trig::Vector2<float>::operator trig::Vector2<int>() const [181]
                0.00    0.00 209902264/209902264     trig::Vector2<int>::Vector2(int, int) [179]
-----------------------------------------------
                0.00    0.00 57869998/57869998     MyWorld::get_pixel_color(trig::Vector2<int> const&, RaycastEngine::CellSide, float, float, float) [180]
[182]    0.0    0.00    0.00 57869998         RaycastEngine::sample_image(float, float, sf::Image const&) [182]
-----------------------------------------------
                0.00    0.00 5454356/5454356     MyWorld::out_of_bounds(trig::Vector2<int> const&) [184]
[183]    0.0    0.00    0.00 5454356         DynamicGrid<bool>::out_of_bounds(int, int) const [183]
                0.00    0.00 5360965/5362022     DynamicGrid<bool>::get_width() const [185]
                0.00    0.00 5329372/5329406     DynamicGrid<bool>::get_height() const [188]
-----------------------------------------------
                0.00    0.00 5362486/5362486     RaycastEngine::get_distance(float) [205]
[184]    0.0    0.00    0.00 5362486         MyWorld::out_of_bounds(trig::Vector2<int> const&) [184]
                0.00    0.00 5454356/5454356     DynamicGrid<bool>::out_of_bounds(int, int) const [183]
-----------------------------------------------
                0.00    0.00    1057/5362022     MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00 5360965/5362022     DynamicGrid<bool>::out_of_bounds(int, int) const [183]
[185]    0.0    0.00    0.00 5362022         DynamicGrid<bool>::get_width() const [185]
-----------------------------------------------
                0.00    0.00     256/5340855     std::_Bit_iterator::operator*() const [568]
                0.00    0.00 5340599/5340855     std::_Bit_const_iterator::operator*() const [192]
[186]    0.0    0.00    0.00 5340855         std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) [186]
-----------------------------------------------
                0.00    0.00       2/5334303     std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) [732]
                0.00    0.00       9/5334303     std::_Bit_iterator::_Bit_iterator() [606]
                0.00    0.00 5334292/5334303     std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int) [189]
[187]    0.0    0.00    0.00 5334303         std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [187]
-----------------------------------------------
                0.00    0.00      34/5329406     MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00 5329372/5329406     DynamicGrid<bool>::out_of_bounds(int, int) const [183]
[188]    0.0    0.00    0.00 5329406         DynamicGrid<bool>::get_height() const [188]
-----------------------------------------------
                0.00    0.00 5326409/5326409     std::vector<bool, std::allocator<bool> >::operator[](unsigned long long) const [190]
[189]    0.0    0.00    0.00 5326409         std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int) [189]
                0.00    0.00 5334292/5334303     std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [187]
-----------------------------------------------
                0.00    0.00 5322174/5322174     DynamicGrid<bool>::index(int, int) const [193]
[190]    0.0    0.00    0.00 5322174         std::vector<bool, std::allocator<bool> >::operator[](unsigned long long) const [190]
                0.00    0.00 5326409/5326409     std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int) [189]
                0.00    0.00 5318550/5318550     std::_Bit_const_iterator::operator*() const [192]
-----------------------------------------------
                0.00    0.00 5320347/5320347     std::_Bit_const_iterator::operator*() const [192]
[191]    0.0    0.00    0.00 5320347         std::_Bit_reference::operator bool() const [191]
-----------------------------------------------
                0.00    0.00 5318550/5318550     std::vector<bool, std::allocator<bool> >::operator[](unsigned long long) const [190]
[192]    0.0    0.00    0.00 5318550         std::_Bit_const_iterator::operator*() const [192]
                0.00    0.00 5340599/5340855     std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) [186]
                0.00    0.00 5320347/5320347     std::_Bit_reference::operator bool() const [191]
-----------------------------------------------
                0.00    0.00    1024/5311844     MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00 5310820/5311844     MyWorld::is_solid(trig::Vector2<int> const&) [194]
[193]    0.0    0.00    0.00 5311844         DynamicGrid<bool>::index(int, int) const [193]
                0.00    0.00 5322174/5322174     std::vector<bool, std::allocator<bool> >::operator[](unsigned long long) const [190]
-----------------------------------------------
                0.00    0.00 5287599/5287599     RaycastEngine::get_distance(float) [205]
[194]    0.0    0.00    0.00 5287599         MyWorld::is_solid(trig::Vector2<int> const&) [194]
                0.00    0.00 5310820/5311844     DynamicGrid<bool>::index(int, int) const [193]
-----------------------------------------------
                0.00    0.00       1/1625274     World::World(int, int, int) [758]
                0.00    0.00       1/1625274     Camera::Camera() [760]
                0.00    0.00  283917/1625274     trig::Vector2<int>::operator trig::Vector2<float>() const [201]
                0.00    0.00  290554/1625274     trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00  505553/1625274     RaycastEngine::get_distance(float) [205]
                0.00    0.00  545248/1625274     trig::Vector2<float>::operator+(trig::Vector2<float> const&) const [198]
[195]    0.0    0.00    0.00 1625274         trig::Vector2<float>::Vector2(float, float) [195]
-----------------------------------------------
                0.00    0.00  527176/527176      std::array<float, 2ull>::operator[](unsigned long long) [197]
[196]    0.0    0.00    0.00  527176         std::__array_traits<float, 2ull>::_S_ref(float const (&) [2], unsigned long long) [196]
-----------------------------------------------
                0.00    0.00  468094/468094      RaycastEngine::render(int, int) [384]
[197]    0.0    0.00    0.00  468094         std::array<float, 2ull>::operator[](unsigned long long) [197]
                0.00    0.00  527176/527176      std::__array_traits<float, 2ull>::_S_ref(float const (&) [2], unsigned long long) [196]
-----------------------------------------------
                0.00    0.00  460205/460205      RaycastEngine::get_distance(float) [205]
[198]    0.0    0.00    0.00  460205         trig::Vector2<float>::operator+(trig::Vector2<float> const&) const [198]
                0.00    0.00  545248/1625274     trig::Vector2<float>::Vector2(float, float) [195]
-----------------------------------------------
                0.00    0.00  450018/450018      RaycastEngine::get_distance(float) [205]
[199]    0.0    0.00    0.00  450018         std::abs(float) [199]
-----------------------------------------------
                0.00    0.00      16/285610      Camera::move_right(float) [611]
                0.00    0.00      16/285610      Camera::move_left(float) [612]
                0.00    0.00      26/285610      Camera::move_backward(float) [595]
                0.00    0.00     376/285610      Camera::move_forward(float) [574]
                0.00    0.00  285176/285610      RaycastEngine::get_distance(float) [205]
[200]    0.0    0.00    0.00  285610         trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00  290554/1625274     trig::Vector2<float>::Vector2(float, float) [195]
-----------------------------------------------
                0.00    0.00  272273/272273      RaycastEngine::get_distance(float) [205]
[201]    0.0    0.00    0.00  272273         trig::Vector2<int>::operator trig::Vector2<float>() const [201]
                0.00    0.00  283917/1625274     trig::Vector2<float>::Vector2(float, float) [195]
-----------------------------------------------
                0.00    0.00  263755/263755      RaycastEngine::get_distance(float) [205]
[202]    0.0    0.00    0.00  263755         trig::Vector2<float>::Vector2() [202]
-----------------------------------------------
                0.00    0.00       8/247519      Camera::move_right(float) [611]
                0.00    0.00       8/247519      Camera::move_left(float) [612]
                0.00    0.00      13/247519      Camera::move_backward(float) [595]
                0.00    0.00     188/247519      Camera::move_forward(float) [574]
                0.00    0.00  247302/247519      RaycastEngine::get_distance(float) [205]
[203]    0.0    0.00    0.00  247519         trig::Vector2<float>::Vector2(float) [203]
-----------------------------------------------
                0.00    0.00  227110/227110      RaycastEngine::get_distance(float) [205]
[204]    0.0    0.00    0.00  227110         trig::Vector2<int>::Vector2() [204]
-----------------------------------------------
                0.00    0.00  202663/202663      RaycastEngine::render(int, int) [384]
[205]    0.0    0.00    0.00  202663         RaycastEngine::get_distance(float) [205]
                0.00    0.00 5362486/5362486     MyWorld::out_of_bounds(trig::Vector2<int> const&) [184]
                0.00    0.00 5287599/5287599     MyWorld::is_solid(trig::Vector2<int> const&) [194]
                0.00    0.00  505553/1625274     trig::Vector2<float>::Vector2(float, float) [195]
                0.00    0.00  460205/460205      trig::Vector2<float>::operator+(trig::Vector2<float> const&) const [198]
                0.00    0.00  450018/450018      std::abs(float) [199]
                0.00    0.00  285176/285610      trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00  284057/186134655     trig::Vector2<float>::operator trig::Vector2<int>() const [181]
                0.00    0.00  272273/272273      trig::Vector2<int>::operator trig::Vector2<float>() const [201]
                0.00    0.00  263755/263755      trig::Vector2<float>::Vector2() [202]
                0.00    0.00  247302/247519      trig::Vector2<float>::Vector2(float) [203]
                0.00    0.00  227110/227110      trig::Vector2<int>::Vector2() [204]
-----------------------------------------------
                0.00    0.00     752/44468       void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [510]
                0.00    0.00     778/44468       __gthread_once(long*, void (*)()) [889]
                0.00    0.00     862/44468       std::__mutex_base::__mutex_base() [451]
                0.00    0.00     865/44468       __gthread_mutex_init_function(void**) [894]
                0.00    0.00     879/44468       __gthread_mutex_destroy(void**) [893]
                0.00    0.00     879/44468       std::__mutex_base::~__mutex_base() [420]
                0.00    0.00    2570/44468       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [270]
                0.00    0.00    3425/44468       std::mutex::unlock() [236]
                0.00    0.00    3435/44468       std::mutex::lock() [242]
                0.00    0.00    3447/44468       __gthread_mutex_unlock(void**) [892]
                0.00    0.00    3454/44468       __gthread_mutex_lock(void**) [891]
                0.00    0.00    5156/44468       __gnu_cxx::__atomic_add_dispatch(int*, int) [943]
                0.00    0.00    5939/44468       std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
                0.00    0.00   12027/44468       __gnu_cxx::__exchange_and_add_dispatch(int*, int) [945]
[206]    0.0    0.00    0.00   44468         __gcc_deregister_frame [206]
-----------------------------------------------
                0.00    0.00     855/18969       std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [486]
                0.00    0.00     861/18969       std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter&&) [433]
                0.00    0.00     862/18969       std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [466]
                0.00    0.00     864/18969       std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [439]
                0.00    0.00     865/18969       std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [463]
                0.00    0.00    1719/18969       std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [325]
                0.00    0.00    1720/18969       std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [308]
                0.00    0.00    1723/18969       std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
                0.00    0.00    1724/18969       std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [331]
                0.00    0.00    1727/18969       std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [303]
                0.00    0.00    2591/18969       std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [258]
                0.00    0.00    3458/18969       std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [234]
[207]    0.0    0.00    0.00   18969         std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                                 852             std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [489]
                                 878             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [394]
                                2573             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [269]
                0.00    0.00     852/124609      std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [68]
                0.00    0.00    3452/124609      std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [8]
[208]    0.0    0.00    0.00    8607         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
                                4272             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
-----------------------------------------------
                0.00    0.00    7799/7799        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [210]
[209]    0.0    0.00    0.00    7799         std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>&) [209]
-----------------------------------------------
                0.00    0.00     867/7794        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [463]
                0.00    0.00    3460/7794        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [303]
                0.00    0.00    3467/7794        std::__future_base::_Result_base::_Deleter& std::__get_helper<1ull, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [235]
[210]    0.0    0.00    0.00    7794         std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [210]
                0.00    0.00    7799/7799        std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>&) [209]
-----------------------------------------------
                0.00    0.00     864/6931        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
                0.00    0.00    2610/6931        std::__future_base::_Result_base*& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [257]
                0.00    0.00    3457/6931        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
[211]    0.0    0.00    0.00    6931         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [211]
                0.00    0.00    6916/6916        std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false>&) [212]
-----------------------------------------------
                0.00    0.00    6916/6916        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [211]
[212]    0.0    0.00    0.00    6916         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false>&) [212]
-----------------------------------------------
                0.00    0.00       3/6850        void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [653]
                0.00    0.00       3/6850        void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&) [698]
                0.00    0.00     830/6850        std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, true>) [76]
                0.00    0.00     836/6850        std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [525]
                0.00    0.00     852/6850        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
                0.00    0.00     852/6850        void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&) [477]
                0.00    0.00     865/6850        void __gnu_cxx::new_allocator<std::function<void ()> >::construct<std::function<void ()>, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(std::future<decltype ({parm#1}())>*, ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [7]
                0.00    0.00     866/6850        void __gnu_cxx::new_allocator<int>::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [43]
                0.00    0.00     870/6850        void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::construct<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::packaged_task<sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [35]
                0.00    0.00     873/6850        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[213]    0.0    0.00    0.00    6850         operator new(unsigned long long, void*) [213]
-----------------------------------------------
                0.00    0.00     850/6042        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
                0.00    0.00     862/6042        std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<{lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [10]
                0.00    0.00     863/6042        void std::allocator_traits<std::allocator<int> >::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, std::allocator<int> const&>(std::allocator<int>&, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, std::allocator<int> const&) [45]
                0.00    0.00     865/6042        void __gnu_cxx::new_allocator<int>::construct<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [43]
                0.00    0.00     866/6042        std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> > std::allocate_shared<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [41]
                0.00    0.00     868/6042        std::shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()> >::shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [39]
                0.00    0.00     868/6042        std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [12]
[214]    0.0    0.00    0.00    6042         std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&) [214]
-----------------------------------------------
                0.00    0.00    1723/5179        std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [308]
                0.00    0.00    1728/5179        std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [313]
                0.00    0.00    1728/5179        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [331]
[215]    0.0    0.00    0.00    5179         std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [215]
-----------------------------------------------
                0.00    0.00    5171/5171        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [217]
[216]    0.0    0.00    0.00    5171         std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>&) [216]
-----------------------------------------------
                0.00    0.00    5171/5171        std::__future_base::_Result<sf::Image>*& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [218]
[217]    0.0    0.00    0.00    5171         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [217]
                0.00    0.00    5171/5171        std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>&) [216]
-----------------------------------------------
                0.00    0.00    5159/5159        std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [219]
[218]    0.0    0.00    0.00    5159         std::__future_base::_Result<sf::Image>*& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [218]
                0.00    0.00    5171/5171        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [217]
-----------------------------------------------
                0.00    0.00    5132/5132        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [220]
[219]    0.0    0.00    0.00    5132         std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [219]
                0.00    0.00    5159/5159        std::__future_base::_Result<sf::Image>*& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [218]
-----------------------------------------------
                0.00    0.00     839/5083        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<sf::Image>*) [503]
                0.00    0.00    1744/5083        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [289]
                0.00    0.00    2500/5083        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release() [260]
[220]    0.0    0.00    0.00    5083         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [220]
                0.00    0.00    5132/5132        std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [219]
-----------------------------------------------
                0.00    0.00    5073/5073        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [368]
[221]    0.0    0.00    0.00    5073         std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [221]
-----------------------------------------------
                0.00    0.00    5043/5043        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [365]
[222]    0.0    0.00    0.00    5043         std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&)) [222]
-----------------------------------------------
                0.00    0.00    5004/5004        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [369]
[223]    0.0    0.00    0.00    5004         std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [223]
-----------------------------------------------
                0.00    0.00    1757/4317        std::allocator<int>::~allocator() [287]
                0.00    0.00    2560/4317        std::allocator<int>::~allocator() [276]
[224]    0.0    0.00    0.00    4317         __gnu_cxx::new_allocator<int>::~new_allocator() [224]
-----------------------------------------------
                0.00    0.00     850/4317        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&&) [476]
                0.00    0.00     853/4317        std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [1021]
                0.00    0.00     879/4317        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [398]
                0.00    0.00    1735/4317        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [297]
[225]    0.0    0.00    0.00    4317         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [225]
-----------------------------------------------
                0.00    0.00     851/4313        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&&) [476]
                0.00    0.00     853/4313        std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [1021]
                0.00    0.00     874/4313        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&) [390]
                0.00    0.00    1735/4313        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [297]
[226]    0.0    0.00    0.00    4313         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [226]
-----------------------------------------------
                0.00    0.00     838/4302        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
                0.00    0.00    3464/4302        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
[227]    0.0    0.00    0.00    4302         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_tail(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [227]
-----------------------------------------------
                                4272             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
[228]    0.0    0.00    0.00    4272         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
                0.00    0.00    5939/44468       __gcc_deregister_frame [206]
                0.00    0.00     788/788         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
                                1718             main <cycle 1> [101]
                                 787             std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [520]
-----------------------------------------------
                0.00    0.00    3480/3480        unsigned char const* std::__niter_base<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) [231]
[229]    0.0    0.00    0.00    3480         __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::base() const [229]
-----------------------------------------------
                0.00    0.00    3474/3474        unsigned char* std::copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [295]
[230]    0.0    0.00    0.00    3474         __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > std::__miter_base<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) [230]
-----------------------------------------------
                0.00    0.00    3465/3465        unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [309]
[231]    0.0    0.00    0.00    3465         unsigned char const* std::__niter_base<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) [231]
                0.00    0.00    3480/3480        __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::base() const [229]
-----------------------------------------------
                0.00    0.00    1727/3461        std::vector<unsigned char, std::allocator<unsigned char> >::end() const [301]
                0.00    0.00    1734/3461        std::vector<unsigned char, std::allocator<unsigned char> >::begin() const [293]
[232]    0.0    0.00    0.00    3461         __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::__normal_iterator(unsigned char const* const&) [232]
-----------------------------------------------
                0.00    0.00     863/3461        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
                0.00    0.00     866/3461        std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&&) [425]
                0.00    0.00    1732/3461        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
[233]    0.0    0.00    0.00    3461         std::__future_base::_Result_base*&& std::forward<std::__future_base::_Result_base*>(std::remove_reference<std::__future_base::_Result_base*>::type&) [233]
-----------------------------------------------
                0.00    0.00     862/3460        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [463]
                0.00    0.00    2598/3460        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [258]
[234]    0.0    0.00    0.00    3460         std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [234]
                0.00    0.00    3458/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                0.00    0.00     878/3455        std::tuple_element<1ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [397]
                0.00    0.00    2577/3455        std::tuple_element<1ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [259]
[235]    0.0    0.00    0.00    3455         std::__future_base::_Result_base::_Deleter& std::__get_helper<1ull, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [235]
                0.00    0.00    3467/7794        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [210]
-----------------------------------------------
                0.00    0.00    3438/3438        std::unique_lock<std::mutex>::unlock() [246]
[236]    0.0    0.00    0.00    3438         std::mutex::unlock() [236]
                0.00    0.00    3425/44468       __gcc_deregister_frame [206]
-----------------------------------------------
                0.00    0.00    1701/3426        std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [319]
                0.00    0.00    1725/3426        std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [320]
[237]    0.0    0.00    0.00    3426         __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) [237]
-----------------------------------------------
                0.00    0.00    3426/3426        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
[238]    0.0    0.00    0.00    3426         std::unique_lock<std::mutex>::lock() [238]
                0.00    0.00    3398/3398        std::mutex::lock() [242]
-----------------------------------------------
                0.00    0.00     866/3422        std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [438]
                0.00    0.00    2556/3422        std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [277]
[239]    0.0    0.00    0.00    3422         __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::~new_allocator() [239]
-----------------------------------------------
                0.00    0.00    1703/3412        std::allocator<int>::allocator(std::allocator<int> const&) [348]
                0.00    0.00    1709/3412        std::allocator<int>::allocator(std::allocator<int> const&) [345]
[240]    0.0    0.00    0.00    3412         __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [240]
-----------------------------------------------
                0.00    0.00     829/3407        std::_Function_base::_Base_manager<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_init_functor(std::_Any_data&, {lambda()#1}&&, std::integral_constant<bool, true>) [76]
                0.00    0.00     856/3407        std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >() [1117]
                0.00    0.00    1722/3407        std::future<decltype ({parm#1}())>& std::_Any_data::_M_access<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}*>() [1121]
[241]    0.0    0.00    0.00    3407         std::_Any_data::_M_access() [241]
-----------------------------------------------
                0.00    0.00    3398/3398        std::unique_lock<std::mutex>::lock() [238]
[242]    0.0    0.00    0.00    3398         std::mutex::lock() [242]
                0.00    0.00    3435/44468       __gcc_deregister_frame [206]
-----------------------------------------------
                0.00    0.00    3391/3391        std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [248]
[243]    0.0    0.00    0.00    3391         std::__future_base::_Result<sf::Image>* const& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [243]
                0.00    0.00    3387/3387        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [245]
-----------------------------------------------
                0.00    0.00    3388/3388        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
[244]    0.0    0.00    0.00    3388         std::mutex* std::__addressof<std::mutex>(std::mutex&) [244]
-----------------------------------------------
                0.00    0.00    3387/3387        std::__future_base::_Result<sf::Image>* const& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [243]
[245]    0.0    0.00    0.00    3387         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [245]
                0.00    0.00    3380/3380        std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false> const&) [247]
-----------------------------------------------
                0.00    0.00    3387/3387        std::unique_lock<std::mutex>::~unique_lock() [253]
[246]    0.0    0.00    0.00    3387         std::unique_lock<std::mutex>::unlock() [246]
                0.00    0.00    3438/3438        std::mutex::unlock() [236]
-----------------------------------------------
                0.00    0.00    3380/3380        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [245]
[247]    0.0    0.00    0.00    3380         std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false> const&) [247]
-----------------------------------------------
                0.00    0.00    3380/3380        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [250]
[248]    0.0    0.00    0.00    3380         std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [248]
                0.00    0.00    3391/3391        std::__future_base::_Result<sf::Image>* const& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [243]
-----------------------------------------------
                0.00    0.00     780/3376        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::operator->() const [516]
                0.00    0.00    2596/3376        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release() [260]
[249]    0.0    0.00    0.00    3376         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get() const [249]
                0.00    0.00    3370/3370        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [250]
-----------------------------------------------
                0.00    0.00    3370/3370        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get() const [249]
[250]    0.0    0.00    0.00    3370         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [250]
                0.00    0.00    3380/3380        std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [248]
-----------------------------------------------
                0.00    0.00       1/3346        ThreadPool::stop() [746]
                0.00    0.00     793/3346        std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
                0.00    0.00     835/3346        ThreadPool::task() [21]
                0.00    0.00     844/3346        std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
                0.00    0.00     873/3346        std::__future_base::_State_baseV2::wait() [401]
[251]    0.0    0.00    0.00    3346         std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
                0.00    0.00    3426/3426        std::unique_lock<std::mutex>::lock() [238]
                0.00    0.00    3388/3388        std::mutex* std::__addressof<std::mutex>(std::mutex&) [244]
-----------------------------------------------
                0.00    0.00     808/3335        std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::function<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>, void, void>(std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>) [19]
                0.00    0.00     814/3335        std::function<void ()>::function() [526]
                0.00    0.00     844/3335        std::function<void ()>::function(std::function<void ()>&&) [501]
                0.00    0.00     869/3335        std::function<void ()>::function<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}, void, void>(std::future<decltype ({parm#1}())>) [15]
[252]    0.0    0.00    0.00    3335         std::_Function_base::_Function_base() [252]
-----------------------------------------------
                0.00    0.00       1/3293        ThreadPool::stop() [746]
                0.00    0.00     791/3293        std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
                0.00    0.00     800/3293        std::__future_base::_State_baseV2::wait() [401]
                0.00    0.00     825/3293        ThreadPool::task() [21]
                0.00    0.00     876/3293        std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
[253]    0.0    0.00    0.00    3293         std::unique_lock<std::mutex>::~unique_lock() [253]
                0.00    0.00    3387/3387        std::unique_lock<std::mutex>::unlock() [246]
-----------------------------------------------
                0.00    0.00    2617/2617        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_State_baseV2*> >, std::is_move_constructible<std::__future_base::_State_baseV2*>, std::is_move_assignable<std::__future_base::_State_baseV2*> >::value, void>::type std::swap<std::__future_base::_State_baseV2*>(std::__future_base::_State_baseV2*&, std::__future_base::_State_baseV2*&) [395]
[254]    0.0    0.00    0.00    2617         std::remove_reference<std::__future_base::_State_baseV2*&>::type&& std::move<std::__future_base::_State_baseV2*&>(std::__future_base::_State_baseV2*&) [254]
-----------------------------------------------
                0.00    0.00     870/2610        std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [419]
                0.00    0.00    1740/2610        std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [294]
[255]    0.0    0.00    0.00    2610         __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> > const&) [255]
-----------------------------------------------
                0.00    0.00    2601/2601        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [261]
[256]    0.0    0.00    0.00    2601         std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [256]
                0.00    0.00    2596/2596        std::__future_base::_Result_base*& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [257]
-----------------------------------------------
                0.00    0.00    2596/2596        std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [256]
[257]    0.0    0.00    0.00    2596         std::__future_base::_Result_base*& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [257]
                0.00    0.00    2610/6931        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [211]
-----------------------------------------------
                0.00    0.00     860/2591        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [439]
                0.00    0.00    1731/2591        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [331]
[258]    0.0    0.00    0.00    2591         std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [258]
                0.00    0.00    2598/3460        std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [234]
                0.00    0.00    2591/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                0.00    0.00    2589/2589        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [265]
[259]    0.0    0.00    0.00    2589         std::tuple_element<1ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [259]
                0.00    0.00    2577/3455        std::__future_base::_Result_base::_Deleter& std::__get_helper<1ull, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [235]
-----------------------------------------------
                0.00    0.00     862/2588        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [486]
                0.00    0.00    1726/2588        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
[260]    0.0    0.00    0.00    2588         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release() [260]
                0.00    0.00    2596/3376        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get() const [249]
                0.00    0.00    2500/5083        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [220]
-----------------------------------------------
                0.00    0.00    2587/2587        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
[261]    0.0    0.00    0.00    2587         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [261]
                0.00    0.00    2601/2601        std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [256]
-----------------------------------------------
                0.00    0.00     854/2586        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
                0.00    0.00    1732/2586        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
[262]    0.0    0.00    0.00    2586         std::remove_reference<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [262]
-----------------------------------------------
                0.00    0.00    2584/2584        __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_ptr() [268]
[263]    0.0    0.00    0.00    2584         __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_addr() [263]
-----------------------------------------------
                0.00    0.00     858/2583        std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [525]
                0.00    0.00    1725/2583        __gnu_cxx::__aligned_buffer<sf::Image>::_M_ptr() [340]
[264]    0.0    0.00    0.00    2583         __gnu_cxx::__aligned_buffer<sf::Image>::_M_addr() [264]
-----------------------------------------------
                0.00    0.00    2583/2583        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get_deleter() [275]
[265]    0.0    0.00    0.00    2583         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [265]
                0.00    0.00    2589/2589        std::tuple_element<1ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [259]
-----------------------------------------------
                0.00    0.00     857/2581        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [439]
                0.00    0.00     859/2581        std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base<std::__future_base::_Result<sf::Image>*&>(std::__future_base::_Result<sf::Image>*&) [467]
                0.00    0.00     865/2581        std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [466]
[266]    0.0    0.00    0.00    2581         std::__future_base::_Result<sf::Image>*& std::forward<std::__future_base::_Result<sf::Image>*&>(std::remove_reference<std::__future_base::_Result<sf::Image>*&>::type&) [266]
-----------------------------------------------
                0.00    0.00     857/2576        std::__future_base::_State_baseV2::~_State_baseV2() [423]
                0.00    0.00     859/2576        std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [81]
                0.00    0.00     860/2576        std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[267]    0.0    0.00    0.00    2576         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
                0.00    0.00    2587/2587        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [261]
                0.00    0.00     878/878         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [393]
                0.00    0.00     877/877         std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [396]
-----------------------------------------------
                0.00    0.00    2570/2570        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [272]
[268]    0.0    0.00    0.00    2570         __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_ptr() [268]
                0.00    0.00    2584/2584        __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_addr() [263]
-----------------------------------------------
                                2569             std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() <cycle 1> [274]
[269]    0.0    0.00    0.00    2569         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [269]
                                2573             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
-----------------------------------------------
                0.00    0.00    2569/2569        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [271]
[270]    0.0    0.00    0.00    2569         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [270]
                0.00    0.00    2570/44468       __gcc_deregister_frame [206]
-----------------------------------------------
                0.00    0.00     848/2564        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [487]
                0.00    0.00     853/2564        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [469]
                0.00    0.00     863/2564        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [441]
[271]    0.0    0.00    0.00    2564         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [271]
                0.00    0.00    2569/2569        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [270]
-----------------------------------------------
                0.00    0.00     845/2562        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [520]
                0.00    0.00     845/2562        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [492]
                0.00    0.00     872/2562        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
[272]    0.0    0.00    0.00    2562         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [272]
                0.00    0.00    2570/2570        __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_ptr() [268]
-----------------------------------------------
                0.00    0.00    2561/2561        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [498]
[273]    0.0    0.00    0.00    2561         std::remove_reference<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [273]
-----------------------------------------------
                                1727             std::__basic_future<sf::Image>::~__basic_future() <cycle 1> [317]
                0.00    0.00     831/124609      std::packaged_task<sf::Image ()>::get_future() [75]
[274]    0.0    0.00    0.00    2558         std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() <cycle 1> [274]
                                2569             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [269]
-----------------------------------------------
                0.00    0.00     855/2554        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [486]
                0.00    0.00    1699/2554        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
[275]    0.0    0.00    0.00    2554         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get_deleter() [275]
                0.00    0.00    2583/2583        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [265]
-----------------------------------------------
                0.00    0.00     847/2551        std::packaged_task<sf::Image ()>::packaged_task<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, void>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [42]
                0.00    0.00     847/2551        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
                0.00    0.00     857/2551        std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<{lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [10]
[276]    0.0    0.00    0.00    2551         std::allocator<int>::~allocator() [276]
                0.00    0.00    2560/4317        __gnu_cxx::new_allocator<int>::~new_allocator() [224]
-----------------------------------------------
                0.00    0.00     838/2549        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
                0.00    0.00     840/2549        std::shared_ptr<std::packaged_task<sf::Image ()> > std::make_shared<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [34]
                0.00    0.00     871/2549        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
[277]    0.0    0.00    0.00    2549         std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [277]
                0.00    0.00    2556/3422        __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::~new_allocator() [239]
-----------------------------------------------
                0.00    0.00    2547/2547        std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [279]
[278]    0.0    0.00    0.00    2547         std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const [278]
-----------------------------------------------
                0.00    0.00    2536/2536        std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [281]
[279]    0.0    0.00    0.00    2536         std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [279]
                0.00    0.00    2547/2547        std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const [278]
-----------------------------------------------
                0.00    0.00     840/2536        std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&) [497]
                0.00    0.00     846/2536        void std::allocator_traits<std::allocator<std::future<sf::Image> > >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, std::future<sf::Image>&&) [488]
                0.00    0.00     850/2536        void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&) [477]
[280]    0.0    0.00    0.00    2536         std::future<sf::Image>&& std::forward<std::future<sf::Image> >(std::remove_reference<std::future<sf::Image> >::type&) [280]
-----------------------------------------------
                0.00    0.00     797/2521        std::packaged_task<sf::Image ()>::operator()() [91]
                0.00    0.00    1724/2521        std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[281]    0.0    0.00    0.00    2521         std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [281]
                0.00    0.00    2536/2536        std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [279]
-----------------------------------------------
                0.00    0.00     788/2406        std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
                0.00    0.00     804/2406        std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
                0.00    0.00     814/2406        void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [83]
[282]    0.0    0.00    0.00    2406         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&) [282]
-----------------------------------------------
                0.00    0.00     790/2396        std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
                0.00    0.00     794/2396        void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [83]
                0.00    0.00     812/2396        std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
[283]    0.0    0.00    0.00    2396         std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&) [283]
-----------------------------------------------
                0.00    0.00     783/2374        std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
                0.00    0.00     784/2374        std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
                0.00    0.00     807/2374        void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [83]
[284]    0.0    0.00    0.00    2374         bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&) [284]
-----------------------------------------------
                0.00    0.00    2338/2338        bool __gnu_cxx::operator!=<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >(__gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&, __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&) [386]
[285]    0.0    0.00    0.00    2338         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::base() const [285]
-----------------------------------------------
                0.00    0.00     293/2274        std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::begin() [559]
                0.00    0.00     843/2274        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator-(long long) const [500]
                0.00    0.00    1138/2274        std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::end() [388]
[286]    0.0    0.00    0.00    2274         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::__normal_iterator(std::future<sf::Image>* const&) [286]
-----------------------------------------------
                0.00    0.00     876/1753        std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [400]
                0.00    0.00     877/1753        std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Impl::~_Impl() [1031]
[287]    0.0    0.00    0.00    1753         std::allocator<int>::~allocator() [287]
                0.00    0.00    1757/4317        __gnu_cxx::new_allocator<int>::~new_allocator() [224]
-----------------------------------------------
                0.00    0.00    1751/1751        std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [1082]
[288]    0.0    0.00    0.00    1751         std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&) [288]
-----------------------------------------------
                0.00    0.00     867/1744        std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_invoke(std::_Any_data const&) [54]
                0.00    0.00     877/1744        std::__future_base::_Task_state_base<sf::Image ()>::~_Task_state_base() [399]
[289]    0.0    0.00    0.00    1744         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [289]
                0.00    0.00    1744/5083        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [220]
-----------------------------------------------
                0.00    0.00    1741/1741        unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [309]
[290]    0.0    0.00    0.00    1741         unsigned char* std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*) [290]
                0.00    0.00    1713/1713        unsigned char* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*) [332]
-----------------------------------------------
                0.00    0.00     862/1738        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [450]
                0.00    0.00     876/1738        std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [63]
[291]    0.0    0.00    0.00    1738         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [291]
-----------------------------------------------
                0.00    0.00    1736/1736        std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [310]
[292]    0.0    0.00    0.00    1736         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
                0.00    0.00    3464/4302        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_tail(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [227]
                0.00    0.00    3457/6931        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [211]
                0.00    0.00    1732/3461        std::__future_base::_Result_base*&& std::forward<std::__future_base::_Result_base*>(std::remove_reference<std::__future_base::_Result_base*>::type&) [233]
                0.00    0.00    1732/2586        std::remove_reference<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [262]
                0.00    0.00    1728/1728        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [303]
-----------------------------------------------
                0.00    0.00    1734/1734        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[293]    0.0    0.00    0.00    1734         std::vector<unsigned char, std::allocator<unsigned char> >::begin() const [293]
                0.00    0.00    1734/3461        __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::__normal_iterator(unsigned char const* const&) [232]
-----------------------------------------------
                0.00    0.00     863/1734        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
                0.00    0.00     871/1734        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
[294]    0.0    0.00    0.00    1734         std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [294]
                0.00    0.00    1740/2610        __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> > const&) [255]
-----------------------------------------------
                0.00    0.00    1733/1733        unsigned char* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [304]
[295]    0.0    0.00    0.00    1733         unsigned char* std::copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [295]
                0.00    0.00    3474/3474        __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > std::__miter_base<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) [230]
                0.00    0.00    1726/1726        unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [309]
-----------------------------------------------
                0.00    0.00    1732/1732        std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> >&&) [312]
[296]    0.0    0.00    0.00    1732         std::remove_reference<std::shared_ptr<std::packaged_task<sf::Image ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<sf::Image ()> >&>(std::shared_ptr<std::packaged_task<sf::Image ()> >&) [296]
-----------------------------------------------
                0.00    0.00    1731/1731        std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> >&&) [312]
[297]    0.0    0.00    0.00    1731         std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [297]
                0.00    0.00    1735/4317        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [225]
                0.00    0.00    1735/4313        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [226]
-----------------------------------------------
                0.00    0.00    1729/1729        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[298]    0.0    0.00    0.00    1729         unsigned char* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, unsigned char>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, std::allocator<unsigned char>&) [298]
                0.00    0.00    1721/1721        unsigned char* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [318]
-----------------------------------------------
                0.00    0.00    1729/1729        std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [310]
[299]    0.0    0.00    0.00    1729         std::remove_reference<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [299]
-----------------------------------------------
                0.00    0.00    1728/1728        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> > const&) [328]
[300]    0.0    0.00    0.00    1728         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [300]
-----------------------------------------------
                0.00    0.00    1728/1728        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[301]    0.0    0.00    0.00    1728         std::vector<unsigned char, std::allocator<unsigned char> >::end() const [301]
                0.00    0.00    1727/3461        __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::__normal_iterator(unsigned char const* const&) [232]
-----------------------------------------------
                0.00    0.00    1728/1728        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[302]    0.0    0.00    0.00    1728         std::vector<unsigned char, std::allocator<unsigned char> >::size() const [302]
-----------------------------------------------
                0.00    0.00    1728/1728        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
[303]    0.0    0.00    0.00    1728         std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [303]
                0.00    0.00    3460/7794        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [210]
                0.00    0.00    1727/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                0.00    0.00    1728/1728        unsigned char* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [318]
[304]    0.0    0.00    0.00    1728         unsigned char* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [304]
                0.00    0.00    1733/1733        unsigned char* std::copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [295]
-----------------------------------------------
                0.00    0.00    1728/1728        unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [309]
[305]    0.0    0.00    0.00    1728         unsigned char* std::__niter_base<unsigned char*>(unsigned char*) [305]
-----------------------------------------------
                0.00    0.00    1727/1727        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[306]    0.0    0.00    0.00    1727         __gnu_cxx::__alloc_traits<std::allocator<unsigned char>, unsigned char>::_S_select_on_copy(std::allocator<unsigned char> const&) [306]
                0.00    0.00    1711/1711        std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction(std::allocator<unsigned char> const&) [339]
-----------------------------------------------
                0.00    0.00     856/1727        std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<{lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [10]
                0.00    0.00     871/1727        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
[307]    0.0    0.00    0.00    1727         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [307]
-----------------------------------------------
                0.00    0.00    1727/1727        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [325]
[308]    0.0    0.00    0.00    1727         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [308]
                0.00    0.00    1723/5179        std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [215]
                0.00    0.00    1720/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
                0.00    0.00    1713/1713        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [331]
-----------------------------------------------
                0.00    0.00    1726/1726        unsigned char* std::copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [295]
[309]    0.0    0.00    0.00    1726         unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [309]
                0.00    0.00    3465/3465        unsigned char const* std::__niter_base<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >) [231]
                0.00    0.00    1741/1741        unsigned char* std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*) [290]
                0.00    0.00    1728/1728        unsigned char* std::__niter_base<unsigned char*>(unsigned char*) [305]
-----------------------------------------------
                0.00    0.00    1725/1725        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator=(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [329]
[310]    0.0    0.00    0.00    1725         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [310]
                0.00    0.00    1736/1736        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [292]
                0.00    0.00    1729/1729        std::remove_reference<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [299]
-----------------------------------------------
                0.00    0.00    1724/1724        __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long long, void const*) [326]
[311]    0.0    0.00    0.00    1724         __gnu_cxx::new_allocator<unsigned char>::max_size() const [311]
-----------------------------------------------
                0.00    0.00    1723/1723        _ZZN10ThreadPool6submitIZN13RaycastEngine12multi_renderERN2sf12RenderWindowEEUlvE_EESt6futureIDTclfp_EEET_ENUlvE_C2EOSA_ [1184]
[312]    0.0    0.00    0.00    1723         std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> >&&) [312]
                0.00    0.00    1732/1732        std::remove_reference<std::shared_ptr<std::packaged_task<sf::Image ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<sf::Image ()> >&>(std::shared_ptr<std::packaged_task<sf::Image ()> >&) [296]
                0.00    0.00    1731/1731        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [297]
-----------------------------------------------
                0.00    0.00    1722/1722        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [331]
[313]    0.0    0.00    0.00    1722         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [313]
                0.00    0.00    1728/5179        std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [215]
-----------------------------------------------
                0.00    0.00    1722/1722        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[314]    0.0    0.00    0.00    1722         std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() [314]
-----------------------------------------------
                0.00    0.00    1722/1722        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long long) [333]
[315]    0.0    0.00    0.00    1722         std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long long) [315]
                0.00    0.00    1716/1716        __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long long, void const*) [326]
-----------------------------------------------
                0.00    0.00    1721/1721        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[316]    0.0    0.00    0.00    1721         std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned long long, std::allocator<unsigned char> const&) [316]
                0.00    0.00    1719/1719        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned long long) [321]
                0.00    0.00    1713/1713        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&) [334]
-----------------------------------------------
                                1721             std::future<sf::Image>::~future() <cycle 1> [323]
[317]    0.0    0.00    0.00    1721         std::__basic_future<sf::Image>::~__basic_future() <cycle 1> [317]
                                1727             std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() <cycle 1> [274]
-----------------------------------------------
                0.00    0.00    1721/1721        unsigned char* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, unsigned char>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, std::allocator<unsigned char>&) [298]
[318]    0.0    0.00    0.00    1721         unsigned char* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [318]
                0.00    0.00    1728/1728        unsigned char* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [304]
-----------------------------------------------
                0.00    0.00    1720/1720        std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction(std::allocator<unsigned char> const&) [339]
[319]    0.0    0.00    0.00    1720         std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [319]
                0.00    0.00    1701/3426        __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) [237]
-----------------------------------------------
                0.00    0.00    1720/1720        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&) [334]
[320]    0.0    0.00    0.00    1720         std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [320]
                0.00    0.00    1725/3426        __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) [237]
-----------------------------------------------
                0.00    0.00    1719/1719        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned long long, std::allocator<unsigned char> const&) [316]
[321]    0.0    0.00    0.00    1719         std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned long long) [321]
                0.00    0.00    1713/1713        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long long) [333]
-----------------------------------------------
                0.00    0.00    1718/1718        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [337]
[322]    0.0    0.00    0.00    1718         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false> const&) [322]
-----------------------------------------------
                                 839             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
                                 879             void std::_Destroy<std::future<sf::Image> >(std::future<sf::Image>*) <cycle 1> [392]
[323]    0.0    0.00    0.00    1718         std::future<sf::Image>::~future() <cycle 1> [323]
                                1721             std::__basic_future<sf::Image>::~__basic_future() <cycle 1> [317]
-----------------------------------------------
                0.00    0.00    1717/1717        void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [338]
[324]    0.0    0.00    0.00    1717         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const [324]
-----------------------------------------------
                0.00    0.00    1717/1717        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
[325]    0.0    0.00    0.00    1717         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [325]
                0.00    0.00    1727/1727        std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [308]
                0.00    0.00    1719/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                0.00    0.00    1716/1716        std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long long) [315]
[326]    0.0    0.00    0.00    1716         __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long long, void const*) [326]
                0.00    0.00    1724/1724        __gnu_cxx::new_allocator<unsigned char>::max_size() const [311]
-----------------------------------------------
                0.00    0.00    1716/1716        std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [336]
[327]    0.0    0.00    0.00    1716         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const [327]
-----------------------------------------------
                0.00    0.00     846/1716        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
                0.00    0.00     870/1716        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[328]    0.0    0.00    0.00    1716         std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> > const&) [328]
                0.00    0.00    1728/1728        __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [300]
-----------------------------------------------
                0.00    0.00    1716/1716        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [498]
[329]    0.0    0.00    0.00    1716         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator=(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [329]
                0.00    0.00    1725/1725        std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [310]
-----------------------------------------------
                0.00    0.00     841/1715        std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back() [494]
                0.00    0.00     874/1715        RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[330]    0.0    0.00    0.00    1715         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator*() const [330]
-----------------------------------------------
                0.00    0.00    1713/1713        std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [308]
[331]    0.0    0.00    0.00    1713         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [331]
                0.00    0.00    1731/2591        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [258]
                0.00    0.00    1728/5179        std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&) [215]
                0.00    0.00    1724/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
                0.00    0.00    1722/1722        std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [313]
-----------------------------------------------
                0.00    0.00    1713/1713        unsigned char* std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*) [290]
[332]    0.0    0.00    0.00    1713         unsigned char* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*) [332]
-----------------------------------------------
                0.00    0.00    1713/1713        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned long long) [321]
[333]    0.0    0.00    0.00    1713         std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long long) [333]
                0.00    0.00    1722/1722        std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long long) [315]
-----------------------------------------------
                0.00    0.00    1713/1713        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned long long, std::allocator<unsigned char> const&) [316]
[334]    0.0    0.00    0.00    1713         std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&) [334]
                0.00    0.00    1720/1720        std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [320]
-----------------------------------------------
                0.00    0.00    1713/1713        std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [349]
[335]    0.0    0.00    0.00    1713         std::__future_base::_Result_base* const& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [335]
                0.00    0.00    1711/1711        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [337]
-----------------------------------------------
                0.00    0.00    1712/1712        std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [344]
[336]    0.0    0.00    0.00    1712         std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [336]
                0.00    0.00    1716/1716        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const [327]
-----------------------------------------------
                0.00    0.00    1711/1711        std::__future_base::_Result_base* const& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [335]
[337]    0.0    0.00    0.00    1711         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [337]
                0.00    0.00    1718/1718        std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false> const&) [322]
-----------------------------------------------
                0.00    0.00     839/1711        std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [490]
                0.00    0.00     872/1711        std::__basic_future<sf::Image>::_M_get_result() const [404]
[338]    0.0    0.00    0.00    1711         void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [338]
                0.00    0.00    1717/1717        std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const [324]
-----------------------------------------------
                0.00    0.00    1711/1711        __gnu_cxx::__alloc_traits<std::allocator<unsigned char>, unsigned char>::_S_select_on_copy(std::allocator<unsigned char> const&) [306]
[339]    0.0    0.00    0.00    1711         std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction(std::allocator<unsigned char> const&) [339]
                0.00    0.00    1720/1720        std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [319]
-----------------------------------------------
                0.00    0.00    1710/1710        std::__future_base::_Result<sf::Image>::_M_value() [356]
[340]    0.0    0.00    0.00    1710         __gnu_cxx::__aligned_buffer<sf::Image>::_M_ptr() [340]
                0.00    0.00    1725/2583        __gnu_cxx::__aligned_buffer<sf::Image>::_M_addr() [264]
-----------------------------------------------
                0.00    0.00    1710/1710        std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [352]
[341]    0.0    0.00    0.00    1710         std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&) [341]
-----------------------------------------------
                0.00    0.00    1708/1708        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [343]
[342]    0.0    0.00    0.00    1708         std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base() [342]
-----------------------------------------------
                0.00    0.00     843/1708        std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [496]
                0.00    0.00     865/1708        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [432]
[343]    0.0    0.00    0.00    1708         std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [343]
                0.00    0.00    1708/1708        std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base() [342]
-----------------------------------------------
                0.00    0.00     841/1707        std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [490]
                0.00    0.00     866/1707        std::__basic_future<sf::Image>::_M_get_result() const [404]
[344]    0.0    0.00    0.00    1707         std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [344]
                0.00    0.00    1712/1712        std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [336]
-----------------------------------------------
                0.00    0.00     845/1705        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
                0.00    0.00     860/1705        std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<{lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [10]
[345]    0.0    0.00    0.00    1705         std::allocator<int>::allocator(std::allocator<int> const&) [345]
                0.00    0.00    1709/3412        __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [240]
-----------------------------------------------
                0.00    0.00       2/1705        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [821]
                0.00    0.00     831/1705        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [505]
                0.00    0.00     872/1705        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [407]
[346]    0.0    0.00    0.00    1705         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [346]
-----------------------------------------------
                0.00    0.00     850/1705        std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2>&&) [478]
                0.00    0.00     855/1705        std::__basic_future<sf::Image>::__basic_future(std::future<sf::Image>&&) [474]
[347]    0.0    0.00    0.00    1705         std::remove_reference<std::shared_ptr<std::__future_base::_State_baseV2>&>::type&& std::move<std::shared_ptr<std::__future_base::_State_baseV2>&>(std::shared_ptr<std::__future_base::_State_baseV2>&) [347]
-----------------------------------------------
                0.00    0.00     843/1704        std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Impl::_Impl<{lambda()#1}>({lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [72]
                0.00    0.00     861/1704        std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [453]
[348]    0.0    0.00    0.00    1704         std::allocator<int>::allocator(std::allocator<int> const&) [348]
                0.00    0.00    1703/3412        __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [240]
-----------------------------------------------
                0.00    0.00    1704/1704        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [353]
[349]    0.0    0.00    0.00    1704         std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [349]
                0.00    0.00    1713/1713        std::__future_base::_Result_base* const& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [335]
-----------------------------------------------
                0.00    0.00     845/1702        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
                0.00    0.00     857/1702        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
[350]    0.0    0.00    0.00    1702         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [350]
                0.00    0.00     865/865         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [434]
-----------------------------------------------
                0.00    0.00    1701/1701        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [363]
[351]    0.0    0.00    0.00    1701         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>&) [351]
-----------------------------------------------
                0.00    0.00     846/1701        std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&) [426]
                0.00    0.00     855/1701        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
[352]    0.0    0.00    0.00    1701         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [352]
                0.00    0.00    1710/1710        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&) [341]
-----------------------------------------------
                0.00    0.00    1700/1700        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [361]
[353]    0.0    0.00    0.00    1700         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [353]
                0.00    0.00    1704/1704        std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [349]
-----------------------------------------------
                0.00    0.00    1698/1698        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[354]    0.0    0.00    0.00    1698         std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() const [354]
-----------------------------------------------
                0.00    0.00     823/1694        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [515]
                0.00    0.00     871/1694        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [411]
[355]    0.0    0.00    0.00    1694         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [355]
-----------------------------------------------
                0.00    0.00     815/1693        std::future<sf::Image>::get() <cycle 1> [412]
                0.00    0.00     878/1693        std::__future_base::_Result<sf::Image>::~_Result() [402]
[356]    0.0    0.00    0.00    1693         std::__future_base::_Result<sf::Image>::_M_value() [356]
                0.00    0.00    1710/1710        __gnu_cxx::__aligned_buffer<sf::Image>::_M_ptr() [340]
-----------------------------------------------
                0.00    0.00     841/1693        RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
                0.00    0.00     852/1693        std::future<sf::Image>::future(std::future<sf::Image>&&) [472]
[357]    0.0    0.00    0.00    1693         std::remove_reference<std::future<sf::Image>&>::type&& std::move<std::future<sf::Image>&>(std::future<sf::Image>&) [357]
-----------------------------------------------
                0.00    0.00     830/1691        std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [525]
                0.00    0.00     861/1691        std::future<sf::Image>::get() <cycle 1> [412]
[358]    0.0    0.00    0.00    1691         std::remove_reference<sf::Image&>::type&& std::move<sf::Image&>(sf::Image&) [358]
-----------------------------------------------
                0.00    0.00     831/1686        void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<sf::Image ()> >(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [509]
                0.00    0.00     855/1686        std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[359]    0.0    0.00    0.00    1686         std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [359]
-----------------------------------------------
                0.00    0.00    1685/1685        std::allocator<unsigned char>::~allocator() [381]
[360]    0.0    0.00    0.00    1685         __gnu_cxx::new_allocator<unsigned char>::~new_allocator() [360]
-----------------------------------------------
                0.00    0.00     832/1685        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator*() const [514]
                0.00    0.00     853/1685        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [471]
[361]    0.0    0.00    0.00    1685         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [361]
                0.00    0.00    1700/1700        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [353]
-----------------------------------------------
                0.00    0.00    1685/1685        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [372]
[362]    0.0    0.00    0.00    1685         bool std::operator==<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [362]
-----------------------------------------------
                0.00    0.00     823/1681        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
                0.00    0.00     858/1681        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [520]
[363]    0.0    0.00    0.00    1681         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [363]
                0.00    0.00    1701/1701        std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>&) [351]
-----------------------------------------------
                0.00    0.00     817/1679        std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [525]
                0.00    0.00     862/1679        std::future<sf::Image>::get() <cycle 1> [412]
[364]    0.0    0.00    0.00    1679         sf::Image::Image(sf::Image const&) [364]
                0.00    0.00    1633/1633        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
-----------------------------------------------
                0.00    0.00    1679/1679        std::function<void ()>::swap(std::function<void ()>&) [366]
[365]    0.0    0.00    0.00    1679         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [365]
                0.00    0.00    5043/5043        std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&)) [222]
-----------------------------------------------
                0.00    0.00     838/1678        std::function<void ()>::function(std::function<void ()>&&) [501]
                0.00    0.00     840/1678        std::function<void ()>::operator=(std::function<void ()>&&) [93]
[366]    0.0    0.00    0.00    1678         std::function<void ()>::swap(std::function<void ()>&) [366]
                0.00    0.00    1679/1679        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&)) [365]
                0.00    0.00    1675/1675        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [368]
                0.00    0.00    1674/1674        std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [369]
-----------------------------------------------
                0.00    0.00    1675/1675        std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [371]
[367]    0.0    0.00    0.00    1675         std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const [367]
-----------------------------------------------
                0.00    0.00    1675/1675        std::function<void ()>::swap(std::function<void ()>&) [366]
[368]    0.0    0.00    0.00    1675         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [368]
                0.00    0.00    5073/5073        std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)) [221]
-----------------------------------------------
                0.00    0.00    1674/1674        std::function<void ()>::swap(std::function<void ()>&) [366]
[369]    0.0    0.00    0.00    1674         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&) [369]
                0.00    0.00    5004/5004        std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&) [223]
-----------------------------------------------
                0.00    0.00     809/1673        std::_Function_handler<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> (), std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >::_M_invoke(std::_Any_data const&) [54]
                0.00    0.00     864/1673        std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[370]    0.0    0.00    0.00    1673         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
                0.00    0.00    1726/2588        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release() [260]
                0.00    0.00    1723/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
                0.00    0.00    1717/1717        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [325]
                0.00    0.00    1699/2554        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get_deleter() [275]
-----------------------------------------------
                0.00    0.00     832/1666        std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [504]
                0.00    0.00     834/1666        std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [512]
[371]    0.0    0.00    0.00    1666         std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [371]
                0.00    0.00    1675/1675        std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const [367]
-----------------------------------------------
                0.00    0.00    1658/1658        std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [377]
[372]    0.0    0.00    0.00    1658         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [372]
                0.00    0.00    1685/1685        bool std::operator==<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [362]
-----------------------------------------------
                0.00    0.00    1656/1656        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [379]
[373]    0.0    0.00    0.00    1656         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [373]
-----------------------------------------------
                0.00    0.00     821/1652        ThreadPool::task() [21]
                0.00    0.00     831/1652        std::function<void ()>::operator=(std::function<void ()>&&) [93]
[374]    0.0    0.00    0.00    1652         std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&) [374]
-----------------------------------------------
                0.00    0.00     786/1645        std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>::operator()() const [80]
                0.00    0.00     859/1645        std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[375]    0.0    0.00    0.00    1645         std::remove_reference<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&) [375]
-----------------------------------------------
                0.00    0.00    1633/1633        sf::Image::Image(sf::Image const&) [364]
[376]    0.0    0.00    0.00    1633         std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
                0.00    0.00    1734/1734        std::vector<unsigned char, std::allocator<unsigned char> >::begin() const [293]
                0.00    0.00    1729/1729        unsigned char* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, unsigned char>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, std::allocator<unsigned char>&) [298]
                0.00    0.00    1728/1728        std::vector<unsigned char, std::allocator<unsigned char> >::size() const [302]
                0.00    0.00    1728/1728        std::vector<unsigned char, std::allocator<unsigned char> >::end() const [301]
                0.00    0.00    1727/1727        __gnu_cxx::__alloc_traits<std::allocator<unsigned char>, unsigned char>::_S_select_on_copy(std::allocator<unsigned char> const&) [306]
                0.00    0.00    1722/1722        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() [314]
                0.00    0.00    1721/1721        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned long long, std::allocator<unsigned char> const&) [316]
                0.00    0.00    1698/1698        std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() const [354]
                0.00    0.00    1604/1604        std::allocator<unsigned char>::~allocator() [381]
-----------------------------------------------
                0.00    0.00       3/1632        ThreadPool::task() [21]
                0.00    0.00    1629/1632        ThreadPool::task()::{lambda()#1}::operator()() const [382]
[377]    0.0    0.00    0.00    1632         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [377]
                0.00    0.00    1658/1658        std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [372]
-----------------------------------------------
                0.00    0.00     811/1626        std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const [86]
                0.00    0.00     815/1626        std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [82]
[378]    0.0    0.00    0.00    1626         void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [378]
-----------------------------------------------
                0.00    0.00     759/1607        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
                0.00    0.00     848/1607        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[379]    0.0    0.00    0.00    1607         std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [379]
                0.00    0.00    1656/1656        __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [373]
-----------------------------------------------
                0.00    0.00     785/1605        std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> const& std::_Any_data::_M_access<std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image> >() const [979]
                0.00    0.00     820/1605        std::future<decltype ({parm#1}())> const& std::_Any_data::_M_access<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}*>() const [980]
[380]    0.0    0.00    0.00    1605         std::_Any_data::_M_access() const [380]
-----------------------------------------------
                0.00    0.00    1604/1604        std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&) [376]
[381]    0.0    0.00    0.00    1604         std::allocator<unsigned char>::~allocator() [381]
                0.00    0.00    1685/1685        __gnu_cxx::new_allocator<unsigned char>::~new_allocator() [360]
-----------------------------------------------
                0.00    0.00    1579/1579        void std::condition_variable::wait<ThreadPool::task()::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::task()::{lambda()#1}) [523]
[382]    0.0    0.00    0.00    1579         ThreadPool::task()::{lambda()#1}::operator()() const [382]
                0.00    0.00    1629/1632        std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [377]
-----------------------------------------------
                0.00    0.00     784/1572        std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [84]
                0.00    0.00     788/1572        std::function<void ()>::operator()() const [90]
[383]    0.0    0.00    0.00    1572         std::_Function_base::_M_empty() const [383]
-----------------------------------------------
                0.00    0.00     752/1539        RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}::operator()() const [1185]
                0.00    0.00     787/1539        sf::Image std::__invoke_impl<sf::Image, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&>(std::__invoke_other, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&) [78]
[384]    0.0    0.00    0.00    1539         RaycastEngine::render(int, int) [384]
                0.00    0.00 195095688/195095688     MyWorld::get_pixel_color(trig::Vector2<int> const&, RaycastEngine::CellSide, float, float, float) [180]
                0.00    0.00 185850598/186134655     trig::Vector2<float>::operator trig::Vector2<int>() const [181]
                0.00    0.00  468094/468094      std::array<float, 2ull>::operator[](unsigned long long) [197]
                0.00    0.00  202663/202663      RaycastEngine::get_distance(float) [205]
-----------------------------------------------
                0.00    0.00    1170/1170        sf::Sprite::~Sprite() [387]
[385]    0.0    0.00    0.00    1170         sf::Drawable::~Drawable() [385]
-----------------------------------------------
                0.00    0.00    1169/1169        RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[386]    0.0    0.00    0.00    1169         bool __gnu_cxx::operator!=<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >(__gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&, __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&) [386]
                0.00    0.00    2338/2338        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::base() const [285]
-----------------------------------------------
                0.00    0.00       1/1161        RaycastEngine::~RaycastEngine() [755]
                0.00    0.00    1160/1161        RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[387]    0.0    0.00    0.00    1161         sf::Sprite::~Sprite() [387]
                0.00    0.00    1170/1170        sf::Drawable::~Drawable() [385]
-----------------------------------------------
                0.00    0.00     293/1139        RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
                0.00    0.00     846/1139        std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back() [494]
[388]    0.0    0.00    0.00    1139         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::end() [388]
                0.00    0.00    1138/2274        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::__normal_iterator(std::future<sf::Image>* const&) [286]
-----------------------------------------------
                0.00    0.00     293/879         std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>) [558]
                0.00    0.00     293/879         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
                0.00    0.00     293/879         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector() <cycle 1> [562]
[389]    0.0    0.00    0.00     879         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() [389]
-----------------------------------------------
                0.00    0.00     879/879         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() <cycle 1> [405]
[390]    0.0    0.00    0.00     879         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&) [390]
                0.00    0.00     878/878         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_State_baseV2*> >, std::is_move_constructible<std::__future_base::_State_baseV2*>, std::is_move_assignable<std::__future_base::_State_baseV2*> >::value, void>::type std::swap<std::__future_base::_State_baseV2*>(std::__future_base::_State_baseV2*&, std::__future_base::_State_baseV2*&) [395]
                0.00    0.00     874/4313        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [226]
-----------------------------------------------
                0.00    0.00     879/879         void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [530]
[391]    0.0    0.00    0.00     879         std::future<sf::Image>* std::__addressof<std::future<sf::Image> >(std::future<sf::Image>&) [391]
-----------------------------------------------
                                 879             void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [530]
[392]    0.0    0.00    0.00     879         void std::_Destroy<std::future<sf::Image> >(std::future<sf::Image>*) <cycle 1> [392]
                                 879             std::future<sf::Image>::~future() <cycle 1> [323]
-----------------------------------------------
                0.00    0.00     878/878         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
[393]    0.0    0.00    0.00     878         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [393]
                0.00    0.00     875/875         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [403]
-----------------------------------------------
                                 878             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() <cycle 1> [405]
[394]    0.0    0.00    0.00     878         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [394]
                                 878             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
-----------------------------------------------
                0.00    0.00     878/878         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&) [390]
[395]    0.0    0.00    0.00     878         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_State_baseV2*> >, std::is_move_constructible<std::__future_base::_State_baseV2*>, std::is_move_assignable<std::__future_base::_State_baseV2*> >::value, void>::type std::swap<std::__future_base::_State_baseV2*>(std::__future_base::_State_baseV2*&, std::__future_base::_State_baseV2*&) [395]
                0.00    0.00    2617/2617        std::remove_reference<std::__future_base::_State_baseV2*&>::type&& std::move<std::__future_base::_State_baseV2*&>(std::__future_base::_State_baseV2*&) [254]
-----------------------------------------------
                0.00    0.00     877/877         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
[396]    0.0    0.00    0.00     877         std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [396]
                0.00    0.00     861/861         std::__future_base::_Result<sf::Image>::_M_destroy() [448]
-----------------------------------------------
                0.00    0.00     877/877         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [403]
[397]    0.0    0.00    0.00     877         std::tuple_element<1ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [397]
                0.00    0.00     878/3455        std::__future_base::_Result_base::_Deleter& std::__get_helper<1ull, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [235]
-----------------------------------------------
                0.00    0.00     876/876         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() <cycle 1> [405]
[398]    0.0    0.00    0.00     876         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [398]
                0.00    0.00     879/4317        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [225]
-----------------------------------------------
                0.00    0.00     876/876         std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::~_Task_state() [60]
[399]    0.0    0.00    0.00     876         std::__future_base::_Task_state_base<sf::Image ()>::~_Task_state_base() [399]
                0.00    0.00     877/1744        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [289]
                0.00    0.00     869/869         std::__future_base::_State_baseV2::~_State_baseV2() [423]
-----------------------------------------------
                0.00    0.00     876/876         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [1084]
[400]    0.0    0.00    0.00     876         std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [400]
                0.00    0.00     876/1753        std::allocator<int>::~allocator() [287]
-----------------------------------------------
                0.00    0.00     875/875         std::__basic_future<sf::Image>::_M_get_result() const [404]
[401]    0.0    0.00    0.00     875         std::__future_base::_State_baseV2::wait() [401]
                0.00    0.00     873/3346        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
                0.00    0.00     870/870         std::__future_base::_State_baseV2::_M_complete_async() [421]
                0.00    0.00     811/811         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator*() const [514]
                0.00    0.00     800/3293        std::unique_lock<std::mutex>::~unique_lock() [253]
-----------------------------------------------
                0.00    0.00     875/875         std::__future_base::_Result<sf::Image>::~_Result() [413]
[402]    0.0    0.00    0.00     875         std::__future_base::_Result<sf::Image>::~_Result() [402]
                0.00    0.00     878/1693        std::__future_base::_Result<sf::Image>::_M_value() [356]
-----------------------------------------------
                0.00    0.00     875/875         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [393]
[403]    0.0    0.00    0.00     875         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [403]
                0.00    0.00     877/877         std::tuple_element<1ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [397]
-----------------------------------------------
                0.00    0.00     873/873         std::future<sf::Image>::get() <cycle 1> [412]
[404]    0.0    0.00    0.00     873         std::__basic_future<sf::Image>::_M_get_result() const [404]
                0.00    0.00     875/875         std::__future_base::_State_baseV2::wait() [401]
                0.00    0.00     872/1711        void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [338]
                0.00    0.00     866/1707        std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [344]
                0.00    0.00     821/821         std::__exception_ptr::exception_ptr::exception_ptr(decltype(nullptr)) [506]
-----------------------------------------------
                                 873             std::__basic_future<sf::Image>::_Reset::~_Reset() <cycle 1> [458]
[405]    0.0    0.00    0.00     873         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() <cycle 1> [405]
                0.00    0.00     879/879         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&) [390]
                0.00    0.00     876/876         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [398]
                                 878             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [394]
-----------------------------------------------
                0.00    0.00     873/873         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [411]
[406]    0.0    0.00    0.00     873         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [406]
                0.00    0.00      54/185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
-----------------------------------------------
                0.00    0.00       1/873         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
                0.00    0.00     872/873         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [411]
[407]    0.0    0.00    0.00     873         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [407]
                0.00    0.00     872/1705        std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [346]
-----------------------------------------------
                0.00    0.00     872/872         std::allocator<std::packaged_task<sf::Image ()> >::allocator() [418]
[408]    0.0    0.00    0.00     872         __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator() [408]
-----------------------------------------------
                0.00    0.00     872/872         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long long) [414]
[409]    0.0    0.00    0.00     872         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*) [409]
                0.00    0.00     870/870         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const [417]
-----------------------------------------------
                0.00    0.00     872/872         std::future<sf::Image>::get() <cycle 1> [412]
[410]    0.0    0.00    0.00     872         std::__basic_future<sf::Image>::_Reset::_Reset(std::__basic_future<sf::Image>&) [410]
-----------------------------------------------
                0.00    0.00     872/872         std::function<void ()>& std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::emplace_back<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [38]
[411]    0.0    0.00    0.00     872         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back() [411]
                0.00    0.00     873/873         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [406]
                0.00    0.00     872/873         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [407]
                0.00    0.00     871/1694        std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [355]
-----------------------------------------------
                                 872             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[412]    0.0    0.00    0.00     872         std::future<sf::Image>::get() <cycle 1> [412]
                0.00    0.00     873/873         std::__basic_future<sf::Image>::_M_get_result() const [404]
                0.00    0.00     872/872         std::__basic_future<sf::Image>::_Reset::_Reset(std::__basic_future<sf::Image>&) [410]
                0.00    0.00     862/1679        sf::Image::Image(sf::Image const&) [364]
                0.00    0.00     861/1691        std::remove_reference<sf::Image&>::type&& std::move<sf::Image&>(sf::Image&) [358]
                0.00    0.00     815/1693        std::__future_base::_Result<sf::Image>::_M_value() [356]
                                 858             std::__basic_future<sf::Image>::_Reset::~_Reset() <cycle 1> [458]
-----------------------------------------------
                0.00    0.00     871/871         std::__future_base::_Result<sf::Image>::_M_destroy() [448]
[413]    0.0    0.00    0.00     871         std::__future_base::_Result<sf::Image>::~_Result() [413]
                0.00    0.00     875/875         std::__future_base::_Result<sf::Image>::~_Result() [402]
-----------------------------------------------
                0.00    0.00     871/871         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&) [426]
[414]    0.0    0.00    0.00     871         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long long) [414]
                0.00    0.00     872/872         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*) [409]
-----------------------------------------------
                0.00    0.00     871/871         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Sp_counted_ptr_inplace<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [37]
[415]    0.0    0.00    0.00     871         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<sf::Image ()> >) [415]
                0.00    0.00     870/870         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<sf::Image ()> > const&) [422]
-----------------------------------------------
                0.00    0.00     871/871         std::__future_base::_State_baseV2::~_State_baseV2() [423]
[416]    0.0    0.00    0.00     871         std::__atomic_futex_unsigned<2147483648u>::~__atomic_futex_unsigned() [416]
                0.00    0.00     857/858         std::mutex::~mutex() [459]
-----------------------------------------------
                0.00    0.00     870/870         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*) [409]
[417]    0.0    0.00    0.00     870         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const [417]
-----------------------------------------------
                0.00    0.00     870/870         std::shared_ptr<std::packaged_task<sf::Image ()> > std::make_shared<std::packaged_task<sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [34]
[418]    0.0    0.00    0.00     870         std::allocator<std::packaged_task<sf::Image ()> >::allocator() [418]
                0.00    0.00     872/872         __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator() [408]
-----------------------------------------------
                0.00    0.00     870/870         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<sf::Image ()> > const&) [422]
[419]    0.0    0.00    0.00     870         std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [419]
                0.00    0.00     870/2610        __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> > const&) [255]
-----------------------------------------------
                0.00    0.00     870/870         std::mutex::~mutex() [459]
[420]    0.0    0.00    0.00     870         std::__mutex_base::~__mutex_base() [420]
                0.00    0.00     879/44468       __gcc_deregister_frame [206]
-----------------------------------------------
                0.00    0.00     870/870         std::__future_base::_State_baseV2::wait() [401]
[421]    0.0    0.00    0.00     870         std::__future_base::_State_baseV2::_M_complete_async() [421]
-----------------------------------------------
                0.00    0.00     870/870         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<sf::Image ()> >) [415]
[422]    0.0    0.00    0.00     870         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<sf::Image ()> > const&) [422]
                0.00    0.00     870/870         std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [419]
-----------------------------------------------
                0.00    0.00     869/869         std::__future_base::_Task_state_base<sf::Image ()>::~_Task_state_base() [399]
[423]    0.0    0.00    0.00     869         std::__future_base::_State_baseV2::~_State_baseV2() [423]
                0.00    0.00     871/871         std::__atomic_futex_unsigned<2147483648u>::~__atomic_futex_unsigned() [416]
                0.00    0.00     857/2576        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
-----------------------------------------------
                0.00    0.00     868/868         std::packaged_task<sf::Image ()>::packaged_task<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, void>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [42]
[424]    0.0    0.00    0.00     868         std::allocator<int>::allocator() [424]
                0.00    0.00     864/864         __gnu_cxx::new_allocator<int>::new_allocator() [436]
-----------------------------------------------
                0.00    0.00     867/867         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
[425]    0.0    0.00    0.00     867         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&&) [425]
                0.00    0.00     866/3461        std::__future_base::_Result_base*&& std::forward<std::__future_base::_Result_base*>(std::remove_reference<std::__future_base::_Result_base*>::type&) [233]
-----------------------------------------------
                0.00    0.00     867/867         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[426]    0.0    0.00    0.00     867         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&) [426]
                0.00    0.00     871/871         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long long) [414]
                0.00    0.00     846/1701        std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [352]
-----------------------------------------------
                0.00    0.00     866/866         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [437]
[427]    0.0    0.00    0.00     866         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [427]
-----------------------------------------------
                0.00    0.00     866/866         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [449]
[428]    0.0    0.00    0.00     866         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::~_Sp_ebo_helper() [428]
                0.00    0.00     864/864         std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [438]
-----------------------------------------------
                0.00    0.00     866/866         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [443]
[429]    0.0    0.00    0.00     866         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [429]
                0.00    0.00     866/866         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true>() [430]
-----------------------------------------------
                0.00    0.00     866/866         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [429]
[430]    0.0    0.00    0.00     866         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true>() [430]
                0.00    0.00     865/865         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [432]
-----------------------------------------------
                0.00    0.00     865/865         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [432]
[431]    0.0    0.00    0.00     865         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base() [431]
-----------------------------------------------
                0.00    0.00     865/865         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true>() [430]
[432]    0.0    0.00    0.00     865         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [432]
                0.00    0.00     865/1708        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [343]
                0.00    0.00     865/865         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base() [431]
-----------------------------------------------
                0.00    0.00     865/865         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [486]
[433]    0.0    0.00    0.00     865         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter&&) [433]
                0.00    0.00     861/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
                0.00    0.00     856/856         std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [466]
-----------------------------------------------
                0.00    0.00     865/865         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [350]
[434]    0.0    0.00    0.00     865         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [434]
                0.00    0.00     861/861         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [447]
-----------------------------------------------
                0.00    0.00     865/865         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[435]    0.0    0.00    0.00     865         std::remove_reference<std::allocator<std::packaged_task<sf::Image ()> > const&>::type&& std::move<std::allocator<std::packaged_task<sf::Image ()> > const&>(std::allocator<std::packaged_task<sf::Image ()> > const&) [435]
-----------------------------------------------
                0.00    0.00     864/864         std::allocator<int>::allocator() [424]
[436]    0.0    0.00    0.00     864         __gnu_cxx::new_allocator<int>::new_allocator() [436]
-----------------------------------------------
                0.00    0.00     864/864         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [442]
[437]    0.0    0.00    0.00     864         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [437]
                0.00    0.00     866/866         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [427]
-----------------------------------------------
                0.00    0.00     864/864         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::~_Sp_ebo_helper() [428]
[438]    0.0    0.00    0.00     864         std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [438]
                0.00    0.00     866/3422        __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::~new_allocator() [239]
-----------------------------------------------
                0.00    0.00     864/864         std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [466]
[439]    0.0    0.00    0.00     864         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [439]
                0.00    0.00     864/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
                0.00    0.00     860/2591        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [258]
                0.00    0.00     857/2581        std::__future_base::_Result<sf::Image>*& std::forward<std::__future_base::_Result<sf::Image>*&>(std::remove_reference<std::__future_base::_Result<sf::Image>*&>::type&) [266]
                0.00    0.00     855/855         std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base<std::__future_base::_Result<sf::Image>*&>(std::__future_base::_Result<sf::Image>*&) [467]
-----------------------------------------------
                0.00    0.00     864/864         std::__future_base::_Task_state_base<sf::Image ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [444]
[440]    0.0    0.00    0.00     864         std::__future_base::_State_baseV2::_State_baseV2() [440]
                0.00    0.00     862/862         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [443]
                0.00    0.00     858/858         std::once_flag::once_flag() [460]
                0.00    0.00     854/854         std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [470]
                0.00    0.00     845/845         std::atomic_flag::atomic_flag(bool) [482]
-----------------------------------------------
                0.00    0.00     863/863         std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> > const&) [456]
[441]    0.0    0.00    0.00     863         std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [441]
                0.00    0.00     863/2564        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [271]
-----------------------------------------------
                0.00    0.00     862/862         std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [455]
[442]    0.0    0.00    0.00     862         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [442]
                0.00    0.00     864/864         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [437]
-----------------------------------------------
                0.00    0.00     862/862         std::__future_base::_State_baseV2::_State_baseV2() [440]
[443]    0.0    0.00    0.00     862         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [443]
                0.00    0.00     866/866         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [429]
-----------------------------------------------
                0.00    0.00     862/862         std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_Task_state<{lambda()#1}>({lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [52]
[444]    0.0    0.00    0.00     862         std::__future_base::_Task_state_base<sf::Image ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [444]
                0.00    0.00     864/864         std::__future_base::_State_baseV2::_State_baseV2() [440]
                0.00    0.00     856/856         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<sf::Image, int>(std::allocator<int> const&) [465]
-----------------------------------------------
                0.00    0.00     862/862         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [498]
[445]    0.0    0.00    0.00     862         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [445]
                0.00    0.00     841/841         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [495]
-----------------------------------------------
                                 862             std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [520]
[446]    0.0    0.00    0.00     862         void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::destroy<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*) <cycle 1> [446]
                                 857             void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::destroy<std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) <cycle 1> [462]
-----------------------------------------------
                0.00    0.00     861/861         std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [434]
[447]    0.0    0.00    0.00     861         __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [447]
-----------------------------------------------
                0.00    0.00     861/861         std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [396]
[448]    0.0    0.00    0.00     861         std::__future_base::_Result<sf::Image>::_M_destroy() [448]
                0.00    0.00     871/871         std::__future_base::_Result<sf::Image>::~_Result() [413]
-----------------------------------------------
                0.00    0.00     861/861         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [450]
[449]    0.0    0.00    0.00     861         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [449]
                0.00    0.00     866/866         std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::~_Sp_ebo_helper() [428]
-----------------------------------------------
                0.00    0.00     861/861         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
[450]    0.0    0.00    0.00     861         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [450]
                0.00    0.00     862/1738        std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [291]
                0.00    0.00     861/861         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [449]
-----------------------------------------------
                0.00    0.00     860/860         std::mutex::mutex() [464]
[451]    0.0    0.00    0.00     860         std::__mutex_base::__mutex_base() [451]
                0.00    0.00     862/44468       __gcc_deregister_frame [206]
-----------------------------------------------
                0.00    0.00     860/860         std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[452]    0.0    0.00    0.00     860         std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [452]
                0.00    0.00     853/853         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [471]
-----------------------------------------------
                0.00    0.00     859/859         std::_Sp_counted_ptr_inplace<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [1083]
[453]    0.0    0.00    0.00     859         std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [453]
                0.00    0.00     861/1704        std::allocator<int>::allocator(std::allocator<int> const&) [348]
-----------------------------------------------
                0.00    0.00     858/858         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[454]    0.0    0.00    0.00     858         sf::Rect<int>::Rect() [454]
-----------------------------------------------
                0.00    0.00     858/858         std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[455]    0.0    0.00    0.00     858         std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [455]
                0.00    0.00     862/862         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [442]
-----------------------------------------------
                0.00    0.00     858/858         std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
[456]    0.0    0.00    0.00     858         std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> > const&) [456]
                0.00    0.00     863/863         std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [441]
-----------------------------------------------
                0.00    0.00     858/858         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [495]
[457]    0.0    0.00    0.00     858         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
                0.00    0.00     867/867         std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&&) [425]
                0.00    0.00     864/6931        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [211]
                0.00    0.00     863/3461        std::__future_base::_Result_base*&& std::forward<std::__future_base::_Result_base*>(std::remove_reference<std::__future_base::_Result_base*>::type&) [233]
                0.00    0.00     857/857         std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [463]
                0.00    0.00     854/2586        std::remove_reference<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [262]
                0.00    0.00     838/4302        std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_tail(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [227]
-----------------------------------------------
                                 858             std::future<sf::Image>::get() <cycle 1> [412]
[458]    0.0    0.00    0.00     858         std::__basic_future<sf::Image>::_Reset::~_Reset() <cycle 1> [458]
                                 873             std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() <cycle 1> [405]
-----------------------------------------------
                0.00    0.00       1/858         ThreadPool::~ThreadPool() [749]
                0.00    0.00     857/858         std::__atomic_futex_unsigned<2147483648u>::~__atomic_futex_unsigned() [416]
[459]    0.0    0.00    0.00     858         std::mutex::~mutex() [459]
                0.00    0.00     870/870         std::__mutex_base::~__mutex_base() [420]
-----------------------------------------------
                0.00    0.00     858/858         std::__future_base::_State_baseV2::_State_baseV2() [440]
[460]    0.0    0.00    0.00     858         std::once_flag::once_flag() [460]
-----------------------------------------------
                0.00    0.00     858/858         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [475]
[461]    0.0    0.00    0.00     858         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [461]
-----------------------------------------------
                                 857             void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::destroy<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*) <cycle 1> [446]
[462]    0.0    0.00    0.00     857         void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::destroy<std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) <cycle 1> [462]
                                 851             std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
-----------------------------------------------
                0.00    0.00     857/857         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
[463]    0.0    0.00    0.00     857         std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [463]
                0.00    0.00     867/7794        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [210]
                0.00    0.00     865/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
                0.00    0.00     862/3460        std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [234]
-----------------------------------------------
                0.00    0.00       1/857         ThreadPool::ThreadPool(unsigned int) [748]
                0.00    0.00     856/857         std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [470]
[464]    0.0    0.00    0.00     857         std::mutex::mutex() [464]
                0.00    0.00     860/860         std::__mutex_base::__mutex_base() [451]
-----------------------------------------------
                0.00    0.00     856/856         std::__future_base::_Task_state_base<sf::Image ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [444]
[465]    0.0    0.00    0.00     856         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<sf::Image, int>(std::allocator<int> const&) [465]
                0.00    0.00     820/820         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*) [507]
                0.00    0.00     814/814         std::__future_base::_Result<sf::Image>::_Result() [513]
-----------------------------------------------
                0.00    0.00     856/856         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter&&) [433]
[466]    0.0    0.00    0.00     856         std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [466]
                0.00    0.00     865/2581        std::__future_base::_Result<sf::Image>*& std::forward<std::__future_base::_Result<sf::Image>*&>(std::remove_reference<std::__future_base::_Result<sf::Image>*&>::type&) [266]
                0.00    0.00     864/864         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [439]
                0.00    0.00     862/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                0.00    0.00     855/855         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [439]
[467]    0.0    0.00    0.00     855         std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base<std::__future_base::_Result<sf::Image>*&>(std::__future_base::_Result<sf::Image>*&) [467]
                0.00    0.00     859/2581        std::__future_base::_Result<sf::Image>*& std::forward<std::__future_base::_Result<sf::Image>*&>(std::remove_reference<std::__future_base::_Result<sf::Image>*&>::type&) [266]
-----------------------------------------------
                0.00    0.00     854/854         std::atomic_flag::atomic_flag(bool) [482]
[468]    0.0    0.00    0.00     854         std::atomic_flag::_S_init(bool) [468]
-----------------------------------------------
                0.00    0.00     854/854         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [480]
[469]    0.0    0.00    0.00     854         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [469]
                0.00    0.00     853/2564        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [271]
-----------------------------------------------
                0.00    0.00     854/854         std::__future_base::_State_baseV2::_State_baseV2() [440]
[470]    0.0    0.00    0.00     854         std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [470]
                0.00    0.00     856/857         std::mutex::mutex() [464]
-----------------------------------------------
                0.00    0.00     853/853         std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [452]
[471]    0.0    0.00    0.00     853         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [471]
                0.00    0.00     853/1685        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [361]
-----------------------------------------------
                0.00    0.00     852/852         void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&) [477]
[472]    0.0    0.00    0.00     852         std::future<sf::Image>::future(std::future<sf::Image>&&) [472]
                0.00    0.00     852/1693        std::remove_reference<std::future<sf::Image>&>::type&& std::move<std::future<sf::Image>&>(std::future<sf::Image>&) [357]
                0.00    0.00     851/851         std::__basic_future<sf::Image>::__basic_future(std::future<sf::Image>&&) [474]
-----------------------------------------------
                                 851             void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::destroy<std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) <cycle 1> [462]
[473]    0.0    0.00    0.00     851         std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
                0.00    0.00    1724/2521        std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [281]
                0.00    0.00     864/1673        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [370]
                0.00    0.00     860/860         std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [452]
                0.00    0.00     860/2576        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [267]
                0.00    0.00     859/1645        std::remove_reference<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&) [375]
                0.00    0.00     858/858         std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [455]
                0.00    0.00     855/1686        std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [359]
                                 847             std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::~shared_ptr() <cycle 1> [481]
-----------------------------------------------
                0.00    0.00     851/851         std::future<sf::Image>::future(std::future<sf::Image>&&) [472]
[474]    0.0    0.00    0.00     851         std::__basic_future<sf::Image>::__basic_future(std::future<sf::Image>&&) [474]
                0.00    0.00     855/1705        std::remove_reference<std::shared_ptr<std::__future_base::_State_baseV2>&>::type&& std::move<std::shared_ptr<std::__future_base::_State_baseV2>&>(std::shared_ptr<std::__future_base::_State_baseV2>&) [347]
                0.00    0.00     847/847         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2>&&) [478]
-----------------------------------------------
                0.00    0.00     851/851         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[475]    0.0    0.00    0.00     851         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [475]
                0.00    0.00     858/858         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [461]
-----------------------------------------------
                0.00    0.00     849/849         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2>&&) [478]
[476]    0.0    0.00    0.00     849         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&&) [476]
                0.00    0.00     851/4313        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [226]
                0.00    0.00     850/4317        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [225]
-----------------------------------------------
                0.00    0.00     848/848         void std::allocator_traits<std::allocator<std::future<sf::Image> > >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, std::future<sf::Image>&&) [488]
[477]    0.0    0.00    0.00     848         void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&) [477]
                0.00    0.00     852/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00     852/852         std::future<sf::Image>::future(std::future<sf::Image>&&) [472]
                0.00    0.00     850/2536        std::future<sf::Image>&& std::forward<std::future<sf::Image> >(std::remove_reference<std::future<sf::Image> >::type&) [280]
-----------------------------------------------
                0.00    0.00     847/847         std::__basic_future<sf::Image>::__basic_future(std::future<sf::Image>&&) [474]
[478]    0.0    0.00    0.00     847         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2>&&) [478]
                0.00    0.00     850/1705        std::remove_reference<std::shared_ptr<std::__future_base::_State_baseV2>&>::type&& std::move<std::shared_ptr<std::__future_base::_State_baseV2>&>(std::shared_ptr<std::__future_base::_State_baseV2>&) [347]
                0.00    0.00     849/849         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&&) [476]
-----------------------------------------------
                0.00    0.00     847/847         std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [490]
[479]    0.0    0.00    0.00     847         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [479]
                0.00    0.00     844/844         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [487]
-----------------------------------------------
                0.00    0.00     847/847         std::packaged_task<sf::Image ()>::get_future() [75]
[480]    0.0    0.00    0.00     847         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [480]
                0.00    0.00     854/854         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [469]
-----------------------------------------------
                                 847             std::packaged_task<sf::Image ()>::~packaged_task() <cycle 1> [473]
[481]    0.0    0.00    0.00     847         std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::~shared_ptr() <cycle 1> [481]
                                 843             std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [489]
-----------------------------------------------
                0.00    0.00     845/845         std::__future_base::_State_baseV2::_State_baseV2() [440]
[482]    0.0    0.00    0.00     845         std::atomic_flag::atomic_flag(bool) [482]
                0.00    0.00     854/854         std::atomic_flag::_S_init(bool) [468]
-----------------------------------------------
                0.00    0.00     845/845         std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [20]
[483]    0.0    0.00    0.00     845         std::enable_if<!std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<sf::Image ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<sf::Image ()>, std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) [483]
-----------------------------------------------
                0.00    0.00     845/845         std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [490]
[484]    0.0    0.00    0.00     845         std::__future_base::_State_baseV2::_M_set_retrieved_flag() [484]
-----------------------------------------------
                0.00    0.00     844/844         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [496]
[485]    0.0    0.00    0.00     844         std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base() [485]
-----------------------------------------------
                0.00    0.00     844/844         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>::operator()() const [80]
[486]    0.0    0.00    0.00     844         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [486]
                0.00    0.00     865/865         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter&&) [433]
                0.00    0.00     862/2588        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release() [260]
                0.00    0.00     855/2554        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get_deleter() [275]
                0.00    0.00     855/18969       std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&) [207]
-----------------------------------------------
                0.00    0.00     844/844         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [479]
[487]    0.0    0.00    0.00     844         std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [487]
                0.00    0.00     848/2564        std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [271]
-----------------------------------------------
                0.00    0.00     844/844         std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&) [497]
[488]    0.0    0.00    0.00     844         void std::allocator_traits<std::allocator<std::future<sf::Image> > >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, std::future<sf::Image>&&) [488]
                0.00    0.00     848/848         void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&) [477]
                0.00    0.00     846/2536        std::future<sf::Image>&& std::forward<std::future<sf::Image> >(std::remove_reference<std::future<sf::Image> >::type&) [280]
-----------------------------------------------
                                 843             std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::~shared_ptr() <cycle 1> [481]
[489]    0.0    0.00    0.00     843         std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() <cycle 1> [489]
                                 852             std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() <cycle 1> [208]
-----------------------------------------------
                0.00    0.00     843/843         std::future<sf::Image>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [502]
[490]    0.0    0.00    0.00     843         std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [490]
                0.00    0.00     847/847         std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [479]
                0.00    0.00     845/845         std::__future_base::_State_baseV2::_M_set_retrieved_flag() [484]
                0.00    0.00     841/1707        std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [344]
                0.00    0.00     839/1711        void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [338]
-----------------------------------------------
                0.00    0.00     843/843         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(std::_Sp_make_shared_tag, std::packaged_task<sf::Image ()>*, std::allocator<std::packaged_task<sf::Image ()> > const&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}&&) [36]
[491]    0.0    0.00    0.00     843         std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [491]
-----------------------------------------------
                0.00    0.00     843/843         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [71]
[492]    0.0    0.00    0.00     843         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [492]
                0.00    0.00     845/2562        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [272]
-----------------------------------------------
                0.00    0.00     843/843         std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count<std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, {lambda()#1}, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&>(std::_Sp_make_shared_tag, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>*, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&, {lambda()#1}&&, RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1} const&) [4]
[493]    0.0    0.00    0.00     843         std::remove_reference<std::allocator<int> const&>::type&& std::move<std::allocator<int> const&>(std::allocator<int> const&) [493]
-----------------------------------------------
                0.00    0.00     842/842         std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&) [497]
[494]    0.0    0.00    0.00     842         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back() [494]
                0.00    0.00     846/1139        std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::end() [388]
                0.00    0.00     841/1715        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator*() const [330]
                0.00    0.00     837/837         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator-(long long) const [500]
-----------------------------------------------
                0.00    0.00     841/841         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [445]
[495]    0.0    0.00    0.00     841         std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [495]
                0.00    0.00     858/858         std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [457]
-----------------------------------------------
                0.00    0.00     840/840         std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter, true>() [499]
[496]    0.0    0.00    0.00     840         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [496]
                0.00    0.00     844/844         std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base() [485]
                0.00    0.00     843/1708        std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [343]
-----------------------------------------------
                0.00    0.00     840/840         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[497]    0.0    0.00    0.00     840         std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&) [497]
                0.00    0.00     844/844         void std::allocator_traits<std::allocator<std::future<sf::Image> > >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, std::future<sf::Image>&&) [488]
                0.00    0.00     842/842         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back() [494]
                0.00    0.00     840/2536        std::future<sf::Image>&& std::forward<std::future<sf::Image> >(std::remove_reference<std::future<sf::Image> >::type&) [280]
-----------------------------------------------
                0.00    0.00     839/839         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [521]
[498]    0.0    0.00    0.00     839         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [498]
                0.00    0.00    2561/2561        std::remove_reference<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [273]
                0.00    0.00    1716/1716        std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator=(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [329]
                0.00    0.00     862/862         std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [445]
-----------------------------------------------
                0.00    0.00     838/838         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<sf::Image>*) [503]
[499]    0.0    0.00    0.00     838         std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter, true>() [499]
                0.00    0.00     840/840         std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [496]
-----------------------------------------------
                0.00    0.00     837/837         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back() [494]
[500]    0.0    0.00    0.00     837         __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator-(long long) const [500]
                0.00    0.00     843/2274        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::__normal_iterator(std::future<sf::Image>* const&) [286]
-----------------------------------------------
                0.00    0.00     837/837         std::function<void ()>::operator=(std::function<void ()>&&) [93]
[501]    0.0    0.00    0.00     837         std::function<void ()>::function(std::function<void ()>&&) [501]
                0.00    0.00     844/3335        std::_Function_base::_Function_base() [252]
                0.00    0.00     838/1678        std::function<void ()>::swap(std::function<void ()>&) [366]
-----------------------------------------------
                0.00    0.00     830/830         std::packaged_task<sf::Image ()>::get_future() [75]
[502]    0.0    0.00    0.00     830         std::future<sf::Image>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [502]
                0.00    0.00     843/843         std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [490]
-----------------------------------------------
                0.00    0.00     829/829         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*) [507]
[503]    0.0    0.00    0.00     829         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<sf::Image>*) [503]
                0.00    0.00     839/5083        std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [220]
                0.00    0.00     838/838         std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter, true>() [499]
-----------------------------------------------
                0.00    0.00     826/826         ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}::operator()() const [92]
[504]    0.0    0.00    0.00     826         std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [504]
                0.00    0.00     832/1666        std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [371]
-----------------------------------------------
                0.00    0.00       1/822         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
                0.00    0.00     821/822         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [515]
[505]    0.0    0.00    0.00     822         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [505]
                0.00    0.00     831/1705        std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [346]
-----------------------------------------------
                0.00    0.00     821/821         std::__basic_future<sf::Image>::_M_get_result() const [404]
[506]    0.0    0.00    0.00     821         std::__exception_ptr::exception_ptr::exception_ptr(decltype(nullptr)) [506]
-----------------------------------------------
                0.00    0.00     820/820         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<sf::Image, int>(std::allocator<int> const&) [465]
[507]    0.0    0.00    0.00     820         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*) [507]
                0.00    0.00     829/829         std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<sf::Image>*) [503]
-----------------------------------------------
                0.00    0.00     820/820         std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
[508]    0.0    0.00    0.00     820         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&) [508]
-----------------------------------------------
                0.00    0.00     818/818         std::packaged_task<sf::Image ()>::operator()() [91]
[509]    0.0    0.00    0.00     818         void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<sf::Image ()> >(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [509]
                0.00    0.00     831/1686        std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [359]
-----------------------------------------------
                0.00    0.00     818/818         std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
[510]    0.0    0.00    0.00     818         void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [510]
                0.00    0.00     817/817         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [511]
                0.00    0.00     752/44468       __gcc_deregister_frame [206]
                0.00    0.00     738/738         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator void (*)()() const [527]
-----------------------------------------------
                0.00    0.00     817/817         void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [510]
[511]    0.0    0.00    0.00     817         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)) [511]
-----------------------------------------------
                0.00    0.00     816/816         std::future<decltype ({parm#1}())> ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}) [6]
[512]    0.0    0.00    0.00     816         std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [512]
                0.00    0.00     834/1666        std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [371]
-----------------------------------------------
                0.00    0.00     814/814         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<sf::Image, int>(std::allocator<int> const&) [465]
[513]    0.0    0.00    0.00     814         std::__future_base::_Result<sf::Image>::_Result() [513]
-----------------------------------------------
                0.00    0.00     811/811         std::__future_base::_State_baseV2::wait() [401]
[514]    0.0    0.00    0.00     811         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator*() const [514]
                0.00    0.00     832/1685        std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [361]
-----------------------------------------------
                0.00    0.00     809/809         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [524]
[515]    0.0    0.00    0.00     809         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [515]
                0.00    0.00     823/1694        std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [355]
                0.00    0.00     821/822         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [505]
-----------------------------------------------
                0.00    0.00     808/808         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>::operator()() const [80]
[516]    0.0    0.00    0.00     808         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::operator->() const [516]
                0.00    0.00     780/3376        std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get() const [249]
-----------------------------------------------
                0.00    0.00     805/805         std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
[517]    0.0    0.00    0.00     805         bool* std::__addressof<bool>(bool&) [517]
-----------------------------------------------
                0.00    0.00     800/800         std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run() [27]
[518]    0.0    0.00    0.00     800         std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [518]
                0.00    0.00     820/820         std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&) [508]
                0.00    0.00     818/818         void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [510]
                0.00    0.00     805/805         bool* std::__addressof<bool>(bool&) [517]
                0.00    0.00     793/3346        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
                0.00    0.00     791/3293        std::unique_lock<std::mutex>::~unique_lock() [253]
-----------------------------------------------
                0.00    0.00     788/788         std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
[519]    0.0    0.00    0.00     788         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [519]
                0.00    0.00     861/861         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [450]
                0.00    0.00     857/1702        std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [350]
                0.00    0.00     855/1701        std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [352]
                0.00    0.00     846/1716        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> > const&) [328]
                0.00    0.00     823/1681        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [363]
                0.00    0.00     759/1607        std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [379]
-----------------------------------------------
                                 787             std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() <cycle 1> [228]
[520]    0.0    0.00    0.00     787         std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() <cycle 1> [520]
                0.00    0.00     858/1681        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [363]
                0.00    0.00     845/2562        std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [272]
                                 862             void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::destroy<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*) <cycle 1> [446]
-----------------------------------------------
                0.00    0.00     786/786         std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [81]
[521]    0.0    0.00    0.00     786         std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [521]
                0.00    0.00     839/839         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [498]
-----------------------------------------------
                0.00    0.00     785/785         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}::element_type::result_type> std::__future_base::_S_task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}>(std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}&, std::__future_base::_Task_setter&) [89]
[522]    0.0    0.00    0.00     785         std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&) [522]
-----------------------------------------------
                0.00    0.00     783/783         ThreadPool::task() [21]
[523]    0.0    0.00    0.00     783         void std::condition_variable::wait<ThreadPool::task()::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::task()::{lambda()#1}) [523]
                0.00    0.00    1579/1579        ThreadPool::task()::{lambda()#1}::operator()() const [382]
-----------------------------------------------
                0.00    0.00     779/779         ThreadPool::task() [21]
[524]    0.0    0.00    0.00     779         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front() [524]
                0.00    0.00     809/809         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front() [515]
-----------------------------------------------
                0.00    0.00     770/770         std::__future_base::_Task_setter<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>, std::__future_base::_Task_state<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}, std::allocator<int>, sf::Image ()>::_M_run()::{lambda()#1}, sf::Image>::operator()() const [80]
[525]    0.0    0.00    0.00     770         std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [525]
                0.00    0.00     858/2583        __gnu_cxx::__aligned_buffer<sf::Image>::_M_addr() [264]
                0.00    0.00     836/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00     830/1691        std::remove_reference<sf::Image&>::type&& std::move<sf::Image&>(sf::Image&) [358]
                0.00    0.00     817/1679        sf::Image::Image(sf::Image const&) [364]
-----------------------------------------------
                0.00    0.00     761/761         ThreadPool::task() [21]
[526]    0.0    0.00    0.00     761         std::function<void ()>::function() [526]
                0.00    0.00     814/3335        std::_Function_base::_Function_base() [252]
-----------------------------------------------
                0.00    0.00     738/738         void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&) [510]
[527]    0.0    0.00    0.00     738         std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator void (*)()() const [527]
-----------------------------------------------
                0.00    0.00     293/586         __gnu_cxx::new_allocator<std::future<sf::Image> >::allocate(unsigned long long, void const*) [539]
                0.00    0.00     293/586         std::allocator_traits<std::allocator<std::future<sf::Image> > >::max_size(std::allocator<std::future<sf::Image> > const&) [556]
[528]    0.0    0.00    0.00     586         __gnu_cxx::new_allocator<std::future<sf::Image> >::max_size() const [528]
-----------------------------------------------
                0.00    0.00     586/586         bool std::operator==<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&) [565]
[529]    0.0    0.00    0.00     586         std::move_iterator<std::future<sf::Image>*>::base() const [529]
-----------------------------------------------
                                 586             void std::_Destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [534]
[530]    0.0    0.00    0.00     586         void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [530]
                0.00    0.00     879/879         std::future<sf::Image>* std::__addressof<std::future<sf::Image> >(std::future<sf::Image>&) [391]
                                 879             void std::_Destroy<std::future<sf::Image> >(std::future<sf::Image>*) <cycle 1> [392]
-----------------------------------------------
                0.00    0.00     293/586         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~_Vector_base() [553]
                0.00    0.00     293/586         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
[531]    0.0    0.00    0.00     586         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_deallocate(std::future<sf::Image>*, unsigned long long) [531]
                0.00    0.00     293/293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::deallocate(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, unsigned long long) [554]
-----------------------------------------------
                0.00    0.00     586/586         std::move_iterator<std::future<sf::Image>*> std::__make_move_if_noexcept_iterator<std::future<sf::Image>, std::move_iterator<std::future<sf::Image>*> >(std::future<sf::Image>*) [533]
[532]    0.0    0.00    0.00     586         std::move_iterator<std::future<sf::Image>*>::move_iterator(std::future<sf::Image>*) [532]
-----------------------------------------------
                0.00    0.00     586/586         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
[533]    0.0    0.00    0.00     586         std::move_iterator<std::future<sf::Image>*> std::__make_move_if_noexcept_iterator<std::future<sf::Image>, std::move_iterator<std::future<sf::Image>*> >(std::future<sf::Image>*) [533]
                0.00    0.00     586/586         std::move_iterator<std::future<sf::Image>*>::move_iterator(std::future<sf::Image>*) [532]
-----------------------------------------------
                                 586             void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) <cycle 1> [535]
[534]    0.0    0.00    0.00     586         void std::_Destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [534]
                                 586             void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [530]
-----------------------------------------------
                                 293             std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
                                 293             std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector() <cycle 1> [562]
[535]    0.0    0.00    0.00     586         void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) <cycle 1> [535]
                                 586             void std::_Destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) <cycle 1> [534]
-----------------------------------------------
                0.00    0.00      12/305         std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const [660]
                0.00    0.00     293/305         ThreadPool::number_of_threads() const [542]
[536]    0.0    0.00    0.00     305         std::vector<std::thread, std::allocator<std::thread> >::size() const [536]
-----------------------------------------------
                0.00    0.00     293/293         World::update() <cycle 1> [757]
[537]    0.0    0.00    0.00     293         RaycastEngine::get_camera_pointer() [537]
-----------------------------------------------
                0.00    0.00     293/293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::deallocate(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, unsigned long long) [554]
[538]    0.0    0.00    0.00     293         __gnu_cxx::new_allocator<std::future<sf::Image> >::deallocate(std::future<sf::Image>*, unsigned long long) [538]
-----------------------------------------------
                0.00    0.00     293/293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::allocate(std::allocator<std::future<sf::Image> >&, unsigned long long) [555]
[539]    0.0    0.00    0.00     293         __gnu_cxx::new_allocator<std::future<sf::Image> >::allocate(unsigned long long, void const*) [539]
                0.00    0.00     293/586         __gnu_cxx::new_allocator<std::future<sf::Image> >::max_size() const [528]
-----------------------------------------------
                0.00    0.00     293/293         std::allocator<std::future<sf::Image> >::allocator() [547]
[540]    0.0    0.00    0.00     293         __gnu_cxx::new_allocator<std::future<sf::Image> >::new_allocator() [540]
-----------------------------------------------
                0.00    0.00     293/293         std::allocator<std::future<sf::Image> >::~allocator() [548]
[541]    0.0    0.00    0.00     293         __gnu_cxx::new_allocator<std::future<sf::Image> >::~new_allocator() [541]
-----------------------------------------------
                0.00    0.00     293/293         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[542]    0.0    0.00    0.00     293         ThreadPool::number_of_threads() const [542]
                0.00    0.00     293/305         std::vector<std::thread, std::allocator<std::thread> >::size() const [536]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::max_size() const [546]
[543]    0.0    0.00    0.00     293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() const [543]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
[544]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::size() const [544]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
[545]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::capacity() const [545]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
[546]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::max_size() const [546]
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() const [543]
                0.00    0.00     293/293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::max_size(std::allocator<std::future<sf::Image> > const&) [556]
-----------------------------------------------
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::_Vector_impl() [550]
[547]    0.0    0.00    0.00     293         std::allocator<std::future<sf::Image> >::allocator() [547]
                0.00    0.00     293/293         __gnu_cxx::new_allocator<std::future<sf::Image> >::new_allocator() [540]
-----------------------------------------------
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::~_Vector_impl() [551]
[548]    0.0    0.00    0.00     293         std::allocator<std::future<sf::Image> >::~allocator() [548]
                0.00    0.00     293/293         __gnu_cxx::new_allocator<std::future<sf::Image> >::~new_allocator() [541]
-----------------------------------------------
                0.00    0.00     293/293         std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>) [558]
[549]    0.0    0.00    0.00     293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate(unsigned long long) [549]
                0.00    0.00     293/293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::allocate(std::allocator<std::future<sf::Image> >&, unsigned long long) [555]
-----------------------------------------------
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_base() [552]
[550]    0.0    0.00    0.00     293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::_Vector_impl() [550]
                0.00    0.00     293/293         std::allocator<std::future<sf::Image> >::allocator() [547]
-----------------------------------------------
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~_Vector_base() [553]
[551]    0.0    0.00    0.00     293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::~_Vector_impl() [551]
                0.00    0.00     293/293         std::allocator<std::future<sf::Image> >::~allocator() [548]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::vector() [561]
[552]    0.0    0.00    0.00     293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_base() [552]
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::_Vector_impl() [550]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector() <cycle 1> [562]
[553]    0.0    0.00    0.00     293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~_Vector_base() [553]
                0.00    0.00     293/586         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_deallocate(std::future<sf::Image>*, unsigned long long) [531]
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::~_Vector_impl() [551]
-----------------------------------------------
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_deallocate(std::future<sf::Image>*, unsigned long long) [531]
[554]    0.0    0.00    0.00     293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::deallocate(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, unsigned long long) [554]
                0.00    0.00     293/293         __gnu_cxx::new_allocator<std::future<sf::Image> >::deallocate(std::future<sf::Image>*, unsigned long long) [538]
-----------------------------------------------
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate(unsigned long long) [549]
[555]    0.0    0.00    0.00     293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::allocate(std::allocator<std::future<sf::Image> >&, unsigned long long) [555]
                0.00    0.00     293/293         __gnu_cxx::new_allocator<std::future<sf::Image> >::allocate(unsigned long long, void const*) [539]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::max_size() const [546]
[556]    0.0    0.00    0.00     293         std::allocator_traits<std::allocator<std::future<sf::Image> > >::max_size(std::allocator<std::future<sf::Image> > const&) [556]
                0.00    0.00     293/586         __gnu_cxx::new_allocator<std::future<sf::Image> >::max_size() const [528]
-----------------------------------------------
                0.00    0.00     293/293         std::future<sf::Image>* std::uninitialized_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [563]
[557]    0.0    0.00    0.00     293         std::future<sf::Image>* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [557]
                0.00    0.00     293/293         bool std::operator!=<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&) [566]
-----------------------------------------------
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
[558]    0.0    0.00    0.00     293         std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>) [558]
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate(unsigned long long) [549]
                0.00    0.00     293/879         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() [389]
                0.00    0.00     293/293         std::future<sf::Image>* std::__uninitialized_copy_a<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::future<sf::Image> >(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) [564]
-----------------------------------------------
                0.00    0.00     293/293         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[559]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::begin() [559]
                0.00    0.00     293/2274        __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::__normal_iterator(std::future<sf::Image>* const&) [286]
-----------------------------------------------
                                 293             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[560]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long) <cycle 1> [560]
                0.00    0.00     586/586         std::move_iterator<std::future<sf::Image>*> std::__make_move_if_noexcept_iterator<std::future<sf::Image>, std::move_iterator<std::future<sf::Image>*> >(std::future<sf::Image>*) [533]
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::max_size() const [546]
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::capacity() const [545]
                0.00    0.00     293/293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::size() const [544]
                0.00    0.00     293/293         std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>) [558]
                0.00    0.00     293/879         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() [389]
                0.00    0.00     293/586         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_deallocate(std::future<sf::Image>*, unsigned long long) [531]
                                 293             void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) <cycle 1> [535]
-----------------------------------------------
                0.00    0.00     293/293         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[561]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::vector() [561]
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_base() [552]
-----------------------------------------------
                                 293             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[562]    0.0    0.00    0.00     293         std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector() <cycle 1> [562]
                0.00    0.00     293/879         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() [389]
                0.00    0.00     293/293         std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~_Vector_base() [553]
                                 293             void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) <cycle 1> [535]
-----------------------------------------------
                0.00    0.00     293/293         std::future<sf::Image>* std::__uninitialized_copy_a<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::future<sf::Image> >(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) [564]
[563]    0.0    0.00    0.00     293         std::future<sf::Image>* std::uninitialized_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [563]
                0.00    0.00     293/293         std::future<sf::Image>* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [557]
-----------------------------------------------
                0.00    0.00     293/293         std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>) [558]
[564]    0.0    0.00    0.00     293         std::future<sf::Image>* std::__uninitialized_copy_a<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::future<sf::Image> >(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&) [564]
                0.00    0.00     293/293         std::future<sf::Image>* std::uninitialized_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [563]
-----------------------------------------------
                0.00    0.00     293/293         bool std::operator!=<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&) [566]
[565]    0.0    0.00    0.00     293         bool std::operator==<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&) [565]
                0.00    0.00     586/586         std::move_iterator<std::future<sf::Image>*>::base() const [529]
-----------------------------------------------
                0.00    0.00     293/293         std::future<sf::Image>* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [557]
[566]    0.0    0.00    0.00     293         bool std::operator!=<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&) [566]
                0.00    0.00     293/293         bool std::operator==<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&) [565]
-----------------------------------------------
                0.00    0.00       2/291         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
                0.00    0.00      50/291         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [577]
                0.00    0.00      51/291         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [579]
                0.00    0.00     188/291         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [575]
[567]    0.0    0.00    0.00     291         std::__deque_buf_size(unsigned long long) [567]
-----------------------------------------------
                0.00    0.00     256/256         std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [799]
[568]    0.0    0.00    0.00     256         std::_Bit_iterator::operator*() const [568]
                0.00    0.00     256/5340855     std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) [186]
-----------------------------------------------
                0.00    0.00     256/256         std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [799]
[569]    0.0    0.00    0.00     256         std::_Bit_iterator::operator++() [569]
                0.00    0.00     256/256         std::_Bit_iterator_base::_M_bump_up() [571]
-----------------------------------------------
                0.00    0.00     256/256         std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [799]
[570]    0.0    0.00    0.00     256         std::_Bit_reference::operator=(bool) [570]
-----------------------------------------------
                0.00    0.00     256/256         std::_Bit_iterator::operator++() [569]
[571]    0.0    0.00    0.00     256         std::_Bit_iterator_base::_M_bump_up() [571]
-----------------------------------------------
                0.00    0.00       1/237         World::World(int, int, int) [758]
                0.00    0.00     236/237         RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
[572]    0.0    0.00    0.00     237         sf::ContextSettings::ContextSettings(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool) [572]
-----------------------------------------------
                0.00    0.00       8/217         Camera::move_right(float) [611]
                0.00    0.00       8/217         Camera::move_left(float) [612]
                0.00    0.00      13/217         Camera::move_backward(float) [595]
                0.00    0.00     188/217         Camera::move_forward(float) [574]
[573]    0.0    0.00    0.00     217         trig::Vector2<float>::operator+=(trig::Vector2<float> const&) [573]
-----------------------------------------------
                0.00    0.00     188/188         World::update() <cycle 1> [757]
[574]    0.0    0.00    0.00     188         Camera::move_forward(float) [574]
                0.00    0.00     376/285610      trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00     188/247519      trig::Vector2<float>::Vector2(float) [203]
                0.00    0.00     188/217         trig::Vector2<float>::operator+=(trig::Vector2<float> const&) [573]
-----------------------------------------------
                0.00    0.00     186/186         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
[575]    0.0    0.00    0.00     186         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [575]
                0.00    0.00     188/291         std::__deque_buf_size(unsigned long long) [567]
-----------------------------------------------
                0.00    0.00       2/185         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
                0.00    0.00      26/185         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long long, bool) [597]
                0.00    0.00      50/185         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [100]
                0.00    0.00      53/185         void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [99]
                0.00    0.00      54/185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [406]
[576]    0.0    0.00    0.00     185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
                0.00    0.00     186/186         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [575]
-----------------------------------------------
                0.00    0.00       1/54          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [793]
                0.00    0.00      53/54          void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [99]
[577]    0.0    0.00    0.00      54         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [577]
                0.00    0.00      51/51          std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long long) [583]
                0.00    0.00      50/291         std::__deque_buf_size(unsigned long long) [567]
-----------------------------------------------
                0.00    0.00      54/54          void std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_push_back_aux<ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}>(ThreadPool::submit<RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1}>(RaycastEngine::multi_render(sf::RenderWindow&)::{lambda()#1})::{lambda()#1}&&) [99]
[578]    0.0    0.00    0.00      54         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long long) [578]
                0.00    0.00      13/13          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long long, bool) [597]
-----------------------------------------------
                0.00    0.00       1/52          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [794]
                0.00    0.00      51/52          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [100]
[579]    0.0    0.00    0.00      52         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [579]
                0.00    0.00      52/52          std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long long) [580]
                0.00    0.00      51/291         std::__deque_buf_size(unsigned long long) [567]
-----------------------------------------------
                0.00    0.00      52/52          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [579]
[580]    0.0    0.00    0.00      52         std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long long) [580]
                0.00    0.00      51/51          __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long long) [581]
-----------------------------------------------
                0.00    0.00      51/51          std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long long) [580]
[581]    0.0    0.00    0.00      51         __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long long) [581]
-----------------------------------------------
                0.00    0.00      51/51          __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long long, void const*) [584]
[582]    0.0    0.00    0.00      51         __gnu_cxx::new_allocator<std::function<void ()> >::max_size() const [582]
-----------------------------------------------
                0.00    0.00      51/51          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [577]
[583]    0.0    0.00    0.00      51         std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long long) [583]
                0.00    0.00      50/50          __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long long, void const*) [584]
-----------------------------------------------
                0.00    0.00      50/50          std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long long) [583]
[584]    0.0    0.00    0.00      50         __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long long, void const*) [584]
                0.00    0.00      51/51          __gnu_cxx::new_allocator<std::function<void ()> >::max_size() const [582]
-----------------------------------------------
                0.00    0.00       1/50          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [822]
                0.00    0.00       1/50          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
                0.00    0.00      48/50          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux() [100]
[585]    0.0    0.00    0.00      50         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [585]
-----------------------------------------------
                0.00    0.00      43/43          World::update() <cycle 1> [757]
[586]    0.0    0.00    0.00      43         Camera::rotate_right(float) [586]
-----------------------------------------------
                0.00    0.00       3/42          void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [653]
                0.00    0.00       3/42          std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [668]
                0.00    0.00       3/42          std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&) [670]
                0.00    0.00       3/42          std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl<ThreadPool*>(ThreadPool*&&) [671]
                0.00    0.00       3/42          void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [682]
                0.00    0.00       3/42          std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&) [684]
                0.00    0.00       3/42          std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [688]
                0.00    0.00       3/42          std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
                0.00    0.00       3/42          std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
                0.00    0.00       3/42          void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
                0.00    0.00       3/42          void std::__invoke_impl<void, void (ThreadPool::*)(), ThreadPool*>(std::__invoke_memfun_deref, void (ThreadPool::*&&)(), ThreadPool*&&) [24]
                0.00    0.00       3/42          std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [25]
                0.00    0.00       6/42          std::_Head_base<1ull, ThreadPool*, false>::_Head_base<ThreadPool*>(ThreadPool*&&) [622]
[587]    0.0    0.00    0.00      42         ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
-----------------------------------------------
                0.00    0.00      39/39          std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [599]
[588]    0.0    0.00    0.00      39         std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**) [588]
-----------------------------------------------
                0.00    0.00       3/36          void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [653]
                0.00    0.00       3/36          std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
                0.00    0.00       3/36          std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [668]
                0.00    0.00       3/36          void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [682]
                0.00    0.00       3/36          std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&) [684]
                0.00    0.00       3/36          std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [688]
                0.00    0.00       3/36          std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
                0.00    0.00       3/36          std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
                0.00    0.00       3/36          void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
                0.00    0.00       3/36          std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [25]
                0.00    0.00       6/36          std::_Head_base<0ull, void (ThreadPool::*)(), false>::_Head_base<void (ThreadPool::*)()>(void (ThreadPool::*&&)()) [619]
[589]    0.0    0.00    0.00      36         void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
-----------------------------------------------
                0.00    0.00      26/26          World::update() <cycle 1> [757]
[590]    0.0    0.00    0.00      26         Camera::rotate_left(float) [590]
-----------------------------------------------
                0.00    0.00      26/26          std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [600]
[591]    0.0    0.00    0.00      26         std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**) [591]
-----------------------------------------------
                0.00    0.00       6/20          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [656]
                0.00    0.00       6/20          void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
                0.00    0.00       8/20          bool __gnu_cxx::operator!=<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [642]
[592]    0.0    0.00    0.00      20         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [592]
-----------------------------------------------
                0.00    0.00      18/18          bool std::operator==<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&) [609]
[593]    0.0    0.00    0.00      18         std::move_iterator<std::thread*>::base() const [593]
-----------------------------------------------
                0.00    0.00       3/14          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long long) const [657]
                0.00    0.00       4/14          std::vector<std::thread, std::allocator<std::thread> >::begin() [640]
                0.00    0.00       7/14          std::vector<std::thread, std::allocator<std::thread> >::end() [613]
[594]    0.0    0.00    0.00      14         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [594]
-----------------------------------------------
                0.00    0.00      13/13          World::update() <cycle 1> [757]
[595]    0.0    0.00    0.00      13         Camera::move_backward(float) [595]
                0.00    0.00      26/285610      trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00      13/247519      trig::Vector2<float>::Vector2(float) [203]
                0.00    0.00      13/217         trig::Vector2<float>::operator+=(trig::Vector2<float> const&) [573]
-----------------------------------------------
                0.00    0.00      13/13          std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [598]
[596]    0.0    0.00    0.00      13         std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**) [596]
-----------------------------------------------
                0.00    0.00      13/13          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long long) [578]
[597]    0.0    0.00    0.00      13         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long long, bool) [597]
                0.00    0.00      26/185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
                0.00    0.00      13/13          std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [600]
-----------------------------------------------
                0.00    0.00      13/13          std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [599]
[598]    0.0    0.00    0.00      13         std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [598]
                0.00    0.00      13/13          std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**) [596]
-----------------------------------------------
                0.00    0.00      13/13          std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [600]
[599]    0.0    0.00    0.00      13         std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [599]
                0.00    0.00      39/39          std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**) [588]
                0.00    0.00      13/13          std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [598]
-----------------------------------------------
                0.00    0.00      13/13          std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long long, bool) [597]
[600]    0.0    0.00    0.00      13         std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [600]
                0.00    0.00      26/26          std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**) [591]
                0.00    0.00      13/13          std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**) [599]
-----------------------------------------------
                0.00    0.00      12/12          std::move_iterator<std::thread*> std::__make_move_if_noexcept_iterator<std::thread, std::move_iterator<std::thread*> >(std::thread*) [603]
[601]    0.0    0.00    0.00      12         std::move_iterator<std::thread*>::move_iterator(std::thread*) [601]
-----------------------------------------------
                0.00    0.00       3/12          std::thread::thread(std::thread&&) [692]
                0.00    0.00       3/12          std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
                0.00    0.00       6/12          std::thread::joinable() const [616]
[602]    0.0    0.00    0.00      12         std::thread::id::id() [602]
-----------------------------------------------
                0.00    0.00      12/12          std::thread* std::__uninitialized_move_if_noexcept_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [633]
[603]    0.0    0.00    0.00      12         std::move_iterator<std::thread*> std::__make_move_if_noexcept_iterator<std::thread, std::move_iterator<std::thread*> >(std::thread*) [603]
                0.00    0.00      12/12          std::move_iterator<std::thread*>::move_iterator(std::thread*) [601]
-----------------------------------------------
                0.00    0.00       1/10          std::vector<std::thread, std::allocator<std::thread> >::~vector() [828]
                0.00    0.00       9/10          void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[604]    0.0    0.00    0.00      10         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [604]
-----------------------------------------------
                0.00    0.00       3/9           __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long long, void const*) [652]
                0.00    0.00       6/9           std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [627]
[605]    0.0    0.00    0.00       9         __gnu_cxx::new_allocator<std::thread>::max_size() const [605]
-----------------------------------------------
                0.00    0.00       3/9           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() [675]
                0.00    0.00       6/9           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() [676]
[606]    0.0    0.00    0.00       9         std::_Bit_iterator::_Bit_iterator() [606]
                0.00    0.00       9/5334303     std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [187]
-----------------------------------------------
                0.00    0.00       3/9           std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
                0.00    0.00       6/9           void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [644]
[607]    0.0    0.00    0.00       9         std::thread* std::__addressof<std::thread>(std::thread&) [607]
-----------------------------------------------
                0.00    0.00       9/9           std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [706]
[608]    0.0    0.00    0.00       9         std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&) [608]
-----------------------------------------------
                0.00    0.00       9/9           bool std::operator!=<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&) [610]
[609]    0.0    0.00    0.00       9         bool std::operator==<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&) [609]
                0.00    0.00      18/18          std::move_iterator<std::thread*>::base() const [593]
-----------------------------------------------
                0.00    0.00       9/9           std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
[610]    0.0    0.00    0.00       9         bool std::operator!=<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&) [610]
                0.00    0.00       9/9           bool std::operator==<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&) [609]
-----------------------------------------------
                0.00    0.00       8/8           World::update() <cycle 1> [757]
[611]    0.0    0.00    0.00       8         Camera::move_right(float) [611]
                0.00    0.00      16/285610      trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00       8/247519      trig::Vector2<float>::Vector2(float) [203]
                0.00    0.00       8/217         trig::Vector2<float>::operator+=(trig::Vector2<float> const&) [573]
-----------------------------------------------
                0.00    0.00       8/8           World::update() <cycle 1> [757]
[612]    0.0    0.00    0.00       8         Camera::move_left(float) [612]
                0.00    0.00      16/285610      trig::Vector2<float>::operator*(float) const [200]
                0.00    0.00       8/247519      trig::Vector2<float>::Vector2(float) [203]
                0.00    0.00       8/217         trig::Vector2<float>::operator+=(trig::Vector2<float> const&) [573]
-----------------------------------------------
                0.00    0.00       1/7           ThreadPool::stop() [746]
                0.00    0.00       3/7           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
                0.00    0.00       3/7           std::vector<std::thread, std::allocator<std::thread> >::back() [696]
[613]    0.0    0.00    0.00       7         std::vector<std::thread, std::allocator<std::thread> >::end() [613]
                0.00    0.00       7/14          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [594]
-----------------------------------------------
                0.00    0.00       3/6           ThreadPool::stop() [746]
                0.00    0.00       3/6           std::vector<std::thread, std::allocator<std::thread> >::back() [696]
[614]    0.0    0.00    0.00       6         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [614]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::max_size() const [617]
[615]    0.0    0.00    0.00       6         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [615]
-----------------------------------------------
                0.00    0.00       6/6           std::thread::~thread() [629]
[616]    0.0    0.00    0.00       6         std::thread::joinable() const [616]
                0.00    0.00       6/12          std::thread::id::id() [602]
                0.00    0.00       6/6           std::operator==(std::thread::id, std::thread::id) [638]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const [660]
[617]    0.0    0.00    0.00       6         std::vector<std::thread, std::allocator<std::thread> >::max_size() const [617]
                0.00    0.00       6/6           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [615]
                0.00    0.00       6/6           std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [627]
-----------------------------------------------
                0.00    0.00       6/6           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_head(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [623]
[618]    0.0    0.00    0.00       6         std::_Head_base<0ull, void (ThreadPool::*)(), false>::_M_head(std::_Head_base<0ull, void (ThreadPool::*)(), false>&) [618]
-----------------------------------------------
                0.00    0.00       3/6           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
                0.00    0.00       3/6           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [668]
[619]    0.0    0.00    0.00       6         std::_Head_base<0ull, void (ThreadPool::*)(), false>::_Head_base<void (ThreadPool::*)()>(void (ThreadPool::*&&)()) [619]
                0.00    0.00       6/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
-----------------------------------------------
                0.00    0.00       6/6           std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [624]
[620]    0.0    0.00    0.00       6         std::_Head_base<0ull, std::thread::_State*, false>::_M_head(std::_Head_base<0ull, std::thread::_State*, false>&) [620]
-----------------------------------------------
                0.00    0.00       6/6           std::_Tuple_impl<1ull, ThreadPool*>::_M_head(std::_Tuple_impl<1ull, ThreadPool*>&) [625]
[621]    0.0    0.00    0.00       6         std::_Head_base<1ull, ThreadPool*, false>::_M_head(std::_Head_base<1ull, ThreadPool*, false>&) [621]
-----------------------------------------------
                0.00    0.00       3/6           std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&) [670]
                0.00    0.00       3/6           std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl<ThreadPool*>(ThreadPool*&&) [671]
[622]    0.0    0.00    0.00       6         std::_Head_base<1ull, ThreadPool*, false>::_Head_base<ThreadPool*>(ThreadPool*&&) [622]
                0.00    0.00       6/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
-----------------------------------------------
                0.00    0.00       3/6           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
                0.00    0.00       3/6           void (ThreadPool::*&std::__get_helper<0ull, void (ThreadPool::*)(), ThreadPool*>(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&))() [699]
[623]    0.0    0.00    0.00       6         std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_head(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [623]
                0.00    0.00       6/6           std::_Head_base<0ull, void (ThreadPool::*)(), false>::_M_head(std::_Head_base<0ull, void (ThreadPool::*)(), false>&) [618]
-----------------------------------------------
                0.00    0.00       6/6           std::thread::_State*& std::__get_helper<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [630]
[624]    0.0    0.00    0.00       6         std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [624]
                0.00    0.00       6/6           std::_Head_base<0ull, std::thread::_State*, false>::_M_head(std::_Head_base<0ull, std::thread::_State*, false>&) [620]
-----------------------------------------------
                0.00    0.00       3/6           std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&) [670]
                0.00    0.00       3/6           ThreadPool*& std::__get_helper<1ull, ThreadPool*>(std::_Tuple_impl<1ull, ThreadPool*>&) [700]
[625]    0.0    0.00    0.00       6         std::_Tuple_impl<1ull, ThreadPool*>::_M_head(std::_Tuple_impl<1ull, ThreadPool*>&) [625]
                0.00    0.00       6/6           std::_Head_base<1ull, ThreadPool*, false>::_M_head(std::_Head_base<1ull, ThreadPool*, false>&) [621]
-----------------------------------------------
                0.00    0.00       3/6           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [665]
                0.00    0.00       3/6           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [679]
[626]    0.0    0.00    0.00       6         std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [626]
                0.00    0.00       6/6           std::tuple_element<0ull, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&) [634]
-----------------------------------------------
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::max_size() const [617]
[627]    0.0    0.00    0.00       6         std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [627]
                0.00    0.00       6/9           __gnu_cxx::new_allocator<std::thread>::max_size() const [605]
-----------------------------------------------
                0.00    0.00       6/6           std::thread* std::uninitialized_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [631]
[628]    0.0    0.00    0.00       6         std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
                0.00    0.00       9/9           bool std::operator!=<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&) [610]
                0.00    0.00       3/3           std::move_iterator<std::thread*>::operator*() const [659]
                0.00    0.00       3/9           std::thread* std::__addressof<std::thread>(std::thread&) [607]
                0.00    0.00       3/3           void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&) [698]
                0.00    0.00       3/3           std::move_iterator<std::thread*>::operator++() [678]
-----------------------------------------------
                0.00    0.00       6/6           void std::_Destroy<std::thread>(std::thread*) [637]
[629]    0.0    0.00    0.00       6         std::thread::~thread() [629]
                0.00    0.00       6/6           std::thread::joinable() const [616]
-----------------------------------------------
                0.00    0.00       6/6           std::tuple_element<0ull, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&) [634]
[630]    0.0    0.00    0.00       6         std::thread::_State*& std::__get_helper<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [630]
                0.00    0.00       6/6           std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [624]
-----------------------------------------------
                0.00    0.00       6/6           std::thread* std::__uninitialized_copy_a<std::move_iterator<std::thread*>, std::thread*, std::thread>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*, std::allocator<std::thread>&) [632]
[631]    0.0    0.00    0.00       6         std::thread* std::uninitialized_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [631]
                0.00    0.00       6/6           std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
-----------------------------------------------
                0.00    0.00       6/6           std::thread* std::__uninitialized_move_if_noexcept_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [633]
[632]    0.0    0.00    0.00       6         std::thread* std::__uninitialized_copy_a<std::move_iterator<std::thread*>, std::thread*, std::thread>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*, std::allocator<std::thread>&) [632]
                0.00    0.00       6/6           std::thread* std::uninitialized_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [631]
-----------------------------------------------
                0.00    0.00       6/6           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[633]    0.0    0.00    0.00       6         std::thread* std::__uninitialized_move_if_noexcept_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [633]
                0.00    0.00      12/12          std::move_iterator<std::thread*> std::__make_move_if_noexcept_iterator<std::thread, std::move_iterator<std::thread*> >(std::thread*) [603]
                0.00    0.00       6/6           std::thread* std::__uninitialized_copy_a<std::move_iterator<std::thread*>, std::thread*, std::thread>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*, std::allocator<std::thread>&) [632]
-----------------------------------------------
                0.00    0.00       6/6           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [626]
[634]    0.0    0.00    0.00       6         std::tuple_element<0ull, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&) [634]
                0.00    0.00       6/6           std::thread::_State*& std::__get_helper<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [630]
-----------------------------------------------
                0.00    0.00       6/6           decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>) [22]
[635]    0.0    0.00    0.00       6         std::remove_reference<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>::type&& std::move<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [635]
-----------------------------------------------
                0.00    0.00       3/6           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [686]
                0.00    0.00       3/6           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [687]
[636]    0.0    0.00    0.00       6         std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&& std::forward<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::remove_reference<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::type&) [636]
-----------------------------------------------
                0.00    0.00       6/6           void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [644]
[637]    0.0    0.00    0.00       6         void std::_Destroy<std::thread>(std::thread*) [637]
                0.00    0.00       6/6           std::thread::~thread() [629]
-----------------------------------------------
                0.00    0.00       6/6           std::thread::joinable() const [616]
[638]    0.0    0.00    0.00       6         std::operator==(std::thread::id, std::thread::id) [638]
-----------------------------------------------
                0.00    0.00       2/5           std::allocator<unsigned long>::~allocator() [731]
                0.00    0.00       3/5           std::allocator<unsigned long>::~allocator() [661]
[639]    0.0    0.00    0.00       5         __gnu_cxx::new_allocator<unsigned long>::~new_allocator() [639]
-----------------------------------------------
                0.00    0.00       1/5           ThreadPool::stop() [746]
                0.00    0.00       1/5           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::~_State_impl() [1091]
                0.00    0.00       3/5           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[640]    0.0    0.00    0.00       5         std::vector<std::thread, std::allocator<std::thread> >::begin() [640]
                0.00    0.00       4/14          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [594]
-----------------------------------------------
                0.00    0.00       2/5           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
                0.00    0.00       3/5           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const [658]
[641]    0.0    0.00    0.00       5         unsigned long* std::__addressof<unsigned long>(unsigned long&) [641]
-----------------------------------------------
                0.00    0.00       4/4           ThreadPool::stop() [746]
[642]    0.0    0.00    0.00       4         bool __gnu_cxx::operator!=<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [642]
                0.00    0.00       8/20          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [592]
-----------------------------------------------
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [778]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long) [835]
                0.00    0.00       1/4           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long) [843]
[643]    0.0    0.00    0.00       4         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [643]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<std::thread*>(std::thread*, std::thread*) [649]
[644]    0.0    0.00    0.00       4         void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [644]
                0.00    0.00       6/9           std::thread* std::__addressof<std::thread>(std::thread&) [607]
                0.00    0.00       6/6           void std::_Destroy<std::thread>(std::thread*) [637]
-----------------------------------------------
                0.00    0.00       1/4           std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [807]
                0.00    0.00       3/4           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[645]    0.0    0.00    0.00       4         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long long) [645]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long long) [680]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
                0.00    0.00       3/4           std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() [677]
[646]    0.0    0.00    0.00       4         std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [646]
                0.00    0.00       2/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const [658]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<unsigned long> >::deallocate(std::allocator<unsigned long>&, unsigned long*, unsigned long long) [739]
                0.00    0.00       2/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() [675]
-----------------------------------------------
                0.00    0.00       2/4           std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long long) [734]
                0.00    0.00       2/4           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
[647]    0.0    0.00    0.00       4         std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long long) [647]
-----------------------------------------------
                0.00    0.00       1/4           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
                0.00    0.00       3/4           std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const [660]
[648]    0.0    0.00    0.00       4         unsigned long long const& std::max<unsigned long long>(unsigned long long const&, unsigned long long const&) [648]
-----------------------------------------------
                0.00    0.00       4/4           void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [650]
[649]    0.0    0.00    0.00       4         void std::_Destroy<std::thread*>(std::thread*, std::thread*) [649]
                0.00    0.00       4/4           void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [644]
-----------------------------------------------
                0.00    0.00       1/4           std::vector<std::thread, std::allocator<std::thread> >::~vector() [828]
                0.00    0.00       3/4           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[650]    0.0    0.00    0.00       4         void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [650]
                0.00    0.00       4/4           void std::_Destroy<std::thread*>(std::thread*, std::thread*) [649]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long long) [680]
[651]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long long) [651]
-----------------------------------------------
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long long) [681]
[652]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long long, void const*) [652]
                0.00    0.00       3/9           __gnu_cxx::new_allocator<std::thread>::max_size() const [605]
-----------------------------------------------
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [682]
[653]    0.0    0.00    0.00       3         void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [653]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00       3/3           std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
-----------------------------------------------
                0.00    0.00       1/3           std::allocator<unsigned long>::allocator() [789]
                0.00    0.00       2/3           std::allocator<unsigned long>::allocator<bool>(std::allocator<bool> const&) [729]
[654]    0.0    0.00    0.00       3         __gnu_cxx::new_allocator<unsigned long>::new_allocator() [654]
-----------------------------------------------
                0.00    0.00       3/3           ThreadPool::stop() [746]
[655]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++() [655]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[656]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [656]
                0.00    0.00       6/20          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [592]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<std::thread, std::allocator<std::thread> >::back() [696]
[657]    0.0    0.00    0.00       3         __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long long) const [657]
                0.00    0.00       3/14          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [594]
-----------------------------------------------
                0.00    0.00       1/3           std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool) [830]
                0.00    0.00       2/3           std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [646]
[658]    0.0    0.00    0.00       3         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const [658]
                0.00    0.00       3/5           unsigned long* std::__addressof<unsigned long>(unsigned long&) [641]
-----------------------------------------------
                0.00    0.00       3/3           std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
[659]    0.0    0.00    0.00       3         std::move_iterator<std::thread*>::operator*() const [659]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[660]    0.0    0.00    0.00       3         std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const [660]
                0.00    0.00      12/305         std::vector<std::thread, std::allocator<std::thread> >::size() const [536]
                0.00    0.00       6/6           std::vector<std::thread, std::allocator<std::thread> >::max_size() const [617]
                0.00    0.00       3/4           unsigned long long const& std::max<unsigned long long>(unsigned long long const&, unsigned long long const&) [648]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl() [674]
[661]    0.0    0.00    0.00       3         std::allocator<unsigned long>::~allocator() [661]
                0.00    0.00       3/5           __gnu_cxx::new_allocator<unsigned long>::~new_allocator() [639]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [669]
[662]    0.0    0.00    0.00       3         std::_Head_base<0ull, std::thread::_State*, false>::_Head_base() [662]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<1ull, std::default_delete<std::thread::_State> >::_Tuple_impl() [672]
[663]    0.0    0.00    0.00       3         std::_Head_base<1ull, std::default_delete<std::thread::_State>, true>::_Head_base() [663]
-----------------------------------------------
                0.00    0.00       3/3           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [687]
[664]    0.0    0.00    0.00       3         std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [664]
                0.00    0.00       3/3           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [679]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
[665]    0.0    0.00    0.00       3         std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [665]
                0.00    0.00       3/6           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [626]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
[666]    0.0    0.00    0.00       3         std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_tail(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [666]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [683]
[667]    0.0    0.00    0.00       3         std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_tail(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [666]
                0.00    0.00       3/3           std::remove_reference<std::_Tuple_impl<1ull, ThreadPool*>&>::type&& std::move<std::_Tuple_impl<1ull, ThreadPool*>&>(std::_Tuple_impl<1ull, ThreadPool*>&) [705]
                0.00    0.00       3/3           std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&) [670]
                0.00    0.00       3/6           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_head(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [623]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/6           std::_Head_base<0ull, void (ThreadPool::*)(), false>::_Head_base<void (ThreadPool::*)()>(void (ThreadPool::*&&)()) [619]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&) [684]
[668]    0.0    0.00    0.00       3         std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [668]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/3           std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl<ThreadPool*>(ThreadPool*&&) [671]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/6           std::_Head_base<0ull, void (ThreadPool::*)(), false>::_Head_base<void (ThreadPool::*)()>(void (ThreadPool::*&&)()) [619]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<std::thread::_State*, std::default_delete<std::thread::_State>, true>() [685]
[669]    0.0    0.00    0.00       3         std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [669]
                0.00    0.00       3/3           std::_Tuple_impl<1ull, std::default_delete<std::thread::_State> >::_Tuple_impl() [672]
                0.00    0.00       3/3           std::_Head_base<0ull, std::thread::_State*, false>::_Head_base() [662]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
[670]    0.0    0.00    0.00       3         std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&) [670]
                0.00    0.00       3/6           std::_Tuple_impl<1ull, ThreadPool*>::_M_head(std::_Tuple_impl<1ull, ThreadPool*>&) [625]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/6           std::_Head_base<1ull, ThreadPool*, false>::_Head_base<ThreadPool*>(ThreadPool*&&) [622]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [668]
[671]    0.0    0.00    0.00       3         std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl<ThreadPool*>(ThreadPool*&&) [671]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/6           std::_Head_base<1ull, ThreadPool*, false>::_Head_base<ThreadPool*>(ThreadPool*&&) [622]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [669]
[672]    0.0    0.00    0.00       3         std::_Tuple_impl<1ull, std::default_delete<std::thread::_State> >::_Tuple_impl() [672]
                0.00    0.00       3/3           std::_Head_base<1ull, std::default_delete<std::thread::_State>, true>::_Head_base() [663]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[673]    0.0    0.00    0.00       3         std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long long) [673]
                0.00    0.00       3/3           std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long long) [681]
-----------------------------------------------
                0.00    0.00       3/3           std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() [677]
[674]    0.0    0.00    0.00       3         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl() [674]
                0.00    0.00       3/3           std::allocator<unsigned long>::~allocator() [661]
-----------------------------------------------
                0.00    0.00       1/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_move_data(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data&&) [810]
                0.00    0.00       2/3           std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [646]
[675]    0.0    0.00    0.00       3         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() [675]
                0.00    0.00       3/9           std::_Bit_iterator::_Bit_iterator() [606]
-----------------------------------------------
                0.00    0.00       1/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl() [809]
                0.00    0.00       2/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) [735]
[676]    0.0    0.00    0.00       3         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() [676]
                0.00    0.00       6/9           std::_Bit_iterator::_Bit_iterator() [606]
-----------------------------------------------
                0.00    0.00       3/3           std::vector<bool, std::allocator<bool> >::~vector() [697]
[677]    0.0    0.00    0.00       3         std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() [677]
                0.00    0.00       3/4           std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [646]
                0.00    0.00       3/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl() [674]
-----------------------------------------------
                0.00    0.00       3/3           std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
[678]    0.0    0.00    0.00       3         std::move_iterator<std::thread*>::operator++() [678]
-----------------------------------------------
                0.00    0.00       3/3           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [664]
[679]    0.0    0.00    0.00       3         std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [679]
                0.00    0.00       3/3           std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<std::thread::_State*, std::default_delete<std::thread::_State>, true>() [685]
                0.00    0.00       3/6           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [626]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long long) [645]
[680]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long long) [680]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long long) [651]
-----------------------------------------------
                0.00    0.00       3/3           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long long) [673]
[681]    0.0    0.00    0.00       3         std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long long) [681]
                0.00    0.00       3/3           __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long long, void const*) [652]
-----------------------------------------------
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
[682]    0.0    0.00    0.00       3         void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [682]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [653]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_Invoker(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [691]
[683]    0.0    0.00    0.00       3         std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [683]
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [688]
[684]    0.0    0.00    0.00       3         std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&) [684]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [668]
-----------------------------------------------
                0.00    0.00       3/3           std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [679]
[685]    0.0    0.00    0.00       3         std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<std::thread::_State*, std::default_delete<std::thread::_State>, true>() [685]
                0.00    0.00       3/3           std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [669]
-----------------------------------------------
                0.00    0.00       3/3           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [687]
[686]    0.0    0.00    0.00       3         std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [686]
                0.00    0.00       3/3           std::thread::_State::_State() [690]
                0.00    0.00       3/6           std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&& std::forward<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::remove_reference<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::type&) [636]
                0.00    0.00       3/3           std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_Invoker(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [691]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
[687]    0.0    0.00    0.00       3         std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [687]
                0.00    0.00       3/6           std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&& std::forward<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::remove_reference<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::type&) [636]
                0.00    0.00       3/3           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [686]
                0.00    0.00       3/3           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [664]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
[688]    0.0    0.00    0.00       3         std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [688]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/3           std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&) [684]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::thread(std::thread&&) [692]
[689]    0.0    0.00    0.00       3         std::thread::swap(std::thread&) [689]
                0.00    0.00       3/3           std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [706]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [686]
[690]    0.0    0.00    0.00       3         std::thread::_State::_State() [690]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [686]
[691]    0.0    0.00    0.00       3         std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_Invoker(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [691]
                0.00    0.00       3/3           std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [683]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&) [698]
[692]    0.0    0.00    0.00       3         std::thread::thread(std::thread&&) [692]
                0.00    0.00       3/12          std::thread::id::id() [602]
                0.00    0.00       3/3           std::thread::swap(std::thread&) [689]
-----------------------------------------------
                0.00    0.00       3/3           void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [653]
[693]    0.0    0.00    0.00       3         std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [693]
                0.00    0.00       3/12          std::thread::id::id() [602]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/3           std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [688]
                0.00    0.00       3/3           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&) [687]
                0.00    0.00       3/3           std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [665]
-----------------------------------------------
                0.00    0.00       3/3           ThreadPool::start(unsigned int) [747]
[694]    0.0    0.00    0.00       3         std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/7           std::vector<std::thread, std::allocator<std::thread> >::end() [613]
                0.00    0.00       3/3           void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
                0.00    0.00       3/3           std::vector<std::thread, std::allocator<std::thread> >::back() [696]
-----------------------------------------------
                0.00    0.00       3/3           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
[695]    0.0    0.00    0.00       3         void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&) [695]
                0.00    0.00       9/10          std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [604]
                0.00    0.00       6/20          __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [592]
                0.00    0.00       6/6           std::thread* std::__uninitialized_move_if_noexcept_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&) [633]
                0.00    0.00       3/3           std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const [660]
                0.00    0.00       3/5           std::vector<std::thread, std::allocator<std::thread> >::begin() [640]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [656]
                0.00    0.00       3/3           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long long) [673]
                0.00    0.00       3/42          ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&) [587]
                0.00    0.00       3/36          void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))() [589]
                0.00    0.00       3/3           void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [682]
                0.00    0.00       3/4           void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [650]
                0.00    0.00       3/4           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long long) [645]
-----------------------------------------------
                0.00    0.00       3/3           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
[696]    0.0    0.00    0.00       3         std::vector<std::thread, std::allocator<std::thread> >::back() [696]
                0.00    0.00       3/7           std::vector<std::thread, std::allocator<std::thread> >::end() [613]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long long) const [657]
                0.00    0.00       3/6           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [614]
-----------------------------------------------
                0.00    0.00       1/3           MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00       2/3           DynamicGrid<bool>::~DynamicGrid() [710]
[697]    0.0    0.00    0.00       3         std::vector<bool, std::allocator<bool> >::~vector() [697]
                0.00    0.00       3/3           std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() [677]
-----------------------------------------------
                0.00    0.00       3/3           std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [628]
[698]    0.0    0.00    0.00       3         void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&) [698]
                0.00    0.00       3/3           std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&) [709]
                0.00    0.00       3/6850        operator new(unsigned long long, void*) [213]
                0.00    0.00       3/3           std::thread::thread(std::thread&&) [692]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [702]
[699]    0.0    0.00    0.00       3         void (ThreadPool::*&std::__get_helper<0ull, void (ThreadPool::*)(), ThreadPool*>(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&))() [699]
                0.00    0.00       3/6           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_head(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [623]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [704]
[700]    0.0    0.00    0.00       3         ThreadPool*& std::__get_helper<1ull, ThreadPool*>(std::_Tuple_impl<1ull, ThreadPool*>&) [700]
                0.00    0.00       3/6           std::_Tuple_impl<1ull, ThreadPool*>::_M_head(std::_Tuple_impl<1ull, ThreadPool*>&) [625]
-----------------------------------------------
                0.00    0.00       3/3           decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>) [22]
[701]    0.0    0.00    0.00       3         std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [701]
                0.00    0.00       3/3           std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [702]
                0.00    0.00       3/3           void (ThreadPool::*&&std::forward<void (ThreadPool::*&&)()>(std::remove_reference<void (ThreadPool::*&&)()>::type&))() [707]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [701]
[702]    0.0    0.00    0.00       3         std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [702]
                0.00    0.00       3/3           void (ThreadPool::*&std::__get_helper<0ull, void (ThreadPool::*)(), ThreadPool*>(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&))() [699]
-----------------------------------------------
                0.00    0.00       3/3           decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>) [22]
[703]    0.0    0.00    0.00       3         std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [703]
                0.00    0.00       3/3           std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [704]
                0.00    0.00       3/3           ThreadPool*&& std::forward<ThreadPool*&&>(std::remove_reference<ThreadPool*&&>::type&) [708]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [703]
[704]    0.0    0.00    0.00       3         std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&) [704]
                0.00    0.00       3/3           ThreadPool*& std::__get_helper<1ull, ThreadPool*>(std::_Tuple_impl<1ull, ThreadPool*>&) [700]
-----------------------------------------------
                0.00    0.00       3/3           std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [667]
[705]    0.0    0.00    0.00       3         std::remove_reference<std::_Tuple_impl<1ull, ThreadPool*>&>::type&& std::move<std::_Tuple_impl<1ull, ThreadPool*>&>(std::_Tuple_impl<1ull, ThreadPool*>&) [705]
-----------------------------------------------
                0.00    0.00       3/3           std::thread::swap(std::thread&) [689]
[706]    0.0    0.00    0.00       3         std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&) [706]
                0.00    0.00       9/9           std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&) [608]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [701]
[707]    0.0    0.00    0.00       3         void (ThreadPool::*&&std::forward<void (ThreadPool::*&&)()>(std::remove_reference<void (ThreadPool::*&&)()>::type&))() [707]
-----------------------------------------------
                0.00    0.00       3/3           std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&) [703]
[708]    0.0    0.00    0.00       3         ThreadPool*&& std::forward<ThreadPool*&&>(std::remove_reference<ThreadPool*&&>::type&) [708]
-----------------------------------------------
                0.00    0.00       3/3           void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&) [698]
[709]    0.0    0.00    0.00       3         std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&) [709]
-----------------------------------------------
                0.00    0.00       1/2           MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00       1/2           MyWorld::~MyWorld() [762]
[710]    0.0    0.00    0.00       2         DynamicGrid<bool>::~DynamicGrid() [710]
                0.00    0.00       2/3           std::vector<bool, std::allocator<bool> >::~vector() [697]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [725]
[711]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator() [711]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<std::function<void ()>*>::~allocator() [726]
[712]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<std::function<void ()>*>::~new_allocator() [712]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<bool>::allocator() [727]
[713]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<bool>::new_allocator() [713]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<bool>::~allocator() [728]
[714]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<bool>::~new_allocator() [714]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<unsigned long> >::deallocate(std::allocator<unsigned long>&, unsigned long*, unsigned long long) [739]
[715]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<unsigned long>::deallocate(unsigned long*, unsigned long long) [715]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator_traits<std::allocator<unsigned long> >::allocate(std::allocator<unsigned long>&, unsigned long long) [740]
[716]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long long, void const*) [716]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<unsigned long>::max_size() const [719]
-----------------------------------------------
                0.00    0.00       2/2           std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&) [730]
[717]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<unsigned long>::new_allocator(__gnu_cxx::new_allocator<unsigned long> const&) [717]
-----------------------------------------------
                0.00    0.00       1/2           __gnu_cxx::new_allocator<char>::allocate(unsigned long long, void const*) [770]
                0.00    0.00       1/2           std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [819]
[718]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<char>::max_size() const [718]
-----------------------------------------------
                0.00    0.00       2/2           __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long long, void const*) [716]
[719]    0.0    0.00    0.00       2         __gnu_cxx::new_allocator<unsigned long>::max_size() const [719]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [721]
[720]    0.0    0.00    0.00       2         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [720]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long) [792]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long) [795]
[721]    0.0    0.00    0.00       2         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [721]
                0.00    0.00       2/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [720]
                0.00    0.00       2/2           std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [725]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
[722]    0.0    0.00    0.00       2         std::_Bit_iterator::operator+(long long) const [722]
                0.00    0.00       2/2           std::_Bit_iterator::operator+=(long long) [733]
-----------------------------------------------
                0.00    0.00       1/2           std::initializer_list<bool>::end() const [776]
                0.00    0.00       1/2           std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&) [831]
[723]    0.0    0.00    0.00       2         std::initializer_list<bool>::begin() const [723]
-----------------------------------------------
                0.00    0.00       1/2           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_is_local() const [782]
                0.00    0.00       1/2           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long) [852]
[724]    0.0    0.00    0.00       2         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_data() const [724]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [721]
[725]    0.0    0.00    0.00       2         std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [725]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator() [711]
-----------------------------------------------
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long) [792]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long) [795]
[726]    0.0    0.00    0.00       2         std::allocator<std::function<void ()>*>::~allocator() [726]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<std::function<void ()>*>::~new_allocator() [712]
-----------------------------------------------
                0.00    0.00       1/2           DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int) [750]
                0.00    0.00       1/2           MyWorld::MyWorld(int, int, int) [761]
[727]    0.0    0.00    0.00       2         std::allocator<bool>::allocator() [727]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<bool>::new_allocator() [713]
-----------------------------------------------
                0.00    0.00       1/2           DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int) [750]
                0.00    0.00       1/2           MyWorld::MyWorld(int, int, int) [761]
[728]    0.0    0.00    0.00       2         std::allocator<bool>::~allocator() [728]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<bool>::~new_allocator() [714]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [737]
[729]    0.0    0.00    0.00       2         std::allocator<unsigned long>::allocator<bool>(std::allocator<bool> const&) [729]
                0.00    0.00       2/3           __gnu_cxx::new_allocator<unsigned long>::new_allocator() [654]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) [735]
[730]    0.0    0.00    0.00       2         std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&) [730]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<unsigned long>::new_allocator(__gnu_cxx::new_allocator<unsigned long> const&) [717]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [737]
[731]    0.0    0.00    0.00       2         std::allocator<unsigned long>::~allocator() [731]
                0.00    0.00       2/5           __gnu_cxx::new_allocator<unsigned long>::~new_allocator() [639]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
[732]    0.0    0.00    0.00       2         std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) [732]
                0.00    0.00       2/5334303     std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [187]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bit_iterator::operator+(long long) const [722]
[733]    0.0    0.00    0.00       2         std::_Bit_iterator::operator+=(long long) [733]
                0.00    0.00       2/2           std::_Bit_iterator_base::_M_incr(long long) [741]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
[734]    0.0    0.00    0.00       2         std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long long) [734]
                0.00    0.00       2/4           std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long long) [647]
                0.00    0.00       2/2           std::allocator_traits<std::allocator<unsigned long> >::allocate(std::allocator<unsigned long>&, unsigned long long) [740]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [737]
[735]    0.0    0.00    0.00       2         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) [735]
                0.00    0.00       2/2           std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&) [730]
                0.00    0.00       2/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() [676]
-----------------------------------------------
                0.00    0.00       2/2           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
[736]    0.0    0.00    0.00       2         std::_Bvector_base<std::allocator<bool> >::_M_get_Bit_allocator() [736]
-----------------------------------------------
                0.00    0.00       1/2           std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&) [831]
                0.00    0.00       1/2           std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&) [833]
[737]    0.0    0.00    0.00       2         std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [737]
                0.00    0.00       2/2           std::allocator<unsigned long>::allocator<bool>(std::allocator<bool> const&) [729]
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) [735]
                0.00    0.00       2/2           std::allocator<unsigned long>::~allocator() [731]
-----------------------------------------------
                0.00    0.00       2/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [790]
[738]    0.0    0.00    0.00       2         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [738]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [646]
[739]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<unsigned long> >::deallocate(std::allocator<unsigned long>&, unsigned long*, unsigned long long) [739]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<unsigned long>::deallocate(unsigned long*, unsigned long long) [715]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long long) [734]
[740]    0.0    0.00    0.00       2         std::allocator_traits<std::allocator<unsigned long> >::allocate(std::allocator<unsigned long>&, unsigned long long) [740]
                0.00    0.00       2/2           __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long long, void const*) [716]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bit_iterator::operator+=(long long) [733]
[741]    0.0    0.00    0.00       2         std::_Bit_iterator_base::_M_incr(long long) [741]
-----------------------------------------------
                0.00    0.00       1/2           void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag) [829]
                0.00    0.00       1/2           std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&) [833]
[742]    0.0    0.00    0.00       2         std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long long) [734]
                0.00    0.00       2/4           std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long long) [647]
                0.00    0.00       2/5           unsigned long* std::__addressof<unsigned long>(unsigned long&) [641]
                0.00    0.00       2/2           std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) [732]
                0.00    0.00       2/2           std::_Bit_iterator::operator+(long long) const [722]
-----------------------------------------------
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long) [835]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long) [848]
[743]    0.0    0.00    0.00       2         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [743]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bit_iterator std::copy<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [869]
[744]    0.0    0.00    0.00       2         bool const* std::__miter_base<bool const*>(bool const*) [744]
-----------------------------------------------
                0.00    0.00       2/2           std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [864]
[745]    0.0    0.00    0.00       2         bool const* std::__niter_base<bool const*>(bool const*) [745]
-----------------------------------------------
                0.00    0.00       1/1           ThreadPool::~ThreadPool() [749]
[746]    0.0    0.00    0.00       1         ThreadPool::stop() [746]
                0.00    0.00       4/4           bool __gnu_cxx::operator!=<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [642]
                0.00    0.00       3/6           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [614]
                0.00    0.00       3/3           __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++() [655]
                0.00    0.00       1/3346        std::unique_lock<std::mutex>::unique_lock(std::mutex&) [251]
                0.00    0.00       1/3293        std::unique_lock<std::mutex>::~unique_lock() [253]
                0.00    0.00       1/5           std::vector<std::thread, std::allocator<std::thread> >::begin() [640]
                0.00    0.00       1/7           std::vector<std::thread, std::allocator<std::thread> >::end() [613]
-----------------------------------------------
                0.00    0.00       1/1           ThreadPool::ThreadPool(unsigned int) [748]
[747]    0.0    0.00    0.00       1         ThreadPool::start(unsigned int) [747]
                0.00    0.00       3/3           std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&) [694]
-----------------------------------------------
                0.00    0.00       1/1           RaycastEngine::RaycastEngine(unsigned int, unsigned int) [754]
[748]    0.0    0.00    0.00       1         ThreadPool::ThreadPool(unsigned int) [748]
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::vector() [827]
                0.00    0.00       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [825]
                0.00    0.00       1/857         std::mutex::mutex() [464]
                0.00    0.00       1/1           ThreadPool::start(unsigned int) [747]
-----------------------------------------------
                0.00    0.00       1/1           RaycastEngine::~RaycastEngine() [755]
[749]    0.0    0.00    0.00       1         ThreadPool::~ThreadPool() [749]
                0.00    0.00       1/1           ThreadPool::stop() [746]
                0.00    0.00       1/858         std::mutex::~mutex() [459]
                0.00    0.00       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [826]
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::~vector() [828]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[750]    0.0    0.00    0.00       1         DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int) [750]
                0.00    0.00       1/2           std::allocator<bool>::allocator() [727]
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&) [833]
                0.00    0.00       1/2           std::allocator<bool>::~allocator() [728]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[751]    0.0    0.00    0.00       1         DynamicGrid<bool>::DynamicGrid() [751]
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector() [832]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[752]    0.0    0.00    0.00       1         DynamicGrid<bool>::operator=(DynamicGrid<bool>&&) [752]
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
-----------------------------------------------
                0.00    0.00       1/1           World::World(int, int, int) [758]
[753]    0.0    0.00    0.00       1         RaycastEngine::set_camera_position(trig::Vector2<float> const&) [753]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[754]    0.0    0.00    0.00       1         RaycastEngine::RaycastEngine(unsigned int, unsigned int) [754]
                0.00    0.00       1/1           Camera::Camera() [760]
                0.00    0.00       1/1           ThreadPool::ThreadPool(unsigned int) [748]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::~MyWorld() [762]
[755]    0.0    0.00    0.00       1         RaycastEngine::~RaycastEngine() [755]
                0.00    0.00       1/1161        sf::Sprite::~Sprite() [387]
                0.00    0.00       1/1           ThreadPool::~ThreadPool() [749]
-----------------------------------------------
                0.00    0.00       1/1           World::World(int, int, int) [758]
[756]    0.0    0.00    0.00       1         sf::String::~String() [756]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::~basic_string() [856]
-----------------------------------------------
                                   1             main <cycle 1> [101]
[757]    0.0    0.00    0.00       1         World::update() <cycle 1> [757]
                0.00    0.00     293/293         RaycastEngine::get_camera_pointer() [537]
                0.00    0.00     188/188         Camera::move_forward(float) [574]
                0.00    0.00      43/43          Camera::rotate_right(float) [586]
                0.00    0.00      26/26          Camera::rotate_left(float) [590]
                0.00    0.00      13/13          Camera::move_backward(float) [595]
                0.00    0.00       8/8           Camera::move_left(float) [612]
                0.00    0.00       8/8           Camera::move_right(float) [611]
                                 293             RaycastEngine::multi_render(sf::RenderWindow&) <cycle 1> [3]
-----------------------------------------------
                0.00    0.00       1/1           main <cycle 1> [101]
[758]    0.0    0.00    0.00       1         World::World(int, int, int) [758]
                0.00    0.00       1/237         sf::ContextSettings::ContextSettings(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool) [572]
                0.00    0.00       1/1           sf::String::~String() [756]
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00       1/1625274     trig::Vector2<float>::Vector2(float, float) [195]
                0.00    0.00       1/1           RaycastEngine::set_camera_position(trig::Vector2<float> const&) [753]
-----------------------------------------------
                0.00    0.00       1/1           main <cycle 1> [101]
[759]    0.0    0.00    0.00       1         World::~World() [759]
                0.00    0.00       1/1           MyWorld::~MyWorld() [762]
-----------------------------------------------
                0.00    0.00       1/1           RaycastEngine::RaycastEngine(unsigned int, unsigned int) [754]
[760]    0.0    0.00    0.00       1         Camera::Camera() [760]
                0.00    0.00       1/1625274     trig::Vector2<float>::Vector2(float, float) [195]
-----------------------------------------------
                0.00    0.00       1/1           World::World(int, int, int) [758]
[761]    0.0    0.00    0.00       1         MyWorld::MyWorld(int, int, int) [761]
                0.00    0.00    1057/5362022     DynamicGrid<bool>::get_width() const [185]
                0.00    0.00    1024/5311844     DynamicGrid<bool>::index(int, int) const [193]
                0.00    0.00      34/5329406     DynamicGrid<bool>::get_height() const [188]
                0.00    0.00       1/1           RaycastEngine::RaycastEngine(unsigned int, unsigned int) [754]
                0.00    0.00       1/1           DynamicGrid<bool>::DynamicGrid() [751]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [850]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [851]
                0.00    0.00       1/2           std::allocator<bool>::allocator() [727]
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&) [831]
                0.00    0.00       1/2           std::allocator<bool>::~allocator() [728]
                0.00    0.00       1/1           DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int) [750]
                0.00    0.00       1/1           DynamicGrid<bool>::operator=(DynamicGrid<bool>&&) [752]
                0.00    0.00       1/2           DynamicGrid<bool>::~DynamicGrid() [710]
                0.00    0.00       1/3           std::vector<bool, std::allocator<bool> >::~vector() [697]
-----------------------------------------------
                0.00    0.00       1/1           World::~World() [759]
[762]    0.0    0.00    0.00       1         MyWorld::~MyWorld() [762]
                0.00    0.00       1/2           DynamicGrid<bool>::~DynamicGrid() [710]
                0.00    0.00       1/1           RaycastEngine::~RaycastEngine() [755]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long long) [815]
[763]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long long) [763]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long long) [816]
[764]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long long, void const*) [764]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::max_size() const [775]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::thread>::allocator() [784]
[765]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::thread>::new_allocator() [765]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::thread>::~allocator() [785]
[766]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::thread>::~new_allocator() [766]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::allocator() [786]
[767]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator() [767]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::~allocator() [787]
[768]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()> >::~new_allocator() [768]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long long) [817]
[769]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long long) [769]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long long) [818]
[770]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<char>::allocate(unsigned long long, void const*) [770]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<char>::max_size() const [718]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long long) [820]
[771]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long long) [771]
-----------------------------------------------
                0.00    0.00       1/1           std::allocator<unsigned int>::~allocator() [788]
[772]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<unsigned int>::~new_allocator() [772]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
[773]    0.0    0.00    0.00       1         __gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::_S_propagate_on_move_assign() [773]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[774]    0.0    0.00    0.00       1         bool __gnu_cxx::__is_null_pointer<char const>(char const*) [774]
-----------------------------------------------
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long long, void const*) [764]
[775]    0.0    0.00    0.00       1         __gnu_cxx::new_allocator<std::function<void ()>*>::max_size() const [775]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&) [831]
[776]    0.0    0.00    0.00       1         std::initializer_list<bool>::end() const [776]
                0.00    0.00       1/2           std::initializer_list<bool>::begin() const [723]
                0.00    0.00       1/1           std::initializer_list<bool>::size() const [777]
-----------------------------------------------
                0.00    0.00       1/1           std::initializer_list<bool>::end() const [776]
[777]    0.0    0.00    0.00       1         std::initializer_list<bool>::size() const [777]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [836]
[778]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [778]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [643]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [779]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [778]
[779]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [779]
                0.00    0.00       1/1           std::pointer_traits<char const*>::pointer_to(char const&) [812]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [781]
[780]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [780]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long) [848]
[781]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [781]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [780]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [819]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_dispose() [853]
[782]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_is_local() const [782]
                0.00    0.00       1/2           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_data() const [724]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_local_data() const [783]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_is_local() const [782]
[783]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_local_data() const [783]
                0.00    0.00       1/1           std::pointer_traits<unsigned int const*>::pointer_to(unsigned int const&) [813]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [804]
[784]    0.0    0.00    0.00       1         std::allocator<std::thread>::allocator() [784]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::thread>::new_allocator() [765]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [805]
[785]    0.0    0.00    0.00       1         std::allocator<std::thread>::~allocator() [785]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::thread>::~new_allocator() [766]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [790]
[786]    0.0    0.00    0.00       1         std::allocator<std::function<void ()> >::allocator() [786]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator() [767]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [791]
[787]    0.0    0.00    0.00       1         std::allocator<std::function<void ()> >::~allocator() [787]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()> >::~new_allocator() [768]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_Alloc_hider::~_Alloc_hider() [854]
[788]    0.0    0.00    0.00       1         std::allocator<unsigned int>::~allocator() [788]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<unsigned int>::~new_allocator() [772]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl() [809]
[789]    0.0    0.00    0.00       1         std::allocator<unsigned long>::allocator() [789]
                0.00    0.00       1/3           __gnu_cxx::new_allocator<unsigned long>::new_allocator() [654]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [797]
[790]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [790]
                0.00    0.00       2/2           std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [738]
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::allocator() [786]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [798]
[791]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [791]
                0.00    0.00       1/1           std::allocator<std::function<void ()> >::~allocator() [787]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
[792]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long) [792]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [721]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long long) [816]
                0.00    0.00       1/2           std::allocator<std::function<void ()>*>::~allocator() [726]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
[793]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [793]
                0.00    0.00       1/54          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [577]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [798]
[794]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [794]
                0.00    0.00       1/52          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [579]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [798]
[795]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long) [795]
                0.00    0.00       1/2           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [721]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long long) [815]
                0.00    0.00       1/2           std::allocator<std::function<void ()>*>::~allocator() [726]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [797]
[796]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
                0.00    0.00       2/291         std::__deque_buf_size(unsigned long long) [567]
                0.00    0.00       2/185         std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [576]
                0.00    0.00       1/4           unsigned long long const& std::max<unsigned long long>(unsigned long long const&, unsigned long long const&) [648]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long) [792]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [793]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [823]
[797]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [797]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [790]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [796]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
[798]    0.0    0.00    0.00       1         std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [798]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [794]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long) [795]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [791]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bit_iterator std::__copy_move_a<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [863]
[799]    0.0    0.00    0.00       1         std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [799]
                0.00    0.00     256/256         std::_Bit_iterator::operator*() const [568]
                0.00    0.00     256/256         std::_Bit_reference::operator=(bool) [570]
                0.00    0.00     256/256         std::_Bit_iterator::operator++() [569]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long long) [847]
[800]    0.0    0.00    0.00       1         std::char_traits<char>::copy(char*, char const*, unsigned long long) [800]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long) [843]
[801]    0.0    0.00    0.00       1         std::char_traits<char>::assign(char&, char const&) [801]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [850]
[802]    0.0    0.00    0.00       1         std::char_traits<char>::length(char const*) [802]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [873]
[803]    0.0    0.00    0.00       1         void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [803]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [806]
[804]    0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [804]
                0.00    0.00       1/1           std::allocator<std::thread>::allocator() [784]
-----------------------------------------------
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [807]
[805]    0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [805]
                0.00    0.00       1/1           std::allocator<std::thread>::~allocator() [785]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::vector() [827]
[806]    0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [806]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [804]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<std::thread, std::allocator<std::thread> >::~vector() [828]
[807]    0.0    0.00    0.00       1         std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [807]
                0.00    0.00       1/4           std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long long) [645]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [805]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
[808]    0.0    0.00    0.00       1         std::_Bvector_base<std::allocator<bool> >::_M_move_data(std::_Bvector_base<std::allocator<bool> >&&) [808]
                0.00    0.00       1/1           std::remove_reference<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>::type&& std::move<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&) [870]
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_move_data(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data&&) [810]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_Bvector_base() [811]
[809]    0.0    0.00    0.00       1         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl() [809]
                0.00    0.00       1/1           std::allocator<unsigned long>::allocator() [789]
                0.00    0.00       1/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() [676]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_M_move_data(std::_Bvector_base<std::allocator<bool> >&&) [808]
[810]    0.0    0.00    0.00       1         std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_move_data(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data&&) [810]
                0.00    0.00       1/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() [675]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector() [832]
[811]    0.0    0.00    0.00       1         std::_Bvector_base<std::allocator<bool> >::_Bvector_base() [811]
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl() [809]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [779]
[812]    0.0    0.00    0.00       1         std::pointer_traits<char const*>::pointer_to(char const&) [812]
                0.00    0.00       1/1           char const* std::addressof<char const>(char const&) [877]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_local_data() const [783]
[813]    0.0    0.00    0.00       1         std::pointer_traits<unsigned int const*>::pointer_to(unsigned int const&) [813]
                0.00    0.00       1/1           unsigned int const* std::addressof<unsigned int const>(unsigned int const&) [878]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [842]
[814]    0.0    0.00    0.00       1         std::pointer_traits<char*>::pointer_to(char&) [814]
                0.00    0.00       1/1           char* std::addressof<char>(char&) [879]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long) [795]
[815]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long long) [815]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long long) [763]
-----------------------------------------------
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long) [792]
[816]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long long) [816]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long long, void const*) [764]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long) [835]
[817]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long long) [817]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long long) [769]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long) [848]
[818]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long long) [818]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<char>::allocate(unsigned long long, void const*) [770]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [781]
[819]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [819]
                0.00    0.00       1/2           __gnu_cxx::new_allocator<char>::max_size() const [718]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long) [852]
[820]    0.0    0.00    0.00       1         std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long long) [820]
                0.00    0.00       1/1           __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long long) [771]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
[821]    0.0    0.00    0.00       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [821]
                0.00    0.00       2/1705        std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [346]
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [822]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [821]
[822]    0.0    0.00    0.00       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [822]
                0.00    0.00       1/50          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [585]
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&) [874]
-----------------------------------------------
                0.00    0.00       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [825]
[823]    0.0    0.00    0.00       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [823]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [797]
-----------------------------------------------
                0.00    0.00       1/1           std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [826]
[824]    0.0    0.00    0.00       1         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
                0.00    0.00       1/50          std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [585]
                0.00    0.00       1/873         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end() [407]
                0.00    0.00       1/822         std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin() [505]
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&) [821]
                0.00    0.00       1/1           std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [798]
-----------------------------------------------
                0.00    0.00       1/1           ThreadPool::ThreadPool(unsigned int) [748]
[825]    0.0    0.00    0.00       1         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>() [825]
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque() [823]
-----------------------------------------------
                0.00    0.00       1/1           ThreadPool::~ThreadPool() [749]
[826]    0.0    0.00    0.00       1         std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue() [826]
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque() [824]
-----------------------------------------------
                0.00    0.00       1/1           ThreadPool::ThreadPool(unsigned int) [748]
[827]    0.0    0.00    0.00       1         std::vector<std::thread, std::allocator<std::thread> >::vector() [827]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [806]
-----------------------------------------------
                0.00    0.00       1/1           ThreadPool::~ThreadPool() [749]
[828]    0.0    0.00    0.00       1         std::vector<std::thread, std::allocator<std::thread> >::~vector() [828]
                0.00    0.00       1/10          std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [604]
                0.00    0.00       1/4           void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&) [650]
                0.00    0.00       1/1           std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [807]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&) [831]
[829]    0.0    0.00    0.00       1         void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag) [829]
                0.00    0.00       1/1           std::iterator_traits<bool const*>::difference_type std::distance<bool const*>(bool const*, bool const*) [875]
                0.00    0.00       1/2           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
                0.00    0.00       1/1           std::_Bit_iterator std::copy<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [869]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&) [833]
[830]    0.0    0.00    0.00       1         std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool) [830]
                0.00    0.00       1/3           std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const [658]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[831]    0.0    0.00    0.00       1         std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&) [831]
                0.00    0.00       1/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [737]
                0.00    0.00       1/1           std::initializer_list<bool>::end() const [776]
                0.00    0.00       1/2           std::initializer_list<bool>::begin() const [723]
                0.00    0.00       1/1           void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag) [829]
-----------------------------------------------
                0.00    0.00       1/1           DynamicGrid<bool>::DynamicGrid() [751]
[832]    0.0    0.00    0.00       1         std::vector<bool, std::allocator<bool> >::vector() [832]
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_Bvector_base() [811]
-----------------------------------------------
                0.00    0.00       1/1           DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int) [750]
[833]    0.0    0.00    0.00       1         std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&) [833]
                0.00    0.00       1/2           std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [737]
                0.00    0.00       1/2           std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long) [742]
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool) [830]
-----------------------------------------------
                0.00    0.00       1/1           DynamicGrid<bool>::operator=(DynamicGrid<bool>&&) [752]
[834]    0.0    0.00    0.00       1         std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
                0.00    0.00       2/2           std::_Bvector_base<std::allocator<bool> >::_M_get_Bit_allocator() [736]
                0.00    0.00       1/1           __gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::_S_propagate_on_move_assign() [773]
                0.00    0.00       1/4           std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [646]
                0.00    0.00       1/1           std::remove_reference<std::vector<bool, std::allocator<bool> >&>::type&& std::move<std::vector<bool, std::allocator<bool> >&>(std::vector<bool, std::allocator<bool> >&) [872]
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_M_move_data(std::_Bvector_base<std::allocator<bool> >&&) [808]
                0.00    0.00       1/1           void std::__alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&) [865]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [836]
[835]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long) [835]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [643]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [743]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long long) [817]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [851]
[836]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [836]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [778]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long) [835]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[837]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long long) [837]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [850]
[838]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [838]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [851]
[839]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [839]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [850]
[840]    0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*) [840]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type) [845]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type) [845]
[841]    0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
                0.00    0.00       1/1           bool __gnu_cxx::__is_null_pointer<char const>(char const*) [774]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [876]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long) [848]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [846]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long long) [837]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [643]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [844]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long) [843]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [850]
[842]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [842]
                0.00    0.00       1/1           std::pointer_traits<char*>::pointer_to(char&) [814]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[843]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long) [843]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long long) [849]
                0.00    0.00       1/4           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [643]
                0.00    0.00       1/1           std::char_traits<char>::assign(char&, char const&) [801]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[844]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [844]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long long) [847]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*) [840]
[845]    0.0    0.00    0.00       1         void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type) [845]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[846]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*) [846]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*) [844]
[847]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long long) [847]
                0.00    0.00       1/1           std::char_traits<char>::copy(char*, char const*, unsigned long long) [800]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[848]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long) [848]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [781]
                0.00    0.00       1/2           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() [743]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long long) [818]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long) [843]
[849]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long long) [849]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[850]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&) [850]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() [842]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&) [838]
                0.00    0.00       1/1           std::char_traits<char>::length(char const*) [802]
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*) [840]
-----------------------------------------------
                0.00    0.00       1/1           MyWorld::MyWorld(int, int, int) [761]
[851]    0.0    0.00    0.00       1         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string() [851]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose() [836]
                0.00    0.00       1/1           std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider() [839]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_dispose() [853]
[852]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long) [852]
                0.00    0.00       1/2           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_data() const [724]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_get_allocator() [855]
                0.00    0.00       1/1           std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long long) [820]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::~basic_string() [856]
[853]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_dispose() [853]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_is_local() const [782]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long) [852]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::~basic_string() [856]
[854]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_Alloc_hider::~_Alloc_hider() [854]
                0.00    0.00       1/1           std::allocator<unsigned int>::~allocator() [788]
-----------------------------------------------
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long) [852]
[855]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_get_allocator() [855]
-----------------------------------------------
                0.00    0.00       1/1           sf::String::~String() [756]
[856]    0.0    0.00    0.00       1         std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::~basic_string() [856]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_dispose() [853]
                0.00    0.00       1/1           std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_Alloc_hider::~_Alloc_hider() [854]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<bool const*>::difference_type std::distance<bool const*>(bool const*, bool const*) [875]
[857]    0.0    0.00    0.00       1         std::iterator_traits<bool const*>::difference_type std::__distance<bool const*>(bool const*, bool const*, std::random_access_iterator_tag) [857]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [876]
[858]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [858]
-----------------------------------------------
                0.00    0.00       1/1           char const* std::addressof<char const>(char const&) [877]
[859]    0.0    0.00    0.00       1         char const* std::__addressof<char const>(char const&) [859]
-----------------------------------------------
                0.00    0.00       1/1           unsigned int const* std::addressof<unsigned int const>(unsigned int const&) [878]
[860]    0.0    0.00    0.00       1         unsigned int const* std::__addressof<unsigned int const>(unsigned int const&) [860]
-----------------------------------------------
                0.00    0.00       1/1           char* std::addressof<char>(char&) [879]
[861]    0.0    0.00    0.00       1         char* std::__addressof<char>(char&) [861]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [864]
[862]    0.0    0.00    0.00       1         std::_Bit_iterator std::__niter_base<std::_Bit_iterator>(std::_Bit_iterator) [862]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [864]
[863]    0.0    0.00    0.00       1         std::_Bit_iterator std::__copy_move_a<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [863]
                0.00    0.00       1/1           std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [799]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bit_iterator std::copy<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [869]
[864]    0.0    0.00    0.00       1         std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [864]
                0.00    0.00       2/2           bool const* std::__niter_base<bool const*>(bool const*) [745]
                0.00    0.00       1/1           std::_Bit_iterator std::__niter_base<std::_Bit_iterator>(std::_Bit_iterator) [862]
                0.00    0.00       1/1           std::_Bit_iterator std::__copy_move_a<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [863]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
[865]    0.0    0.00    0.00       1         void std::__alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&) [865]
                0.00    0.00       1/1           void std::__do_alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&, std::integral_constant<bool, true>) [866]
-----------------------------------------------
                0.00    0.00       1/1           void std::__alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&) [865]
[866]    0.0    0.00    0.00       1         void std::__do_alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&, std::integral_constant<bool, true>) [866]
                0.00    0.00       1/1           std::remove_reference<std::allocator<unsigned long>&>::type&& std::move<std::allocator<unsigned long>&>(std::allocator<unsigned long>&) [871]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<bool const*>::difference_type std::distance<bool const*>(bool const*, bool const*) [875]
[867]    0.0    0.00    0.00       1         std::iterator_traits<bool const*>::iterator_category std::__iterator_category<bool const*>(bool const* const&) [867]
-----------------------------------------------
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [876]
[868]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [868]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag) [829]
[869]    0.0    0.00    0.00       1         std::_Bit_iterator std::copy<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [869]
                0.00    0.00       2/2           bool const* std::__miter_base<bool const*>(bool const*) [744]
                0.00    0.00       1/1           std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [864]
-----------------------------------------------
                0.00    0.00       1/1           std::_Bvector_base<std::allocator<bool> >::_M_move_data(std::_Bvector_base<std::allocator<bool> >&&) [808]
[870]    0.0    0.00    0.00       1         std::remove_reference<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>::type&& std::move<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&) [870]
-----------------------------------------------
                0.00    0.00       1/1           void std::__do_alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&, std::integral_constant<bool, true>) [866]
[871]    0.0    0.00    0.00       1         std::remove_reference<std::allocator<unsigned long>&>::type&& std::move<std::allocator<unsigned long>&>(std::allocator<unsigned long>&) [871]
-----------------------------------------------
                0.00    0.00       1/1           std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&) [834]
[872]    0.0    0.00    0.00       1         std::remove_reference<std::vector<bool, std::allocator<bool> >&>::type&& std::move<std::vector<bool, std::allocator<bool> >&>(std::vector<bool, std::allocator<bool> >&) [872]
-----------------------------------------------
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&) [874]
[873]    0.0    0.00    0.00       1         void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [873]
                0.00    0.00       1/1           void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [803]
-----------------------------------------------
                0.00    0.00       1/1           std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>) [822]
[874]    0.0    0.00    0.00       1         void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&) [874]
                0.00    0.00       1/1           void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [873]
-----------------------------------------------
                0.00    0.00       1/1           void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag) [829]
[875]    0.0    0.00    0.00       1         std::iterator_traits<bool const*>::difference_type std::distance<bool const*>(bool const*, bool const*) [875]
                0.00    0.00       1/1           std::iterator_traits<bool const*>::iterator_category std::__iterator_category<bool const*>(bool const* const&) [867]
                0.00    0.00       1/1           std::iterator_traits<bool const*>::difference_type std::__distance<bool const*>(bool const*, bool const*, std::random_access_iterator_tag) [857]
-----------------------------------------------
                0.00    0.00       1/1           void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag) [841]
[876]    0.0    0.00    0.00       1         std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*) [876]
                0.00    0.00       1/1           std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&) [868]
                0.00    0.00       1/1           std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag) [858]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<char const*>::pointer_to(char const&) [812]
[877]    0.0    0.00    0.00       1         char const* std::addressof<char const>(char const&) [877]
                0.00    0.00       1/1           char const* std::__addressof<char const>(char const&) [859]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<unsigned int const*>::pointer_to(unsigned int const&) [813]
[878]    0.0    0.00    0.00       1         unsigned int const* std::addressof<unsigned int const>(unsigned int const&) [878]
                0.00    0.00       1/1           unsigned int const* std::__addressof<unsigned int const>(unsigned int const&) [860]
-----------------------------------------------
                0.00    0.00       1/1           std::pointer_traits<char*>::pointer_to(char&) [814]
[879]    0.0    0.00    0.00       1         char* std::addressof<char>(char&) [879]
                0.00    0.00       1/1           char* std::__addressof<char>(char&) [861]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2018 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

 [746] ThreadPool::stop()    [663] std::_Head_base<1ull, std::default_delete<std::thread::_State>, true>::_Head_base() [100] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_pop_front_aux()
  [21] ThreadPool::task()    [478] std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2>&&) [597] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reallocate_map(unsigned long long, bool)
 [747] ThreadPool::start(unsigned int) [479] std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr(std::shared_ptr<std::__future_base::_State_baseV2> const&) [822] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data_aux(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>)
 [748] ThreadPool::ThreadPool(unsigned int) [480] std::shared_ptr<std::__future_base::_State_baseV2>::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [578] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_reserve_map_at_back(unsigned long long)
 [749] ThreadPool::~ThreadPool() [274] std::shared_ptr<std::__future_base::_State_baseV2>::~shared_ptr() [407] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::end()
 [750] DynamicGrid<bool>::DynamicGrid(unsigned int, unsigned int, unsigned int) [481] std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> >::~shared_ptr() [411] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::back()
 [751] DynamicGrid<bool>::DynamicGrid() [312] std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> >&&) [505] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::begin()
 [710] DynamicGrid<bool>::~DynamicGrid() [456] std::shared_ptr<std::packaged_task<sf::Image ()> >::shared_ptr(std::shared_ptr<std::packaged_task<sf::Image ()> > const&) [515] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::front()
 [752] DynamicGrid<bool>::operator=(DynamicGrid<bool>&&) [9] std::shared_ptr<std::packaged_task<sf::Image ()> >::~shared_ptr() [96] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::pop_front()
 [205] RaycastEngine::get_distance(float) [393] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get_deleter() [823] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::deque()
   [3] RaycastEngine::multi_render(sf::RenderWindow&) [521] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::swap(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&) [824] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::~deque()
 [182] RaycastEngine::sample_image(float, float, sf::Image const&) [370] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter, void>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [242] std::mutex::lock()
 [537] RaycastEngine::get_camera_pointer() [443] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>() [236] std::mutex::unlock()
 [753] RaycastEngine::set_camera_position(trig::Vector2<float> const&) [267] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [464] std::mutex::mutex()
 [384] RaycastEngine::render(int, int) [275] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get_deleter() [459] std::mutex::~mutex()
 [754] RaycastEngine::RaycastEngine(unsigned int, unsigned int) [260] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::release() [97] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::pop()
 [755] RaycastEngine::~RaycastEngine() [486] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&&) [524] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::front()
 [572] sf::ContextSettings::ContextSettings(unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, unsigned int, bool) [507] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::unique_ptr<std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*) [825] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::queue<std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >, void>()
 [454] sf::Rect<int>::Rect() [289] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::~unique_ptr() [826] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::~queue()
 [364] sf::Image::Image(sf::Image const&) [664] std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::unique_ptr<std::default_delete<std::thread::_State>, void>(std::thread::_State*) [683] std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&)
 [387] sf::Sprite::~Sprite() [665] std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> >::~unique_ptr() [684] std::tuple<void (ThreadPool::*)(), ThreadPool*>::tuple<void (ThreadPool::*)(), ThreadPool*, true>(void (ThreadPool::*&&)(), ThreadPool*&&)
 [756] sf::String::~String() [790] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::_Deque_impl() [495] std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&)
 [385] sf::Drawable::~Drawable() [791] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_impl::~_Deque_impl() [308] std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&)
 [203] trig::Vector2<float>::Vector2(float) [792] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_map(unsigned long long) [430] std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter, true>()
 [195] trig::Vector2<float>::Vector2(float, float) [793] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_create_nodes(std::function<void ()>**, std::function<void ()>**) [310] std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&)
 [202] trig::Vector2<float>::Vector2() [577] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_allocate_node() [466] std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, true>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&)
 [573] trig::Vector2<float>::operator+=(trig::Vector2<float> const&) [794] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_nodes(std::function<void ()>**, std::function<void ()>**) [499] std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter, true>()
 [179] trig::Vector2<int>::Vector2(int, int) [795] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_map(std::function<void ()>**, unsigned long long) [685] std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >::tuple<std::thread::_State*, std::default_delete<std::thread::_State>, true>()
 [204] trig::Vector2<int>::Vector2() [796] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_initialize_map(unsigned long long) [412] std::future<sf::Image>::get()
 [757] World::update()       [579] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_deallocate_node(std::function<void ()>*) [472] std::future<sf::Image>::future(std::future<sf::Image>&&)
 [758] World::World(int, int, int) [585] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() [502] std::future<sf::Image>::future(std::shared_ptr<std::__future_base::_State_baseV2> const&)
 [759] World::~World()       [797] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_Deque_base() [323] std::future<sf::Image>::~future()
 [611] Camera::move_right(float) [798] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::~_Deque_base() [686] std::thread::_State_impl<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::_State_impl(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&)
 [590] Camera::rotate_left(float) [623] std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_head(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [687] std::unique_ptr<std::thread::_State, std::default_delete<std::thread::_State> > std::thread::_S_make_state<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&)
 [574] Camera::move_forward(float) [666] std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_M_tail(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&) [688] std::thread::_Invoker<std::tuple<std::decay<void (ThreadPool::*)()>::type, std::decay<ThreadPool*>::type> > std::thread::__make_invoker<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
 [586] Camera::rotate_right(float) [667] std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&&) [602] std::thread::id::id()
 [595] Camera::move_backward(float) [668] std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>::_Tuple_impl<void (ThreadPool::*)(), ThreadPool*, void>(void (ThreadPool::*&&)(), ThreadPool*&&) [689] std::thread::swap(std::thread&)
 [612] Camera::move_left(float) [337] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&) [690] std::thread::_State::_State()
 [760] Camera::Camera()      [211] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [22] decltype (__invoke((_S_declval<0ull>)(), (_S_declval<1ull>)())) std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_M_invoke<0ull, 1ull>(std::_Index_tuple<0ull, 1ull>)
 [184] MyWorld::out_of_bounds(trig::Vector2<int> const&) [227] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_M_tail(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&) [691] std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::_Invoker(std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&&)
 [180] MyWorld::get_pixel_color(trig::Vector2<int> const&, RaycastEngine::CellSide, float, float, float) [457] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [23] std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >::operator()()
 [194] MyWorld::is_solid(trig::Vector2<int> const&) [432] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [692] std::thread::thread(std::thread&&)
 [761] MyWorld::MyWorld(int, int, int) [331] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result_base*&, std::__future_base::_Result_base::_Deleter&&) [693] std::thread::thread<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
 [762] MyWorld::~MyWorld()   [292] std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&&) [629] std::thread::~thread()
 [763] __gnu_cxx::new_allocator<std::function<void ()>*>::deallocate(std::function<void ()>**, unsigned long long) [245] std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&) [497] std::future<sf::Image>& std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::emplace_back<std::future<sf::Image> >(std::future<sf::Image>&&)
 [764] __gnu_cxx::new_allocator<std::function<void ()>*>::allocate(unsigned long long, void const*) [217] std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&) [558] std::future<sf::Image>* std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate_and_copy<std::move_iterator<std::future<sf::Image>*> >(unsigned long long, std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>)
 [711] __gnu_cxx::new_allocator<std::function<void ()>*>::new_allocator() [496] std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [388] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::end()
 [712] __gnu_cxx::new_allocator<std::function<void ()>*>::~new_allocator() [439] std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter, void>(std::__future_base::_Result<sf::Image>*&, std::__future_base::_Result_base::_Deleter&&) [494] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::back()
 [462] void __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::destroy<std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) [624] std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_M_head(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&) [559] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::begin()
 [255] __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator(__gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> > const&) [669] std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >::_Tuple_impl() [560] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::reserve(unsigned long long)
 [408] __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::new_allocator() [210] std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_M_head(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&) [561] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::vector()
 [239] __gnu_cxx::new_allocator<std::packaged_task<sf::Image ()> >::~new_allocator() [463] std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [562] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~vector()
 [447] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::deallocate(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [343] std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl() [694] std::thread& std::vector<std::thread, std::allocator<std::thread> >::emplace_back<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
 [409] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocate(unsigned long long, void const*) [258] std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::_Tuple_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [695] void std::vector<std::thread, std::allocator<std::thread> >::_M_realloc_insert<void (ThreadPool::*)(), ThreadPool*>(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >, void (ThreadPool::*&&)(), ThreadPool*&&)
 [300] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::new_allocator() [303] std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>::operator=(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&&) [613] std::vector<std::thread, std::allocator<std::thread> >::end()
 [373] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~new_allocator() [625] std::_Tuple_impl<1ull, ThreadPool*>::_M_head(std::_Tuple_impl<1ull, ThreadPool*>&) [696] std::vector<std::thread, std::allocator<std::thread> >::back()
 [538] __gnu_cxx::new_allocator<std::future<sf::Image> >::deallocate(std::future<sf::Image>*, unsigned long long) [670] std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl(std::_Tuple_impl<1ull, ThreadPool*>&&) [640] std::vector<std::thread, std::allocator<std::thread> >::begin()
 [539] __gnu_cxx::new_allocator<std::future<sf::Image> >::allocate(unsigned long long, void const*) [671] std::_Tuple_impl<1ull, ThreadPool*>::_Tuple_impl<ThreadPool*>(ThreadPool*&&) [827] std::vector<std::thread, std::allocator<std::thread> >::vector()
 [477] void __gnu_cxx::new_allocator<std::future<sf::Image> >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>&&) [672] std::_Tuple_impl<1ull, std::default_delete<std::thread::_State> >::_Tuple_impl() [828] std::vector<std::thread, std::allocator<std::thread> >::~vector()
 [540] __gnu_cxx::new_allocator<std::future<sf::Image> >::new_allocator() [799] std::_Bit_iterator std::__copy_move<false, false, std::random_access_iterator_tag>::__copy_m<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator) [742] std::vector<bool, std::allocator<bool> >::_M_initialize(unsigned long long)
 [541] __gnu_cxx::new_allocator<std::future<sf::Image> >::~new_allocator() [596] std::function<void ()>** std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<std::function<void ()>*>(std::function<void ()>* const*, std::function<void ()>* const*, std::function<void ()>**) [829] void std::vector<bool, std::allocator<bool> >::_M_initialize_range<bool const*>(bool const*, bool const*, std::forward_iterator_tag)
 [651] __gnu_cxx::new_allocator<std::thread>::deallocate(std::thread*, unsigned long long) [332] unsigned char* std::__copy_move<false, true, std::random_access_iterator_tag>::__copy_m<unsigned char>(unsigned char const*, unsigned char const*, unsigned char*) [830] std::vector<bool, std::allocator<bool> >::_M_initialize_value(bool)
 [652] __gnu_cxx::new_allocator<std::thread>::allocate(unsigned long long, void const*) [468] std::atomic_flag::_S_init(bool) [831] std::vector<bool, std::allocator<bool> >::vector(std::initializer_list<bool>, std::allocator<bool> const&)
 [653] void __gnu_cxx::new_allocator<std::thread>::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [482] std::atomic_flag::atomic_flag(bool) [832] std::vector<bool, std::allocator<bool> >::vector()
 [765] __gnu_cxx::new_allocator<std::thread>::new_allocator() [800] std::char_traits<char>::copy(char*, char const*, unsigned long long) [833] std::vector<bool, std::allocator<bool> >::vector(unsigned long long, bool const&, std::allocator<bool> const&)
 [766] __gnu_cxx::new_allocator<std::thread>::~new_allocator() [801] std::char_traits<char>::assign(char&, char const&) [697] std::vector<bool, std::allocator<bool> >::~vector()
 [581] __gnu_cxx::new_allocator<std::function<void ()> >::deallocate(std::function<void ()>*, unsigned long long) [802] std::char_traits<char>::length(char const*) [834] std::vector<bool, std::allocator<bool> >::operator=(std::vector<bool, std::allocator<bool> >&&)
  [95] void __gnu_cxx::new_allocator<std::function<void ()> >::destroy<std::function<void ()> >(std::function<void ()>*) [238] std::unique_lock<std::mutex>::lock() [376] std::vector<unsigned char, std::allocator<unsigned char> >::vector(std::vector<unsigned char, std::allocator<unsigned char> > const&)
 [584] __gnu_cxx::new_allocator<std::function<void ()> >::allocate(unsigned long long, void const*) [246] std::unique_lock<std::mutex>::unlock() [835] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_destroy(unsigned long long)
 [767] __gnu_cxx::new_allocator<std::function<void ()> >::new_allocator() [251] std::unique_lock<std::mutex>::unique_lock(std::mutex&) [836] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_dispose()
 [768] __gnu_cxx::new_allocator<std::function<void ()> >::~new_allocator() [253] std::unique_lock<std::mutex>::~unique_lock() [837] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_capacity(unsigned long long)
 [713] __gnu_cxx::new_allocator<bool>::new_allocator() [530] void std::_Destroy_aux<false>::__destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*) [838] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::_Alloc_hider(char*, std::allocator<char> const&)
 [714] __gnu_cxx::new_allocator<bool>::~new_allocator() [644] void std::_Destroy_aux<false>::__destroy<std::thread*>(std::thread*, std::thread*) [839] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_Alloc_hider::~_Alloc_hider()
 [769] __gnu_cxx::new_allocator<char>::deallocate(char*, unsigned long long) [803] void std::_Destroy_aux<false>::__destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*) [840] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*)
 [770] __gnu_cxx::new_allocator<char>::allocate(unsigned long long, void const*) [549] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_allocate(unsigned long long) [841] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct<char const*>(char const*, char const*, std::forward_iterator_tag)
 [326] __gnu_cxx::new_allocator<unsigned char>::allocate(unsigned long long, void const*) [550] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::_Vector_impl() [842] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data()
 [237] __gnu_cxx::new_allocator<unsigned char>::new_allocator(__gnu_cxx::new_allocator<unsigned char> const&) [551] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_impl::~_Vector_impl() [843] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_set_length(unsigned long long)
 [360] __gnu_cxx::new_allocator<unsigned char>::~new_allocator() [531] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_deallocate(std::future<sf::Image>*, unsigned long long) [844] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy_chars(char*, char const*, char const*)
 [240] __gnu_cxx::new_allocator<int>::new_allocator(__gnu_cxx::new_allocator<int> const&) [389] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() [845] void std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_construct_aux<char const*>(char const*, char const*, std::__false_type)
 [436] __gnu_cxx::new_allocator<int>::new_allocator() [552] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_Vector_base() [743] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator()
 [224] __gnu_cxx::new_allocator<int>::~new_allocator() [553] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::~_Vector_base() [846] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data(char*)
 [771] __gnu_cxx::new_allocator<unsigned int>::deallocate(unsigned int*, unsigned long long) [673] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_allocate(unsigned long long) [847] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_S_copy(char*, char const*, unsigned long long)
 [772] __gnu_cxx::new_allocator<unsigned int>::~new_allocator() [804] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::_Vector_impl() [848] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_create(unsigned long long&, unsigned long long)
 [715] __gnu_cxx::new_allocator<unsigned long>::deallocate(unsigned long*, unsigned long long) [805] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_impl::~_Vector_impl() [849] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_length(unsigned long long)
 [716] __gnu_cxx::new_allocator<unsigned long>::allocate(unsigned long long, void const*) [645] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_deallocate(std::thread*, unsigned long long) [850] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::basic_string(char const*, std::allocator<char> const&)
 [717] __gnu_cxx::new_allocator<unsigned long>::new_allocator(__gnu_cxx::new_allocator<unsigned long> const&) [604] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() [851] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::~basic_string()
 [654] __gnu_cxx::new_allocator<unsigned long>::new_allocator() [806] std::_Vector_base<std::thread, std::allocator<std::thread> >::_Vector_base() [852] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_destroy(unsigned long long)
 [639] __gnu_cxx::new_allocator<unsigned long>::~new_allocator() [807] std::_Vector_base<std::thread, std::allocator<std::thread> >::~_Vector_base() [853] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_dispose()
 [306] __gnu_cxx::__alloc_traits<std::allocator<unsigned char>, unsigned char>::_S_select_on_copy(std::allocator<unsigned char> const&) [333] std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_allocate(unsigned long long) [854] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_Alloc_hider::~_Alloc_hider()
 [773] __gnu_cxx::__alloc_traits<std::allocator<unsigned long>, unsigned long>::_S_propagate_on_move_assign() [334] std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_impl::_Vector_impl(std::allocator<unsigned char> const&) [855] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_get_allocator()
 [340] __gnu_cxx::__aligned_buffer<sf::Image>::_M_ptr() [321] std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_create_storage(unsigned long long) [856] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::~basic_string()
 [264] __gnu_cxx::__aligned_buffer<sf::Image>::_M_addr() [314] std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() [98] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::~function()
 [268] __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_ptr() [316] std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_Vector_base(unsigned long long, std::allocator<unsigned char> const&) [366] std::function<void ()>::swap(std::function<void ()>&)
 [263] __gnu_cxx::__aligned_buffer<std::packaged_task<sf::Image ()> >::_M_addr() [451] std::__mutex_base::__mutex_base() [501] std::function<void ()>::function(std::function<void ()>&&)
 [774] bool __gnu_cxx::__is_null_pointer<char const>(char const*) [420] std::__mutex_base::~__mutex_base() [526] std::function<void ()>::function()
 [232] __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::__normal_iterator(unsigned char const* const&) [390] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::swap(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&) [58] std::function<void ()>::~function()
 [286] __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::__normal_iterator(std::future<sf::Image>* const&) [405] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::reset() [93] std::function<void ()>::operator=(std::function<void ()>&&)
   [2] __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator++() [398] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr() [241] std::_Any_data::_M_access()
 [594] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::__normal_iterator(std::thread* const&) [476] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>&&) [460] std::once_flag::once_flag()
 [655] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator++() [487] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2> const&) [698] void std::_Construct<std::thread, std::thread>(std::thread*, std::thread&&)
 [656] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::difference_type __gnu_cxx::operator-<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [469] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, void>(std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [857] std::iterator_traits<bool const*>::difference_type std::__distance<bool const*>(bool const*, bool const*, std::random_access_iterator_tag)
 [386] bool __gnu_cxx::operator!=<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >(__gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&, __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > > const&) [394] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [858] std::iterator_traits<char const*>::difference_type std::__distance<char const*>(char const*, char const*, std::random_access_iterator_tag)
 [642] bool __gnu_cxx::operator!=<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >(__gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&, __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > > const&) [269] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [859] char const* std::__addressof<char const>(char const&)
 [542] ThreadPool::number_of_threads() const [489] std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [860] unsigned int const* std::__addressof<unsigned int const>(unsigned int const&)
 [188] DynamicGrid<bool>::get_height() const [483] std::enable_if<!std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__has_esft_base<std::packaged_task<sf::Image ()>, void>::value, void>::type std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::_M_enable_shared_from_this_with<std::packaged_task<sf::Image ()>, std::packaged_task<sf::Image ()> >(std::packaged_task<sf::Image ()>*) [341] std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >* std::__addressof<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&)
 [183] DynamicGrid<bool>::out_of_bounds(int, int) const [297] std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>&&) [522] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>* std::__addressof<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> >(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&)
 [193] DynamicGrid<bool>::index(int, int) const [441] std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::__shared_ptr(std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2> const&) [244] std::mutex* std::__addressof<std::mutex>(std::mutex&)
 [185] DynamicGrid<bool>::get_width() const [8] std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::~__shared_ptr() [391] std::future<sf::Image>* std::__addressof<std::future<sf::Image> >(std::future<sf::Image>&)
 [181] trig::Vector2<float>::operator trig::Vector2<int>() const [732] std::_Bit_iterator::_Bit_iterator(unsigned long*, unsigned int) [607] std::thread* std::__addressof<std::thread>(std::thread&)
 [200] trig::Vector2<float>::operator*(float) const [606] std::_Bit_iterator::_Bit_iterator() [508] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>* std::__addressof<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()> >(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>&)
 [198] trig::Vector2<float>::operator+(trig::Vector2<float> const&) const [733] std::_Bit_iterator::operator+=(long long) [511] std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}* std::__addressof<std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}>(void (std::__future_base::_State_baseV2::*&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*))
 [201] trig::Vector2<int>::operator trig::Vector2<float>() const [569] std::_Bit_iterator::operator++() [517] bool* std::__addressof<bool>(bool&)
 [775] __gnu_cxx::new_allocator<std::function<void ()>*>::max_size() const [734] std::_Bvector_base<std::allocator<bool> >::_M_allocate(unsigned long long) [861] char* std::__addressof<char>(char&)
 [417] __gnu_cxx::new_allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::max_size() const [808] std::_Bvector_base<std::allocator<bool> >::_M_move_data(std::_Bvector_base<std::allocator<bool> >&&) [641] unsigned long* std::__addressof<unsigned long>(unsigned long&)
 [528] __gnu_cxx::new_allocator<std::future<sf::Image> >::max_size() const [735] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl(std::allocator<unsigned long> const&) [699] void (ThreadPool::*&std::__get_helper<0ull, void (ThreadPool::*)(), ThreadPool*>(std::_Tuple_impl<0ull, void (ThreadPool::*)(), ThreadPool*>&))()
 [605] __gnu_cxx::new_allocator<std::thread>::max_size() const [809] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_Bvector_impl() [335] std::__future_base::_Result_base* const& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
 [582] __gnu_cxx::new_allocator<std::function<void ()> >::max_size() const [674] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::~_Bvector_impl() [257] std::__future_base::_Result_base*& std::__get_helper<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [718] __gnu_cxx::new_allocator<char>::max_size() const [646] std::_Bvector_base<std::allocator<bool> >::_M_deallocate() [243] std::__future_base::_Result<sf::Image>* const& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&)
 [311] __gnu_cxx::new_allocator<unsigned char>::max_size() const [810] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_move_data(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data&&) [218] std::__future_base::_Result<sf::Image>*& std::__get_helper<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
 [719] __gnu_cxx::new_allocator<unsigned long>::max_size() const [675] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_M_reset() [630] std::thread::_State*& std::__get_helper<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::_Tuple_impl<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >&)
 [229] __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >::base() const [676] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl_data::_Bvector_impl_data() [235] std::__future_base::_Result_base::_Deleter& std::__get_helper<1ull, std::__future_base::_Result_base::_Deleter>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&)
 [285] __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::base() const [736] std::_Bvector_base<std::allocator<bool> >::_M_get_Bit_allocator() [700] ThreadPool*& std::__get_helper<1ull, ThreadPool*>(std::_Tuple_impl<1ull, ThreadPool*>&)
 [330] __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator*() const [647] std::_Bvector_base<std::allocator<bool> >::_S_nword(unsigned long long) [230] __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > std::__miter_base<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >)
 [500] __gnu_cxx::__normal_iterator<std::future<sf::Image>*, std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > > >::operator-(long long) const [737] std::_Bvector_base<std::allocator<bool> >::_Bvector_base(std::allocator<bool> const&) [744] bool const* std::__miter_base<bool const*>(bool const*)
 [592] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::base() const [811] std::_Bvector_base<std::allocator<bool> >::_Bvector_base() [591] std::function<void ()>** std::__miter_base<std::function<void ()>**>(std::function<void ()>**)
 [614] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator*() const [677] std::_Bvector_base<std::allocator<bool> >::~_Bvector_base() [745] bool const* std::__niter_base<bool const*>(bool const*)
 [657] __gnu_cxx::__normal_iterator<std::thread*, std::vector<std::thread, std::allocator<std::thread> > >::operator-(long long) const [518] std::__future_base::_State_baseV2::_M_set_result(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>, bool) [231] unsigned char const* std::__niter_base<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >)
 [361] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::get() const [452] std::__future_base::_State_baseV2::_M_break_promise(std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>) [588] std::function<void ()>** std::__niter_base<std::function<void ()>**>(std::function<void ()>**)
 [471] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator bool() const [421] std::__future_base::_State_baseV2::_M_complete_async() [305] unsigned char* std::__niter_base<unsigned char*>(unsigned char*)
 [514] std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator*() const [484] std::__future_base::_State_baseV2::_M_set_retrieved_flag() [862] std::_Bit_iterator std::__niter_base<std::_Bit_iterator>(std::_Bit_iterator)
 [249] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::get() const [401] std::__future_base::_State_baseV2::wait() [461] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>* std::__to_address<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >(std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*)
 [516] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::operator->() const [509] void std::__future_base::_State_baseV2::_S_check<std::__future_base::_Task_state_base<sf::Image ()> >(std::shared_ptr<std::__future_base::_Task_state_base<sf::Image ()> > const&) [863] std::_Bit_iterator std::__copy_move_a<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
 [720] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_Tp_allocator() const [338] void std::__future_base::_State_baseV2::_S_check<std::__future_base::_State_baseV2>(std::shared_ptr<std::__future_base::_State_baseV2> const&) [290] unsigned char* std::__copy_move_a<false, unsigned char const*, unsigned char*>(unsigned char const*, unsigned char const*, unsigned char*)
 [721] std::_Deque_base<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_get_map_allocator() const [81] std::__future_base::_State_baseV2::_M_do_set(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*) [598] std::function<void ()>** std::__copy_move_a<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [543] std::_Vector_base<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::_M_get_Tp_allocator() const [440] std::__future_base::_State_baseV2::_State_baseV2() [24] void std::__invoke_impl<void, void (ThreadPool::*)(), ThreadPool*>(std::__invoke_memfun_deref, void (ThreadPool::*&&)(), ThreadPool*&&)
 [615] std::_Vector_base<std::thread, std::allocator<std::thread> >::_M_get_Tp_allocator() const [423] std::__future_base::_State_baseV2::~_State_baseV2() [83] void std::__invoke_impl<void, void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::__invoke_memfun_deref, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
 [354] std::_Vector_base<unsigned char, std::allocator<unsigned char> >::_M_get_Tp_allocator() const [444] std::__future_base::_Task_state_base<sf::Image ()>::_Task_state_base<std::allocator<int> >(std::allocator<int> const&) [309] unsigned char* std::__copy_move_a2<false, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
 [327] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::get() const [399] std::__future_base::_Task_state_base<sf::Image ()>::~_Task_state_base() [864] std::_Bit_iterator std::__copy_move_a2<false, bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
 [324] std::__shared_ptr<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2>::operator bool() const [465] std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter> std::__future_base::_S_allocate_result<sf::Image, int>(std::allocator<int> const&) [599] std::function<void ()>** std::__copy_move_a2<false, std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [278] std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const [448] std::__future_base::_Result<sf::Image>::_M_destroy() [865] void std::__alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&)
 [455] std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::unique() const [525] std::__future_base::_Result<sf::Image>::_M_set(sf::Image&&) [567] std::__deque_buf_size(unsigned long long)
 [359] std::__shared_ptr<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::operator bool() const [356] std::__future_base::_Result<sf::Image>::_M_value() [426] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > > std::__allocate_guarded<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&)
 [367] std::__shared_ptr<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2>::get() const [513] std::__future_base::_Result<sf::Image>::_Result() [866] void std::__do_alloc_on_move<std::allocator<unsigned long> >(std::allocator<unsigned long>&, std::allocator<unsigned long>&, std::integral_constant<bool, true>)
 [568] std::_Bit_iterator::operator*() const [413] std::__future_base::_Result<sf::Image>::~_Result() [318] unsigned char* std::uninitialized_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
 [722] std::_Bit_iterator::operator+(long long) const [402] std::__future_base::_Result<sf::Image>::~_Result() [563] std::future<sf::Image>* std::uninitialized_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*)
 [658] std::_Bvector_base<std::allocator<bool> >::_Bvector_impl::_M_end_addr() const [532] std::move_iterator<std::future<sf::Image>*>::move_iterator(std::future<sf::Image>*) [631] std::thread* std::uninitialized_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*)
 [396] std::__future_base::_Result_base::_Deleter::operator()(std::__future_base::_Result_base*) const [601] std::move_iterator<std::thread*>::move_iterator(std::thread*) [867] std::iterator_traits<bool const*>::iterator_category std::__iterator_category<bool const*>(bool const* const&)
 [529] std::move_iterator<std::future<sf::Image>*>::base() const [678] std::move_iterator<std::thread*>::operator++() [868] std::iterator_traits<char const*>::iterator_category std::__iterator_category<char const*>(char const* const&)
 [593] std::move_iterator<std::thread*>::base() const [75] std::packaged_task<sf::Image ()>::get_future() [298] unsigned char* std::__uninitialized_copy_a<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, unsigned char>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*, std::allocator<unsigned char>&)
 [659] std::move_iterator<std::thread*>::operator*() const [473] std::packaged_task<sf::Image ()>::~packaged_task() [564] std::future<sf::Image>* std::__uninitialized_copy_a<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::future<sf::Image> >(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&)
 [191] std::_Bit_reference::operator bool() const [91] std::packaged_task<sf::Image ()>::operator()() [632] std::thread* std::__uninitialized_copy_a<std::move_iterator<std::thread*>, std::thread*, std::thread>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*, std::allocator<std::thread>&)
 [383] std::_Function_base::_M_empty() const [186] std::_Bit_reference::_Bit_reference(unsigned long*, unsigned long) [533] std::move_iterator<std::future<sf::Image>*> std::__make_move_if_noexcept_iterator<std::future<sf::Image>, std::move_iterator<std::future<sf::Image>*> >(std::future<sf::Image>*)
 [404] std::__basic_future<sf::Image>::_M_get_result() const [570] std::_Bit_reference::operator=(bool) [603] std::move_iterator<std::thread*> std::__make_move_if_noexcept_iterator<std::thread, std::move_iterator<std::thread*> >(std::thread*)
  [71] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) const [252] std::_Function_base::_Function_base() [633] std::thread* std::__uninitialized_move_if_noexcept_a<std::thread*, std::thread*, std::allocator<std::thread> >(std::thread*, std::thread*, std::thread*, std::allocator<std::thread>&)
 [437] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [48] std::_Function_base::~_Function_base() [199] std::abs(float)
 [442] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_unique() const [351] std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>&) [701] std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&)
 [355] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator*() const [422] std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::_Sp_ebo_helper(std::allocator<std::packaged_task<sf::Image ()> > const&) [702] std::tuple_element<0ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<0ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&)
 [353] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [428] std::_Sp_ebo_helper<0, std::allocator<std::packaged_task<sf::Image ()> >, true>::~_Sp_ebo_helper() [349] std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> const&)
 [250] std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() const [288] std::_Sp_ebo_helper<0, std::allocator<int>, true>::_S_get(std::_Sp_ebo_helper<0, std::allocator<int>, true>&) [256] std::tuple_element<0ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [427] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_get_use_count() const [453] std::_Sp_ebo_helper<0, std::allocator<int>, true>::_Sp_ebo_helper(std::allocator<int> const&) [248] std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type const& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> const&)
 [776] std::initializer_list<bool>::end() const [400] std::_Sp_ebo_helper<0, std::allocator<int>, true>::~_Sp_ebo_helper() [219] std::tuple_element<0ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<0ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
 [777] std::initializer_list<bool>::size() const [196] std::__array_traits<float, 2ull>::_S_ref(float const (&) [2], unsigned long long) [634] std::tuple_element<0ull, std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> > >::type& std::get<0ull, std::thread::_State*, std::default_delete<std::thread::_State> >(std::tuple<std::thread::_State*, std::default_delete<std::thread::_State> >&)
 [723] std::initializer_list<bool>::begin() const [410] std::__basic_future<sf::Image>::_Reset::_Reset(std::__basic_future<sf::Image>&) [703] std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type&& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&&)
 [192] std::_Bit_const_iterator::operator*() const [458] std::__basic_future<sf::Image>::_Reset::~_Reset() [704] std::tuple_element<1ull, std::tuple<void (ThreadPool::*)(), ThreadPool*> >::type& std::get<1ull, void (ThreadPool::*)(), ThreadPool*>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&)
 [336] std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [474] std::__basic_future<sf::Image>::__basic_future(std::future<sf::Image>&&) [397] std::tuple_element<1ull, std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [344] std::__shared_ptr_access<std::__future_base::_State_baseV2, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [490] std::__basic_future<sf::Image>::__basic_future(std::shared_ptr<std::__future_base::_State_baseV2> const&) [259] std::tuple_element<1ull, std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter> >::type& std::get<1ull, std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>(std::tuple<std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter>&)
 [279] std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [317] std::__basic_future<sf::Image>::~__basic_future() [648] unsigned long long const& std::max<unsigned long long>(unsigned long long const&, unsigned long long const&)
 [281] std::__shared_ptr_access<std::__future_base::_Task_state_base<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [226] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::_M_swap(std::__shared_count<(__gnu_cxx::_Lock_policy)2>&) [295] unsigned char* std::copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*)
 [371] std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::_M_get() const [271] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count(std::__shared_count<(__gnu_cxx::_Lock_policy)2> const&) [869] std::_Bit_iterator std::copy<bool const*, std::_Bit_iterator>(bool const*, bool const*, std::_Bit_iterator)
 [504] std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator*() const [225] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::__shared_count() [600] std::function<void ()>** std::copy<std::function<void ()>**, std::function<void ()>**>(std::function<void ()>**, std::function<void ()>**, std::function<void ()>**)
 [512] std::__shared_ptr_access<std::packaged_task<sf::Image ()>, (__gnu_cxx::_Lock_policy)2, false, false>::operator->() const [208] std::__shared_count<(__gnu_cxx::_Lock_policy)2>::~__shared_count() [435] std::remove_reference<std::allocator<std::packaged_task<sf::Image ()> > const&>::type&& std::move<std::allocator<std::packaged_task<sf::Image ()> > const&>(std::allocator<std::packaged_task<sf::Image ()> > const&)
 [372] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::empty() const [812] std::pointer_traits<char const*>::pointer_to(char const&) [493] std::remove_reference<std::allocator<int> const&>::type&& std::move<std::allocator<int> const&>(std::allocator<int> const&)
 [377] std::queue<std::function<void ()>, std::deque<std::function<void ()>, std::allocator<std::function<void ()> > > >::empty() const [813] std::pointer_traits<unsigned int const*>::pointer_to(unsigned int const&) [358] std::remove_reference<sf::Image&>::type&& std::move<sf::Image&>(sf::Image&)
 [616] std::thread::joinable() const [814] std::pointer_traits<char*>::pointer_to(char&) [870] std::remove_reference<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>::type&& std::move<std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&>(std::_Bvector_base<std::allocator<bool> >::_Bvector_impl&)
 [544] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::size() const [576] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_M_set_node(std::function<void ()>**) [608] std::remove_reference<std::thread::id&>::type&& std::move<std::thread::id&>(std::thread::id&)
 [545] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::capacity() const [575] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_S_buffer_size() [221] std::remove_reference<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>::type&& std::move<bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
 [546] std::vector<std::future<sf::Image>, std::allocator<std::future<sf::Image> > >::max_size() const [346] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&) [222] std::remove_reference<void (*&)(std::_Any_data const&)>::type&& std::move<void (*&)(std::_Any_data const&)>(void (*&)(std::_Any_data const&))
 [660] std::vector<std::thread, std::allocator<std::thread> >::_M_check_len(unsigned long long, char const*) const [738] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::_Deque_iterator() [254] std::remove_reference<std::__future_base::_State_baseV2*&>::type&& std::move<std::__future_base::_State_baseV2*&>(std::__future_base::_State_baseV2*&)
 [536] std::vector<std::thread, std::allocator<std::thread> >::size() const [406] std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>::operator--() [871] std::remove_reference<std::allocator<unsigned long>&>::type&& std::move<std::allocator<unsigned long>&>(std::allocator<unsigned long>&)
 [617] std::vector<std::thread, std::allocator<std::thread> >::max_size() const [475] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::get() [347] std::remove_reference<std::shared_ptr<std::__future_base::_State_baseV2>&>::type&& std::move<std::shared_ptr<std::__future_base::_State_baseV2>&>(std::shared_ptr<std::__future_base::_State_baseV2>&)
 [190] std::vector<bool, std::allocator<bool> >::operator[](unsigned long long) const [352] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::__allocated_ptr(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*) [296] std::remove_reference<std::shared_ptr<std::packaged_task<sf::Image ()> >&>::type&& std::move<std::shared_ptr<std::packaged_task<sf::Image ()> >&>(std::shared_ptr<std::packaged_task<sf::Image ()> >&)
 [301] std::vector<unsigned char, std::allocator<unsigned char> >::end() const [350] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::~__allocated_ptr() [375] std::remove_reference<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&>(std::unique_ptr<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>&)
 [302] std::vector<unsigned char, std::allocator<unsigned char> >::size() const [491] std::__allocated_ptr<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::operator=(decltype(nullptr)) [262] std::remove_reference<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&>(std::_Tuple_impl<1ull, std::__future_base::_Result_base::_Deleter>&)
 [293] std::vector<unsigned char, std::allocator<unsigned char> >::begin() const [506] std::__exception_ptr::exception_ptr::exception_ptr(decltype(nullptr)) [705] std::remove_reference<std::_Tuple_impl<1ull, ThreadPool*>&>::type&& std::move<std::_Tuple_impl<1ull, ThreadPool*>&>(std::_Tuple_impl<1ull, ThreadPool*>&)
 [778] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_is_local() const [403] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_deleter() [273] std::remove_reference<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&>(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
 [779] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_local_data() const [261] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::_M_ptr() [635] std::remove_reference<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>::type&& std::move<std::tuple<void (ThreadPool::*)(), ThreadPool*>&>(std::tuple<void (ThreadPool::*)(), ThreadPool*>&)
 [780] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_get_allocator() const [445] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [299] std::remove_reference<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>::type&& std::move<std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&>(std::tuple<std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter>&)
 [643] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::_M_data() const [429] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl() [357] std::remove_reference<std::future<sf::Image>&>::type&& std::move<std::future<sf::Image>&>(std::future<sf::Image>&)
 [781] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >::max_size() const [325] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base*, std::__future_base::_Result_base::_Deleter&&) [872] std::remove_reference<std::vector<bool, std::allocator<bool> >&>::type&& std::move<std::vector<bool, std::allocator<bool> >&>(std::vector<bool, std::allocator<bool> >&)
 [782] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_is_local() const [329] std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>::operator=(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&&) [374] std::remove_reference<std::function<void ()>&>::type&& std::move<std::function<void ()>&>(std::function<void ()>&)
 [783] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_local_data() const [265] std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_deleter() [223] std::remove_reference<std::_Any_data&>::type&& std::move<std::_Any_data&>(std::_Any_data&)
 [724] std::__cxx11::basic_string<unsigned int, std::char_traits<unsigned int>, std::allocator<unsigned int> >::_M_data() const [220] std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::_M_ptr() [706] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::thread::id> >, std::is_move_constructible<std::thread::id>, std::is_move_assignable<std::thread::id> >::value, void>::type std::swap<std::thread::id>(std::thread::id&, std::thread::id&)
  [84] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>::operator()() const [503] std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl(std::__future_base::_Result<sf::Image>*) [368] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >, std::is_move_constructible<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>, std::is_move_assignable<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)> >::value, void>::type std::swap<bool (*)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation)>(bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation), bool (*&)(std::_Any_data&, std::_Any_data const&, std::_Manager_operation))
  [90] std::function<void ()>::operator()() const [433] std::__uniq_ptr_impl<std::__future_base::_Result<sf::Image>, std::__future_base::_Result_base::_Deleter>::__uniq_ptr_impl<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result<sf::Image>*, std::__future_base::_Result_base::_Deleter&&) [365] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<void (*)(std::_Any_data const&)> >, std::is_move_constructible<void (*)(std::_Any_data const&)>, std::is_move_assignable<void (*)(std::_Any_data const&)> >::value, void>::type std::swap<void (*)(std::_Any_data const&)>(void (*&)(std::_Any_data const&), void (*&)(std::_Any_data const&))
 [380] std::_Any_data::_M_access() const [626] std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::_M_ptr() [395] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__future_base::_State_baseV2*> >, std::is_move_constructible<std::__future_base::_State_baseV2*>, std::is_move_assignable<std::__future_base::_State_baseV2*> >::value, void>::type std::swap<std::__future_base::_State_baseV2*>(std::__future_base::_State_baseV2*&, std::__future_base::_State_baseV2*&)
 [725] std::allocator<std::function<void ()>*>::allocator<std::function<void ()> >(std::allocator<std::function<void ()> > const&) [679] std::__uniq_ptr_impl<std::thread::_State, std::default_delete<std::thread::_State> >::__uniq_ptr_impl(std::thread::_State*) [498] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >, std::is_move_constructible<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >, std::is_move_assignable<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> > >::value, void>::type std::swap<std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> >(std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&, std::__uniq_ptr_impl<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter>&)
 [726] std::allocator<std::function<void ()>*>::~allocator() [228] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_release() [369] std::enable_if<std::__and_<std::__not_<std::__is_tuple_like<std::_Any_data> >, std::is_move_constructible<std::_Any_data>, std::is_move_assignable<std::_Any_data> >::value, void>::type std::swap<std::_Any_data>(std::_Any_data&, std::_Any_data&)
 [294] std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [270] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_M_add_ref_copy() [589] void (ThreadPool::*&&std::forward<void (ThreadPool::*)()>(std::remove_reference<void (ThreadPool::*)()>::type&))()
 [418] std::allocator<std::packaged_task<sf::Image ()> >::allocator() [307] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::_Sp_counted_base() [378] void (std::__future_base::_State_baseV2::*&&std::forward<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>(std::remove_reference<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)>::type&))(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*)
 [419] std::allocator<std::packaged_task<sf::Image ()> >::allocator(std::allocator<std::packaged_task<sf::Image ()> > const&) [291] std::_Sp_counted_base<(__gnu_cxx::_Lock_policy)2>::~_Sp_counted_base() [207] std::__future_base::_Result_base::_Deleter&& std::forward<std::__future_base::_Result_base::_Deleter>(std::remove_reference<std::__future_base::_Result_base::_Deleter>::type&)
 [277] std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [815] std::allocator_traits<std::allocator<std::function<void ()>*> >::deallocate(std::allocator<std::function<void ()>*>&, std::function<void ()>**, unsigned long long) [636] std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> >&& std::forward<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >(std::remove_reference<std::thread::_Invoker<std::tuple<void (ThreadPool::*)(), ThreadPool*> > >::type&)
 [438] std::allocator<std::packaged_task<sf::Image ()> >::~allocator() [816] std::allocator_traits<std::allocator<std::function<void ()>*> >::allocate(std::allocator<std::function<void ()>*>&, unsigned long long) [707] void (ThreadPool::*&&std::forward<void (ThreadPool::*&&)()>(std::remove_reference<void (ThreadPool::*&&)()>::type&))()
 [328] std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::allocator<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> > const&) [446] void std::allocator_traits<std::allocator<std::packaged_task<sf::Image ()> > >::destroy<std::packaged_task<sf::Image ()> >(std::allocator<std::packaged_task<sf::Image ()> >&, std::packaged_task<sf::Image ()>*) [708] ThreadPool*&& std::forward<ThreadPool*&&>(std::remove_reference<ThreadPool*&&>::type&)
 [379] std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >::~allocator() [434] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::deallocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>*, unsigned long long) [587] ThreadPool*&& std::forward<ThreadPool*>(std::remove_reference<ThreadPool*>::type&)
 [547] std::allocator<std::future<sf::Image> >::allocator() [414] std::allocator_traits<std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> > >::allocate(std::allocator<std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2> >&, unsigned long long) [233] std::__future_base::_Result_base*&& std::forward<std::__future_base::_Result_base*>(std::remove_reference<std::__future_base::_Result_base*>::type&)
 [548] std::allocator<std::future<sf::Image> >::~allocator() [554] std::allocator_traits<std::allocator<std::future<sf::Image> > >::deallocate(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, unsigned long long) [283] std::__future_base::_State_baseV2*&& std::forward<std::__future_base::_State_baseV2*>(std::remove_reference<std::__future_base::_State_baseV2*>::type&)
 [784] std::allocator<std::thread>::allocator() [555] std::allocator_traits<std::allocator<std::future<sf::Image> > >::allocate(std::allocator<std::future<sf::Image> >&, unsigned long long) [282] std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&& std::forward<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>(std::remove_reference<std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*>::type&)
 [785] std::allocator<std::thread>::~allocator() [556] std::allocator_traits<std::allocator<std::future<sf::Image> > >::max_size(std::allocator<std::future<sf::Image> > const&) [284] bool*&& std::forward<bool*>(std::remove_reference<bool*>::type&)
 [786] std::allocator<std::function<void ()> >::allocator() [488] void std::allocator_traits<std::allocator<std::future<sf::Image> > >::construct<std::future<sf::Image>, std::future<sf::Image> >(std::allocator<std::future<sf::Image> >&, std::future<sf::Image>*, std::future<sf::Image>&&) [214] std::allocator<int> const& std::forward<std::allocator<int> const&>(std::remove_reference<std::allocator<int> const&>::type&)
 [787] std::allocator<std::function<void ()> >::~allocator() [680] std::allocator_traits<std::allocator<std::thread> >::deallocate(std::allocator<std::thread>&, std::thread*, unsigned long long) [215] std::__future_base::_Result_base*& std::forward<std::__future_base::_Result_base*&>(std::remove_reference<std::__future_base::_Result_base*&>::type&)
 [727] std::allocator<bool>::allocator() [681] std::allocator_traits<std::allocator<std::thread> >::allocate(std::allocator<std::thread>&, unsigned long long) [266] std::__future_base::_Result<sf::Image>*& std::forward<std::__future_base::_Result<sf::Image>*&>(std::remove_reference<std::__future_base::_Result<sf::Image>*&>::type&)
 [728] std::allocator<bool>::~allocator() [627] std::allocator_traits<std::allocator<std::thread> >::max_size(std::allocator<std::thread> const&) [280] std::future<sf::Image>&& std::forward<std::future<sf::Image> >(std::remove_reference<std::future<sf::Image> >::type&)
 [319] std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [682] void std::allocator_traits<std::allocator<std::thread> >::construct<std::thread, void (ThreadPool::*)(), ThreadPool*>(std::allocator<std::thread>&, std::thread*, void (ThreadPool::*&&)(), ThreadPool*&&) [709] std::thread&& std::forward<std::thread>(std::remove_reference<std::thread>::type&)
 [320] std::allocator<unsigned char>::allocator(std::allocator<unsigned char> const&) [580] std::allocator_traits<std::allocator<std::function<void ()> > >::deallocate(std::allocator<std::function<void ()> >&, std::function<void ()>*, unsigned long long) [534] void std::_Destroy<std::future<sf::Image>*>(std::future<sf::Image>*, std::future<sf::Image>*)
 [381] std::allocator<unsigned char>::~allocator() [94] void std::allocator_traits<std::allocator<std::function<void ()> > >::destroy<std::function<void ()> >(std::allocator<std::function<void ()> >&, std::function<void ()>*) [535] void std::_Destroy<std::future<sf::Image>*, std::future<sf::Image> >(std::future<sf::Image>*, std::future<sf::Image>*, std::allocator<std::future<sf::Image> >&)
 [345] std::allocator<int>::allocator(std::allocator<int> const&) [583] std::allocator_traits<std::allocator<std::function<void ()> > >::allocate(std::allocator<std::function<void ()> >&, unsigned long long) [649] void std::_Destroy<std::thread*>(std::thread*, std::thread*)
 [424] std::allocator<int>::allocator() [817] std::allocator_traits<std::allocator<char> >::deallocate(std::allocator<char>&, char*, unsigned long long) [650] void std::_Destroy<std::thread*, std::thread>(std::thread*, std::thread*, std::allocator<std::thread>&)
 [348] std::allocator<int>::allocator(std::allocator<int> const&) [818] std::allocator_traits<std::allocator<char> >::allocate(std::allocator<char>&, unsigned long long) [873] void std::_Destroy<std::function<void ()>*>(std::function<void ()>*, std::function<void ()>*)
 [276] std::allocator<int>::~allocator() [819] std::allocator_traits<std::allocator<char> >::max_size(std::allocator<char> const&) [874] void std::_Destroy<std::function<void ()>*, std::function<void ()> >(std::function<void ()>*, std::function<void ()>*, std::allocator<std::function<void ()> >&)
 [287] std::allocator<int>::~allocator() [339] std::allocator_traits<std::allocator<unsigned char> >::select_on_container_copy_construction(std::allocator<unsigned char> const&) [392] void std::_Destroy<std::future<sf::Image> >(std::future<sf::Image>*)
 [788] std::allocator<unsigned int>::~allocator() [315] std::allocator_traits<std::allocator<unsigned char> >::allocate(std::allocator<unsigned char>&, unsigned long long) [637] void std::_Destroy<std::thread>(std::thread*)
 [729] std::allocator<unsigned long>::allocator<bool>(std::allocator<bool> const&) [820] std::allocator_traits<std::allocator<unsigned int> >::deallocate(std::allocator<unsigned int>&, unsigned int*, unsigned long long) [25] std::__invoke_result<void (ThreadPool::*)(), ThreadPool*>::type std::__invoke<void (ThreadPool::*)(), ThreadPool*>(void (ThreadPool::*&&)(), ThreadPool*&&)
 [730] std::allocator<unsigned long>::allocator(std::allocator<unsigned long> const&) [739] std::allocator_traits<std::allocator<unsigned long> >::deallocate(std::allocator<unsigned long>&, unsigned long*, unsigned long long) [82] std::__invoke_result<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>::type std::__invoke<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
 [789] std::allocator<unsigned long>::allocator() [740] std::allocator_traits<std::allocator<unsigned long> >::allocate(std::allocator<unsigned long>&, unsigned long long) [875] std::iterator_traits<bool const*>::difference_type std::distance<bool const*>(bool const*, bool const*)
 [731] std::allocator<unsigned long>::~allocator() [571] std::_Bit_iterator_base::_M_bump_up() [876] std::iterator_traits<char const*>::difference_type std::distance<char const*>(char const*, char const*)
 [661] std::allocator<unsigned long>::~allocator() [741] std::_Bit_iterator_base::_M_incr(long long) [877] char const* std::addressof<char const>(char const&)
 [618] std::_Head_base<0ull, void (ThreadPool::*)(), false>::_M_head(std::_Head_base<0ull, void (ThreadPool::*)(), false>&) [187] std::_Bit_iterator_base::_Bit_iterator_base(unsigned long*, unsigned int) [878] unsigned int const* std::addressof<unsigned int const>(unsigned int const&)
 [619] std::_Head_base<0ull, void (ThreadPool::*)(), false>::_Head_base<void (ThreadPool::*)()>(void (ThreadPool::*&&)()) [523] void std::condition_variable::wait<ThreadPool::task()::{lambda()#1}>(std::unique_lock<std::mutex>&, ThreadPool::task()::{lambda()#1}) [879] char* std::addressof<char>(char&)
 [322] std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false> const&) [189] std::_Bit_const_iterator::_Bit_const_iterator(unsigned long*, unsigned int) [510] void std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)
 [212] std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result_base*, false>&) [557] std::future<sf::Image>* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*>, std::move_iterator<std::future<sf::Image>*>, std::future<sf::Image>*) [565] bool std::operator==<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&)
 [431] std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base() [628] std::thread* std::__uninitialized_copy<false>::__uninit_copy<std::move_iterator<std::thread*>, std::thread*>(std::move_iterator<std::thread*>, std::move_iterator<std::thread*>, std::thread*) [609] bool std::operator==<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&)
 [313] std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*&>(std::__future_base::_Result_base*&) [304] unsigned char* std::__uninitialized_copy<true>::__uninit_copy<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*>(__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, __gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigned char> > >, unsigned char*) [362] bool std::operator==<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*> const&)
 [425] std::_Head_base<0ull, std::__future_base::_Result_base*, false>::_Head_base<std::__future_base::_Result_base*>(std::__future_base::_Result_base*&&) [519] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_destroy() [638] std::operator==(std::thread::id, std::thread::id)
 [247] std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false> const&) [520] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_dispose() [566] bool std::operator!=<std::future<sf::Image>*>(std::move_iterator<std::future<sf::Image>*> const&, std::move_iterator<std::future<sf::Image>*> const&)
 [216] std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_M_head(std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>&) [492] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_get_deleter(std::type_info const&) [610] bool std::operator!=<std::thread*>(std::move_iterator<std::thread*> const&, std::move_iterator<std::thread*> const&)
 [485] std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base() [363] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_M_alloc() [382] ThreadPool::task()::{lambda()#1}::operator()() const
 [467] std::_Head_base<0ull, std::__future_base::_Result<sf::Image>*, false>::_Head_base<std::__future_base::_Result<sf::Image>*&>(std::__future_base::_Result<sf::Image>*&) [415] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::_Impl(std::allocator<std::packaged_task<sf::Image ()> >) [85] std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator()() const
 [620] std::_Head_base<0ull, std::thread::_State*, false>::_M_head(std::_Head_base<0ull, std::thread::_State*, false>&) [449] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_Impl::~_Impl() [527] std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#2}::operator void (*)()() const
 [662] std::_Head_base<0ull, std::thread::_State*, false>::_Head_base() [272] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::_M_ptr() [86] std::call_once<void (std::__future_base::_State_baseV2::*)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*>(std::once_flag&, void (std::__future_base::_State_baseV2::*&&)(std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*, bool*), std::__future_base::_State_baseV2*&&, std::function<std::unique_ptr<std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter> ()>*&&, bool*&&)::{lambda()#1}::operator()() const
 [209] std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_M_head(std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>&) [450] std::_Sp_counted_ptr_inplace<std::packaged_task<sf::Image ()>, std::allocator<std::packaged_task<sf::Image ()> >, (__gnu_cxx::_Lock_policy)2>::~_Sp_counted_ptr_inplace() [213] operator new(unsigned long long, void*)
 [342] std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base() [470] std::__atomic_futex_unsigned<2147483648u>::__atomic_futex_unsigned(unsigned int) [206] __gcc_deregister_frame
 [234] std::_Head_base<1ull, std::__future_base::_Result_base::_Deleter, true>::_Head_base<std::__future_base::_Result_base::_Deleter>(std::__future_base::_Result_base::_Deleter&&) [416] std::__atomic_futex_unsigned<2147483648u>::~__atomic_futex_unsigned() [101] main
 [621] std::_Head_base<1ull, ThreadPool*, false>::_M_head(std::_Head_base<1ull, ThreadPool*, false>&) [197] std::array<float, 2ull>::operator[](unsigned long long) [1] <cycle 1>
 [622] std::_Head_base<1ull, ThreadPool*, false>::_Head_base<ThreadPool*>(ThreadPool*&&) [821] std::deque<std::function<void ()>, std::allocator<std::function<void ()> > >::_M_destroy_data(std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::_Deque_iterator<std::function<void ()>, std::function<void ()>&, std::function<void ()>*>, std::allocator<std::function<void ()> > const&)
